load "/usr/share/ncarg/nclscripts/csm/gsn_code.ncl"
load "/usr/share/ncarg/nclscripts/csm/gsn_csm.ncl"
load "/usr/share/ncarg/nclscripts/csm/contributed.ncl"
load "/usr/share/ncarg/nclscripts/csm/shea_util.ncl"

load "/scratch/local1/tbruecher/git/ncl/libs/climba_calc.ncl"

;load "$NCARG_ROOT/lib/ncarg/nclscripts/csm/gsn_code.ncl"
;load "$NCARG_ROOT/lib/ncarg/nclscripts/csm/gsn_csm.ncl"
;load "$NCARG_ROOT/lib/ncarg/nclscripts/csm/contributed.ncl"
;load "$NCARG_ROOT/lib/ncarg/nclscripts/csm/shea_util.ncl"

;load "/Users/tbruecher/Documents/scripts/plot/ncl/libs/climba_calc.ncl"



; constants
MyFillValue=-9e+33


undef ("def_colormap")
function def_colormap ()
local cmap
begin
   ; ###============================================================
   ; ###
   ; ### color table for climba plots
   ; ###
   ; ### 2012 Tim Bruecher
   ; ###
   ; ###============================================================
   ; # white                        #            0
   ; # black                        #            1
   ; # abs. carbon pool             # 11 colors  2 -> 12
   ; # dif. carbon pool             # 13 colors 13 -> 25
   ; # abs. cover fraction          # 12 colors 26 -> 37
   ; # dif. cover fraction          # 13 colors 38 -> 50
   ; # abs. desert fraction         # 12 colors 51 -> 62
   ; # dif. desert fraction         # 13 colors 63 -> 75
   ; # abs. fire fraction           # 10 colors 76 -> 85
   ; # dif. fire fraction           # 11 colors 86 -> 96
   ; # abs. precipitation           #  7 colors 97 -> 103
   ; # dif. precipitation           # 13 colors 104 -> 116
   ; # precipitation (brown->bue)   # 10 colors 117 -> 127
   ; # temperature (blue->red)      # 14 colors 128 -> 139
   ; #
   ; ###============================================================
   cmap = (/ "(/ 1.000, 1.000, 1.000/)", \    ; color no     0 white
             "(/ 0.000, 0.000, 0.000/)", \    ; color no     1 black        ##============================================================
             "(/ 0.949, 0.855, 0.804/)", \    ; color no     2 light brown  # carbon pool absolute values
             "(/ 0.898, 0.773, 0.698/)", \    ; color no     3              # number of colors in table
             "(/ 0.847, 0.686, 0.592/)", \    ; color no     4              # ncolors = 11
             "(/ 0.824, 0.647, 0.537/)", \    ; color no     5
             "(/ 0.800, 0.608, 0.478/)", \    ; color no     6
             "(/ 0.698, 0.494, 0.345/)", \    ; color no     7
             "(/ 0.600, 0.376, 0.208/)", \    ; color no     8
             "(/ 0.490, 0.282, 0.106/)", \    ; color no     9
             "(/ 0.400, 0.188, 0.000/)", \    ; color no    10
             "(/ 0.302, 0.145, 0.000/)", \    ; color no    11
             "(/ 0.200, 0.098, 0.000/)", \    ; color no    12 dark brown   ##============================================================
             "(/ 0.094, 0.471, 0.612/)", \    ; color no    13 dark blue    # carbon pool differences
             "(/ 0.141, 0.659, 0.816/)", \    ; color no    14              # number of colors in table
             "(/ 0.282, 0.886, 1.000/)", \    ; color no    15              # ncolors = 13
             "(/ 0.447, 0.933, 1.000/)", \    ; color no    16
             "(/ 0.627, 0.969, 1.000/)", \    ; color no    17
             "(/ 0.812, 0.992, 1.000/)", \    ; color no    18
             "(/ 1.000, 1.000, 1.000/)", \    ; color no    19 white
             "(/ 0.945, 0.855, 0.796/)", \    ; color no    20
             "(/ 0.839, 0.690, 0.580/)", \    ; color no    21
             "(/ 0.792, 0.604, 0.459/)", \    ; color no    22
             "(/ 0.592, 0.380, 0.173/)", \    ; color no    23
             "(/ 0.392, 0.188, 0.000/)", \    ; color no    24
             "(/ 0.196, 0.094, 0.000/)", \    ; color no    25 dark brown   ##============================================================
             "(/ 1.000, 1.000, 1.000/)", \    ; color no    26 white        # green cover fraction - absolute values -
             "(/ 0.867, 0.937, 0.827/)", \    ; color no    27              # number of colors in table
             "(/ 0.737, 0.886, 0.663/)", \    ; color no    28              # ncolors = 12 colors
             "(/ 0.604, 0.831, 0.490/)", \    ; color no    29
             "(/ 0.475, 0.769, 0.329/)", \    ; color no    30
             "(/ 0.365, 0.722, 0.216/)", \    ; color no    31
             "(/ 0.267, 0.675, 0.020/)", \    ; color no    32
             "(/ 0.180, 0.631, 0.000/)", \    ; color no    33
             "(/ 0.145, 0.561, 0.000/)", \    ; color no    34
             "(/ 0.122, 0.475, 0.000/)", \    ; color no    35
             "(/ 0.094, 0.392, 0.051/)", \    ; color no    36
             "(/ 0.063, 0.310, 0.110/)", \    ; color no    37 dark green   ##============================================================
             "(/ 0.502, 0.063, 0.541/)", \    ; color no    38 magenta      # cover fraction - differences -
             "(/ 0.706, 0.102, 0.757/)", \    ; color no    39              # number of colors in table
             "(/ 0.910, 0.149, 0.976/)", \    ; color no    40              # ncolors = 13 colors
             "(/ 0.973, 0.294, 1.000/)", \    ; color no    41
             "(/ 0.980, 0.514, 1.000/)", \    ; color no    42
             "(/ 0.984, 0.729, 1.000/)", \    ; color no    43
             "(/ 1.000, 1.000, 1.000/)", \    ; color no    44 white
             "(/ 0.580, 0.992, 0.447/)", \    ; color no    45
             "(/ 0.424, 0.992, 0.000/)", \    ; color no    46
             "(/ 0.259, 0.945, 0.000/)", \    ; color no    47
             "(/ 0.200, 0.729, 0.000/)", \    ; color no    48
             "(/ 0.125, 0.525, 0.000/)", \    ; color no    49
             "(/ 0.055, 0.275, 0.000/)", \    ; color no    50 dark green   ##============================================================
             "(/ 0.976, 0.957, 0.745/)", \    ; color no    51              # desert fraction - absolute values -
             "(/ 0.965, 0.929, 0.690/)", \    ; color no    52              # number of colors in table
             "(/ 0.949, 0.914, 0.627/)", \    ; color no    53              # ncolrs = 12 colors
             "(/ 0.922, 0.878, 0.533/)", \    ; color no    54
             "(/ 0.886, 0.827, 0.420/)", \    ; color no    55
             "(/ 0.855, 0.780, 0.298/)", \    ; color no    56
             "(/ 0.824, 0.714, 0.153/)", \    ; color no    57
             "(/ 0.808, 0.671, 0.000/)", \    ; color no    58
             "(/ 0.796, 0.616, 0.000/)", \    ; color no    59
             "(/ 0.714, 0.533, 0.000/)", \    ; color no    60
             "(/ 0.627, 0.439, 0.047/)", \    ; color no    61
             "(/ 0.529, 0.353, 0.125/)", \    ; color no    62              ##============================================================
             "(/ 0.055, 0.310, 0.000/)", \    ; color no    63 dark green   # desert fraction - differences -
             "(/ 0.125, 0.525, 0.000/)", \    ; color no    64              # number of colors in table
             "(/ 0.200, 0.729, 0.000/)", \    ; color no    65              # ncolors = 13 colors
             "(/ 0.259, 0.945, 0.000/)", \    ; color no    66
             "(/ 0.624, 0.992, 0.200/)", \    ; color no    67
             "(/ 0.780, 0.992, 0.447/)", \    ; color no    68
             "(/ 1.000, 1.000, 1.000/)", \    ; color no    69 white
             "(/ 0.984, 0.729, 1.000/)", \    ; color no    70
             "(/ 0.980, 0.514, 1.000/)", \    ; color no    71
             "(/ 0.973, 0.294, 1.000/)", \    ; color no    72
             "(/ 0.910, 0.149, 0.976/)", \    ; color no    73
             "(/ 0.706, 0.102, 0.757/)", \    ; color no    74
             "(/ 0.502, 0.063, 0.541/)", \    ; color no    75 magente      ##============================================================
             "(/ 1.000, 1.000, 1.000/)", \    ; color no    76 white        # fire absolute values
             "(/ 0.988, 0.953, 0.718/)", \    ; color no    77 yellow       # taken from WhiteYellowOrangeRed.rgb
             "(/ 0.976, 0.878, 0.443/)", \    ; color no    78              # number of colors in table
             "(/ 0.973, 0.741, 0.184/)", \    ; color no    79              # ncolors=10
             "(/ 0.953, 0.569, 0.000/)", \    ; color no    80
             "(/ 0.922, 0.396, 0.035/)", \    ; color no    81
             "(/ 0.859, 0.235, 0.078/)", \    ; color no    82
             "(/ 0.776, 0.086, 0.102/)", \    ; color no    83
             "(/ 0.624, 0.043, 0.086/)", \    ; color no    84
             "(/ 0.475, 0.043, 0.063/)", \    ; color no    85              ##============================================================
             "(/ 0.0078, 0.3059, 0.6000/)", \    ; color no    86 dark blue    # fire differences
             "(/ 0.1059, 0.4275, 0.7020/)", \    ; color no    87              # taken from temp_diff_18lev.rgb
             "(/ 0.2431, 0.6547, 0.7647/)", \    ; color no    88              # number of colors in table
             "(/ 0.6588,0.8588, 0.8941/)", \    ; color no    89              # ncolors = 11
             "(/ 0.8549,0.9569,1.000/)", \    ; color no    90
             "(/ 1.000, 1.000, 1.000/)", \    ; color no    91 white
             "(/ 0.9922,0.7255,0.6706/)", \    ; color no    92
             "(/ 0.9882,0.5686,0.4510/)", \    ; color no    93
             "(/ 0.8118,0.0745,0.1176/)", \    ; color no    94
             "(/ 0.6510,0.0510,0.0745/)", \    ; color no    95
             "(/ 0.4745, 0.0275, 0.0588/)", \    ; color no    96 dark red     ##============================================================
             "(/ 0.973, 0.973, 0.455/)", \    ; color no    97 yellow       # absolut precipitation
             "(/ 0.733, 0.875, 0.624/)", \    ; color no    98              # taken from lost-river paper
             "(/ 0.463, 0.788, 0.776/)", \    ; color no    99              # number of colors in table
             "(/ 0.012, 0.702, 0.961/)", \    ; color no   100              # ncolors = 7
             "(/ 0.059, 0.443, 0.769/)", \    ; color no   101
             "(/ 0.027, 0.188, 0.561/)", \    ; color no   102
             "(/ 0.004, 0.059, 0.416/)", \    ; color no   103 blue         ##============================================================
             "(/ 0.200, 0.094, 0.000/)", \    ; color no   104 brown        # differences in precipitation (lost-river)
             "(/ 0.400, 0.184, 0.000/)", \    ; color no   105              # number of colors in table
             "(/ 0.600, 0.376, 0.208/)", \    ; color no   106              # ncolors = 13
             "(/ 0.800, 0.608, 0.478/)", \    ; color no   107
             "(/ 0.847, 0.686, 0.592/)", \    ; color no   108
             "(/ 0.949, 0.855, 0.804/)", \    ; color no   109
             "(/ 1.000, 1.000, 1.000/)", \    ; color no   110 white
             "(/ 0.800, 0.992, 0.996/)", \    ; color no   111
             "(/ 0.600, 0.973, 1.000/)", \    ; color no   112
             "(/ 0.396, 0.937, 1.000/)", \    ; color no   113
             "(/ 0.216, 0.890, 1.000/)", \    ; color no   114
             "(/ 0.145, 0.663, 0.800/)", \    ; color no   115
             "(/ 0.094, 0.478, 0.600/)", \    ; color no   116 blue         ##============================================================
             "(/ 0.710, 0.420, 0.153/)", \    ; color no   117 brown        # differences and absolute values for precipitation (brown->bue)
             "(/ 0.800, 0.518, 0.247/)", \    ; color no   118              # number of colors in table
             "(/ 0.878, 0.647, 0.388/)", \    ; color no   119              # ncolors = 11
             "(/ 0.957, 0.800, 0.518/)", \    ; color no   120
             "(/ 1.000, 0.957, 0.729/)", \    ; color no   121
             "(/ 0.800, 1.000, 0.800/)", \    ; color no   122
             "(/ 0.600, 0.953, 0.698/)", \    ; color no   123
             "(/ 0.329, 0.737, 0.620/)", \    ; color no   124
             "(/ 0.427, 0.671, 0.773/)", \    ; color no   125
             "(/ 0.067, 0.439, 0.686/)", \    ; color no   126
             "(/ 0.024, 0.118, 0.267/)", \    ; color no   127 blue         ##============================================================
             "(/ 0.027, 0.318, 0.608/)", \    ; color no   128              # differences in temperature (blue->red)
             "(/ 0.129, 0.439, 0.710/)", \    ; color no   129              # number of colors in table
             "(/ 0.259, 0.569, 0.776/)", \    ; color no   130              # ncolors = 12
             "(/ 0.467, 0.753, 0.839/)", \    ; color no   131
             "(/ 0.667, 0.859, 0.898/)", \    ; color no   132
             "(/ 0.859, 0.957, 1.000/)", \    ; color no   133
             "(/ 0.988, 0.729, 0.667/)", \    ; color no   134
             "(/ 0.984, 0.569, 0.447/)", \    ; color no   135
             "(/ 0.937, 0.239, 0.169/)", \    ; color no   136
             "(/ 0.800, 0.086, 0.118/)", \    ; color no   137
             "(/ 0.647, 0.059, 0.078/)", \    ; color no   138
             "(/ 0.467, 0.039, 0.059/)", \    ; color no   139
             "(/ 0.952941176, 0.980392157,	0.992156863/)", \    ; color no 140 white ##============================================================
             "(/ 0.905882353,	0.960784314,	0.984313725/)", \    ; color no 141
             "(/ 0.858823529,	0.945098039,	0.980392157/)", \    ; color no 142
             "(/ 0.792156863,	0.917647059,	0.976470588/)", \    ; color no 143
             "(/ 0.721568627,	0.894117647,	0.97254902/)", \    ; color no  144
             "(/ 0.650980392,	0.866666667,	0.968627451/)", \    ; color no 145
             "(/ 0.564705882,	0.815686275,	0.945098039/)", \    ; color no 146
             "(/ 0.478431373,	0.749019608,	0.909803922/)", \    ; color no 147
             "(/ 0.392156863,	0.682352941,	0.870588235/)", \    ; color no 148
             "(/ 0.31372549,	0.603921569,	0.819607843/)", \    ; color no 149
             "(/ 0.250980392,	0.51372549,	0.760784314/)", \    ; color no   150
             "(/ 0.192156863,	0.423529412,	0.701960784/)", \    ; color no 151
             "(/ 0.137254902,	0.333333333,	0.62745098/)", \    ; color no   152
             "(/ 0.125490196,	0.278431373,	0.545098039/)", \    ; color no   153
             "(/ 0.117647059,	0.223529412,	0.462745098/)", \    ; color no   154 dark blue ##============================================================
             "turquoise1" /)                  ; myOceanColor                ## now named colors are following

   return cmap
end



function def_albedo_color ()
local cmap
begin
cmap = (/ "(/ 1., 1., 1. /)","(/ 0, 0, 0 /)",\
        "(/ .93750000000000000000, .93750000000000000000, .93750000000000000000 /)",\
        "(/ .94140625000000000000, .94140625000000000000, .89453125000000000000 /)",\
        "(/ .94921875000000000000, .94921875000000000000, .85156250000000000000 /)",\
        "(/ .95703125000000000000, .95703125000000000000, .81250000000000000000 /)",\
        "(/ .96484375000000000000, .96484375000000000000, .76953125000000000000 /)",\
        "(/ .97265625000000000000, .97265625000000000000, .72656250000000000000 /)",\
        "(/ .98046875000000000000, .98046875000000000000, .68750000000000000000 /)",\
        "(/ .98828125000000000000, .98828125000000000000, .64453125000000000000 /)",\
        "(/ .99218750000000000000, .98437500000000000000, .63671875000000000000 /)",\
        "(/ .99218750000000000000, .97656250000000000000, .64843750000000000000 /)",\
        "(/ .99218750000000000000, .96875000000000000000, .66015625000000000000 /)",\
        "(/ .99218750000000000000, .96093750000000000000, .67578125000000000000 /)",\
        "(/ .99218750000000000000, .95312500000000000000, .68750000000000000000 /)",\
        "(/ .99218750000000000000, .94921875000000000000, .69921875000000000000 /)",\
        "(/ .99218750000000000000, .94140625000000000000, .71093750000000000000 /)",\
        "(/ .99218750000000000000, .93359375000000000000, .72265625000000000000 /)",\
        "(/ .98828125000000000000, .92187500000000000000, .70312500000000000000 /)",\
        "(/ .98828125000000000000, .91015625000000000000, .67578125000000000000 /)",\
        "(/ .98437500000000000000, .89843750000000000000, .65234375000000000000 /)",\
        "(/ .98437500000000000000, .88671875000000000000, .62890625000000000000 /)",\
        "(/ .98437500000000000000, .87500000000000000000, .60546875000000000000 /)",\
        "(/ .98046875000000000000, .86718750000000000000, .57812500000000000000 /)",\
        "(/ .98046875000000000000, .85546875000000000000, .55468750000000000000 /)",\
        "(/ .98046875000000000000, .84375000000000000000, .53125000000000000000 /)",\
        "(/ .97656250000000000000, .83203125000000000000, .50781250000000000000 /)",\
        "(/ .97656250000000000000, .82031250000000000000, .48046875000000000000 /)",\
        "(/ .97265625000000000000, .80859375000000000000, .45703125000000000000 /)",\
        "(/ .94531250000000000000, .79687500000000000000, .45312500000000000000 /)",\
        "(/ .91406250000000000000, .78125000000000000000, .44531250000000000000 /)",\
        "(/ .88671875000000000000, .76562500000000000000, .44140625000000000000 /)",\
        "(/ .85937500000000000000, .75390625000000000000, .43359375000000000000 /)",\
        "(/ .83203125000000000000, .73828125000000000000, .42578125000000000000 /)",\
        "(/ .80078125000000000000, .72656250000000000000, .42187500000000000000 /)",\
        "(/ .77343750000000000000, .71093750000000000000, .41406250000000000000 /)",\
        "(/ .74609375000000000000, .69921875000000000000, .41015625000000000000 /)",\
        "(/ .71875000000000000000, .68359375000000000000, .40234375000000000000 /)",\
        "(/ .69140625000000000000, .67187500000000000000, .39843750000000000000 /)",\
        "(/ .69921875000000000000, .69140625000000000000, .40234375000000000000 /)",\
        "(/ .70703125000000000000, .71484375000000000000, .40625000000000000000 /)",\
        "(/ .71484375000000000000, .73437500000000000000, .41015625000000000000 /)",\
        "(/ .72656250000000000000, .75781250000000000000, .41406250000000000000 /)",\
        "(/ .73437500000000000000, .77734375000000000000, .41796875000000000000 /)",\
        "(/ .74218750000000000000, .80078125000000000000, .42578125000000000000 /)",\
        "(/ .75000000000000000000, .82421875000000000000, .42968750000000000000 /)",\
        "(/ .76171875000000000000, .84375000000000000000, .43359375000000000000 /)",\
        "(/ .76953125000000000000, .86718750000000000000, .43750000000000000000 /)",\
        "(/ .77734375000000000000, .88671875000000000000, .44140625000000000000 /)",\
        "(/ .78515625000000000000, .91015625000000000000, .44531250000000000000 /)",\
        "(/ .79687500000000000000, .92968750000000000000, .44921875000000000000 /)",\
        "(/ .80468750000000000000, .95312500000000000000, .45703125000000000000 /)",\
        "(/ .80078125000000000000, .95703125000000000000, .45312500000000000000 /)",\
        "(/ .78125000000000000000, .94531250000000000000, .43750000000000000000 /)",\
        "(/ .76562500000000000000, .93359375000000000000, .42578125000000000000 /)",\
        "(/ .74609375000000000000, .92187500000000000000, .41015625000000000000 /)",\
        "(/ .73046875000000000000, .91015625000000000000, .39843750000000000000 /)",\
        "(/ .71093750000000000000, .89843750000000000000, .38281250000000000000 /)",\
        "(/ .69140625000000000000, .88671875000000000000, .37109375000000000000 /)",\
        "(/ .67578125000000000000, .87500000000000000000, .35546875000000000000 /)",\
        "(/ .65625000000000000000, .86328125000000000000, .34375000000000000000 /)",\
        "(/ .64062500000000000000, .85156250000000000000, .32812500000000000000 /)",\
        "(/ .62109375000000000000, .83984375000000000000, .31640625000000000000 /)",\
        "(/ .60546875000000000000, .82812500000000000000, .30468750000000000000 /)",\
        "(/ .58593750000000000000, .81640625000000000000, .28906250000000000000 /)",\
        "(/ .56640625000000000000, .80468750000000000000, .27734375000000000000 /)",\
        "(/ .55078125000000000000, .78906250000000000000, .26171875000000000000 /)",\
        "(/ .53125000000000000000, .77734375000000000000, .25000000000000000000 /)",\
        "(/ .51562500000000000000, .76562500000000000000, .23437500000000000000 /)",\
        "(/ .50000000000000000000, .75781250000000000000, .22265625000000000000 /)",\
        "(/ .48828125000000000000, .75000000000000000000, .21484375000000000000 /)",\
        "(/ .47656250000000000000, .74609375000000000000, .21093750000000000000 /)",\
        "(/ .46484375000000000000, .73828125000000000000, .20312500000000000000 /)",\
        "(/ .45312500000000000000, .73437500000000000000, .19531250000000000000 /)",\
        "(/ .44140625000000000000, .72656250000000000000, .18750000000000000000 /)",\
        "(/ .42968750000000000000, .72265625000000000000, .17968750000000000000 /)",\
        "(/ .41796875000000000000, .71484375000000000000, .17187500000000000000 /)",\
        "(/ .40625000000000000000, .71093750000000000000, .16406250000000000000 /)",\
        "(/ .39453125000000000000, .70312500000000000000, .15625000000000000000 /)",\
        "(/ .38281250000000000000, .69531250000000000000, .14843750000000000000 /)",\
        "(/ .37500000000000000000, .69140625000000000000, .14062500000000000000 /)",\
        "(/ .36328125000000000000, .68359375000000000000, .13281250000000000000 /)",\
        "(/ .35156250000000000000, .67968750000000000000, .12500000000000000000 /)",\
        "(/ .33984375000000000000, .67187500000000000000, .11718750000000000000 /)",\
        "(/ .32812500000000000000, .66796875000000000000, .10937500000000000000 /)",\
        "(/ .31640625000000000000, .66015625000000000000, .10156250000000000000 /)",\
        "(/ .30468750000000000000, .65625000000000000000, .09375000000000000000 /)",\
        "(/ .29296875000000000000, .64843750000000000000, .08593750000000000000 /)",\
        "(/ .28125000000000000000, .64062500000000000000, .07812500000000000000 /)",\
        "(/ .26953125000000000000, .63671875000000000000, .07031250000000000000 /)",\
        "(/ .25781250000000000000, .62890625000000000000, .06250000000000000000 /)",\
        "(/ .24609375000000000000, .62500000000000000000, .05468750000000000000 /)",\
        "(/ .23437500000000000000, .61718750000000000000, .04687500000000000000 /)",\
        "(/ .22265625000000000000, .61328125000000000000, .03906250000000000000 /)",\
        "(/ .21484375000000000000, .60546875000000000000, .03515625000000000000 /)",\
        "(/ .21093750000000000000, .59765625000000000000, .03515625000000000000 /)",\
        "(/ .20703125000000000000, .58984375000000000000, .03906250000000000000 /)",\
        "(/ .20312500000000000000, .58203125000000000000, .04296875000000000000 /)",\
        "(/ .19921875000000000000, .57421875000000000000, .04296875000000000000 /)",\
        "(/ .19531250000000000000, .56640625000000000000, .04687500000000000000 /)",\
        "(/ .19140625000000000000, .55859375000000000000, .05078125000000000000 /)",\
        "(/ .18750000000000000000, .55468750000000000000, .05078125000000000000 /)",\
        "(/ .18359375000000000000, .54687500000000000000, .05468750000000000000 /)",\
        "(/ .17968750000000000000, .53906250000000000000, .05859375000000000000 /)",\
        "(/ .17578125000000000000, .53125000000000000000, .05859375000000000000 /)",\
        "(/ .17187500000000000000, .52343750000000000000, .06250000000000000000 /)",\
        "(/ .16796875000000000000, .51562500000000000000, .06640625000000000000 /)",\
        "(/ .16406250000000000000, .50781250000000000000, .06640625000000000000 /)",\
        "(/ .16015625000000000000, .50000000000000000000, .07031250000000000000 /)",\
        "(/ .15625000000000000000, .49218750000000000000, .07421875000000000000 /)",\
        "(/ .15234375000000000000, .48437500000000000000, .07421875000000000000 /)",\
        "(/ .14843750000000000000, .47656250000000000000, .07812500000000000000 /)",\
        "(/ .14453125000000000000, .46875000000000000000, .08203125000000000000 /)",\
        "(/ .14062500000000000000, .46093750000000000000, .08203125000000000000 /)",\
        "(/ .13671875000000000000, .45703125000000000000, .08593750000000000000 /)",\
        "(/ .13281250000000000000, .44921875000000000000, .08984375000000000000 /)",\
        "(/ .12890625000000000000, .44140625000000000000, .08984375000000000000 /)",\
        "(/ .12500000000000000000, .43359375000000000000, .09375000000000000000 /)",\
        "(/ .12109375000000000000, .42578125000000000000, .09765625000000000000 /)",\
        "(/ .11718750000000000000, .41796875000000000000, .09765625000000000000 /)",\
        "(/ .11328125000000000000, .41015625000000000000, .10156250000000000000 /)",\
        "(/ .10937500000000000000, .40234375000000000000, .10546875000000000000 /)",\
        "(/ .10546875000000000000, .39453125000000000000, .10546875000000000000 /)",\
        "(/ .10156250000000000000, .38671875000000000000, .10937500000000000000 /)",\
        "(/ .09765625000000000000, .37890625000000000000, .11328125000000000000 /)",\
        "(/ .09375000000000000000, .37109375000000000000, .11328125000000000000 /)",\
        "(/ .08984375000000000000, .36718750000000000000, .11718750000000000000 /)",\
        "(/ .08593750000000000000, .35937500000000000000, .12109375000000000000 /)",\
        "(/ .08203125000000000000, .35156250000000000000, .12109375000000000000 /)",\
        "(/ .07812500000000000000, .34375000000000000000, .12500000000000000000 /)",\
        "(/ .07421875000000000000, .33593750000000000000, .12890625000000000000 /)",\
        "(/ .07421875000000000000, .33593750000000000000, .12890625000000000000 /)",\
        "(/ .07421875000000000000, .33203125000000000000, .12890625000000000000 /)",\
        "(/ .07031250000000000000, .32812500000000000000, .12890625000000000000 /)",\
        "(/ .07031250000000000000, .32812500000000000000, .13281250000000000000 /)",\
        "(/ .07031250000000000000, .32421875000000000000, .13281250000000000000 /)",\
        "(/ .07031250000000000000, .32421875000000000000, .13281250000000000000 /)",\
        "(/ .06640625000000000000, .32031250000000000000, .13281250000000000000 /)",\
        "(/ .06640625000000000000, .31640625000000000000, .13671875000000000000 /)",\
        "(/ .06640625000000000000, .31640625000000000000, .13671875000000000000 /)",\
        "(/ .06250000000000000000, .31250000000000000000, .13671875000000000000 /)",\
        "(/ .06250000000000000000, .30859375000000000000, .13671875000000000000 /)",\
        "(/ .06250000000000000000, .30859375000000000000, .14062500000000000000 /)",\
        "(/ .05859375000000000000, .30468750000000000000, .14062500000000000000 /)",\
        "(/ .05859375000000000000, .30468750000000000000, .14062500000000000000 /)",\
        "(/ .05859375000000000000, .30078125000000000000, .14062500000000000000 /)",\
        "(/ .05468750000000000000, .29687500000000000000, .14453125000000000000 /)",\
        "(/ .05468750000000000000, .29687500000000000000, .14453125000000000000 /)",\
        "(/ .05468750000000000000, .29296875000000000000, .14453125000000000000 /)",\
        "(/ .05078125000000000000, .28906250000000000000, .14453125000000000000 /)",\
        "(/ .05078125000000000000, .28906250000000000000, .14843750000000000000 /)",\
        "(/ .05078125000000000000, .28515625000000000000, .14843750000000000000 /)",\
        "(/ .05078125000000000000, .28515625000000000000, .14843750000000000000 /)",\
        "(/ .04687500000000000000, .28125000000000000000, .14843750000000000000 /)",\
        "(/ .04687500000000000000, .27734375000000000000, .15234375000000000000 /)",\
        "(/ .04687500000000000000, .27734375000000000000, .15234375000000000000 /)",\
        "(/ .04296875000000000000, .27343750000000000000, .15234375000000000000 /)",\
        "(/ .04296875000000000000, .26953125000000000000, .15234375000000000000 /)",\
        "(/ .04296875000000000000, .26953125000000000000, .15625000000000000000 /)",\
        "(/ .03906250000000000000, .26562500000000000000, .15625000000000000000 /)",\
        "(/ .03906250000000000000, .26562500000000000000, .15625000000000000000 /)",\
        "(/ .03906250000000000000, .26171875000000000000, .15625000000000000000 /)",\
        "(/ .03515625000000000000, .25781250000000000000, .16015625000000000000 /)",\
        "(/ .03515625000000000000, .25781250000000000000, .16015625000000000000 /)",\
        "(/ .03515625000000000000, .25390625000000000000, .16015625000000000000 /)",\
        "(/ .03515625000000000000, .25390625000000000000, .16015625000000000000 /)",\
        "(/ .03125000000000000000, .25000000000000000000, .16406250000000000000 /)",\
        "(/ .03125000000000000000, .24609375000000000000, .16406250000000000000 /)",\
        "(/ .03125000000000000000, .24609375000000000000, .16406250000000000000 /)",\
        "(/ .02734375000000000000, .24218750000000000000, .16406250000000000000 /)",\
        "(/ .02734375000000000000, .23828125000000000000, .16796875000000000000 /)",\
        "(/ .02734375000000000000, .23828125000000000000, .16796875000000000000 /)",\
        "(/ .02343750000000000000, .23437500000000000000, .16796875000000000000 /)",\
        "(/ .02343750000000000000, .23437500000000000000, .16796875000000000000 /)",\
        "(/ .02343750000000000000, .23046875000000000000, .17187500000000000000 /)",\
        "(/ .01953125000000000000, .22656250000000000000, .17187500000000000000 /)",\
        "(/ .01953125000000000000, .22656250000000000000, .17187500000000000000 /)",\
        "(/ .01953125000000000000, .22265625000000000000, .17187500000000000000 /)",\
        "(/ .01562500000000000000, .21875000000000000000, .17578125000000000000 /)",\
        "(/ .01562500000000000000, .21875000000000000000, .17578125000000000000 /)",\
        "(/ .01562500000000000000, .21484375000000000000, .17578125000000000000 /)",\
        "(/ .01562500000000000000, .21484375000000000000, .17578125000000000000 /)",\
        "(/ .01171875000000000000, .21093750000000000000, .17578125000000000000 /)",\
        "(/ .01171875000000000000, .20703125000000000000, .17187500000000000000 /)",\
        "(/ .01171875000000000000, .20312500000000000000, .17187500000000000000 /)",\
        "(/ .01171875000000000000, .20312500000000000000, .16796875000000000000 /)",\
        "(/ .01171875000000000000, .19921875000000000000, .16406250000000000000 /)",\
        "(/ .01171875000000000000, .19531250000000000000, .16406250000000000000 /)",\
        "(/ .01171875000000000000, .19140625000000000000, .16015625000000000000 /)",\
        "(/ .01171875000000000000, .19140625000000000000, .16015625000000000000 /)",\
        "(/ .01171875000000000000, .18750000000000000000, .15625000000000000000 /)",\
        "(/ .01171875000000000000, .18359375000000000000, .15234375000000000000 /)",\
        "(/ .01171875000000000000, .17968750000000000000, .15234375000000000000 /)",\
        "(/ .01171875000000000000, .17968750000000000000, .14843750000000000000 /)",\
        "(/ .01171875000000000000, .17578125000000000000, .14453125000000000000 /)",\
        "(/ .01171875000000000000, .17187500000000000000, .14453125000000000000 /)",\
        "(/ .01171875000000000000, .16796875000000000000, .14062500000000000000 /)",\
        "(/ .01171875000000000000, .16796875000000000000, .14062500000000000000 /)",\
        "(/ .01171875000000000000, .16406250000000000000, .13671875000000000000 /)",\
        "(/ .01171875000000000000, .16015625000000000000, .13281250000000000000 /)",\
        "(/ .00781250000000000000, .15625000000000000000, .13281250000000000000 /)",\
        "(/ .00781250000000000000, .15625000000000000000, .12890625000000000000 /)",\
        "(/ .00781250000000000000, .15234375000000000000, .12500000000000000000 /)",\
        "(/ .00781250000000000000, .14843750000000000000, .12500000000000000000 /)",\
        "(/ .00781250000000000000, .14453125000000000000, .12109375000000000000 /)",\
        "(/ .00781250000000000000, .14453125000000000000, .12109375000000000000 /)",\
        "(/ .00781250000000000000, .14062500000000000000, .11718750000000000000 /)",\
        "(/ .00781250000000000000, .13671875000000000000, .11328125000000000000 /)",\
        "(/ .00781250000000000000, .13281250000000000000, .11328125000000000000 /)",\
        "(/ .00781250000000000000, .13281250000000000000, .10937500000000000000 /)",\
        "(/ .00781250000000000000, .12890625000000000000, .10937500000000000000 /)",\
        "(/ .00781250000000000000, .12500000000000000000, .10546875000000000000 /)",\
        "(/ .00781250000000000000, .12500000000000000000, .10156250000000000000 /)",\
        "(/ .00781250000000000000, .12109375000000000000, .10156250000000000000 /)",\
        "(/ .00781250000000000000, .11718750000000000000, .09765625000000000000 /)",\
        "(/ .00781250000000000000, .11328125000000000000, .09375000000000000000 /)",\
        "(/ .00781250000000000000, .11328125000000000000, .09375000000000000000 /)",\
        "(/ .00781250000000000000, .10937500000000000000, .08984375000000000000 /)",\
        "(/ .00781250000000000000, .10546875000000000000, .08984375000000000000 /)",\
        "(/ .00390625000000000000, .10156250000000000000, .08593750000000000000 /)",\
        "(/ .00390625000000000000, .10156250000000000000, .08203125000000000000 /)",\
        "(/ .00390625000000000000, .09765625000000000000, .08203125000000000000 /)",\
        "(/ .00390625000000000000, .09375000000000000000, .07812500000000000000 /)",\
        "(/ .00390625000000000000, .08984375000000000000, .07421875000000000000 /)",\
        "(/ .00390625000000000000, .08984375000000000000, .07421875000000000000 /)",\
        "(/ .00390625000000000000, .08593750000000000000, .07031250000000000000 /)",\
        "(/ .00390625000000000000, .08203125000000000000, .07031250000000000000 /)",\
        "(/ .00390625000000000000, .07812500000000000000, .06640625000000000000 /)",\
        "(/ .00390625000000000000, .07812500000000000000, .06250000000000000000 /)",\
        "(/ .00390625000000000000, .07421875000000000000, .06250000000000000000 /)",\
        "(/ .00390625000000000000, .07031250000000000000, .05859375000000000000 /)",\
        "(/ .00390625000000000000, .06640625000000000000, .05468750000000000000 /)",\
        "(/ .00390625000000000000, .06640625000000000000, .05468750000000000000 /)",\
        "(/ .00390625000000000000, .06250000000000000000, .05078125000000000000 /)",\
        "(/ .00390625000000000000, .05859375000000000000, .05078125000000000000 /)",\
        "(/ .00390625000000000000, .05468750000000000000, .04687500000000000000 /)",\
        "(/ .00390625000000000000, .05468750000000000000, .04296875000000000000 /)",\
        "(/ 0, .05078125000000000000, .04296875000000000000 /)",\
        "(/ 0, .04687500000000000000, .03906250000000000000 /)",\
        "(/ 0, .04296875000000000000, .03515625000000000000 /)",\
        "(/ 0, .04296875000000000000, .03515625000000000000 /)",\
        "(/ 0, .03906250000000000000, .03125000000000000000 /)",\
        "(/ 0, .03515625000000000000, .03125000000000000000 /)",\
        "(/ 0, .03125000000000000000, .02734375000000000000 /)",\
        "(/ 0, .03125000000000000000, .02343750000000000000 /)",\
        "(/ 0, .02734375000000000000, .02343750000000000000 /)",\
        "(/ 0, .02343750000000000000, .01953125000000000000 /)",\
        "(/ 0, .01953125000000000000, .01562500000000000000 /)",\
        "(/ 0, .01953125000000000000, .01562500000000000000 /)",\
        "(/ 0, .01562500000000000000, .01171875000000000000 /)",\
        "(/ 0, .01171875000000000000, .01171875000000000000 /)",\
        "(/ 0, .00781250000000000000, .00781250000000000000 /)",\
        "(/ 0, .00781250000000000000, .00390625000000000000 /)",\
        "(/ 0, .00390625000000000000, .00390625000000000000 /)" /)
return cmap
end


;=================================================================================================================================
;
; plotting
;
;=================================================================================================================================
; all plots based on climba.rgb - colortable file of pages article
;
;###============================================================
;###
;### color table for climba plots
;###
;### 2012 Tim Bruecher
;###
;###============================================================
;# white
;# black
;# abs. carbon pool        # 11 colors  2 -> 12
;# dif. carbon pool        # 13 colors 13 -> 25
;# abs. cover fraction     # 12 colors 26 -> 37
;# dif. cover fraction     # 13 colors 38 -> 50
;# abs. desert fraction    # 12 colors 51 -> 62
;# dif. desert fraction    # 13 colors 63 -> 75
;# abs. fire fraction      # 10 colors 76 -> 85
;# dif. fire fraction      # 11 colors 86 -> 96
;###============================================================


undef ("plot_kehrwald")
procedure plot_kehrwald(path,fn:string)
begin
    ; data
    infile=path+fn+".nc"
    data=addfile(infile, "r")
    ;time
    barea=data->barea(:)
    zbarea=data->zbarea(:)
    time=data->time(:)

    output=path+fn+".pdf"
    wks=gsn_open_wks("pdf",output)
    cmap=def_colormap
    gsn_define_colormap(wks,cmap)
    gsnMaximize = True

    res=True
    res@gsnDraw            = False             ; don't draw yet
    res@gsnFrame           = False             ; don't advance frame yet
    res@vpHeightF=0.4
    res@vpWidthF=0.6
    res@vpYF=0.93
    res@vpXF=0.13

    resa=res
    resb=res

    resa@xyLineColors=1
    resb@xyLineColors=13
    resa@tiYAxisFontColor=1
    resb@tiYAxisFontColor=13

    resa@tiYAxisString = "burned area [Mha]"
    resb@tiYAxisString = "Z scores"
    resa@xyDashPattern=0
    resb@xyDashPattern=0

    resb@trYMaxF=1.5
    resb@trYMinF=-1.5
    resb@tiMainString=fn

    plot=gsn_csm_xy2(wks,time,barea,zbarea,resa, resb)
    draw(plot)
end



undef("plot_marlon")
procedure plot_marlon (data:logical,wkstype,output,paneltitle:string)
begin
   wks_type=wkstype
   wks=gsn_open_wks(wks_type,output)
    cmap=def_colormap
    gsn_define_colormap(wks,cmap)
    ;gsn_draw_colormap(wks)
    gsnMaximize = True

    res=True
    res@gsnDraw            = False             ; don't draw yet
    res@gsnFrame           = False             ; don't advance frame yet
    res@vpHeightF=0.4
    res@vpWidthF=0.6
    res@vpYF=0.93
    res@vpXF=0.13

    resa=res
    resa@trXMaxF                = 200
    resa@trXMinF                = -8200
    resa@trYMaxF=1.
    resa@trYMinF=-1.2
    resa@tiYAxisString = "Z scores"
    resa@tiXAxisString = "cal. yrs BP"
    resa@tmXBMode = "Explicit"
    resa@tmXBLabels = (/"-8000","-6000","-4000","-2000","0"/)
    resa@tmXBValues = (/"-8000","-6000","-4000","-2000","0"/)
    resa@xyLineColors= (/1,13/)
    resa@xyDashPatterns=(/0,0/) ;LineColors= (/1,13/)

    ;resa@pmLegendDisplayMode    = "Always"   ; Display a legend.
    ;resa@xyExplicitLegendLabels = (/"zbarea","zcflux","influx"/)
    resa@pmLegendOrthogonalPosF = -0.55      ; Move into to plot
    resa@pmLegendParallelPosF   =  0.785      ; Move to right
    resa@pmLegendWidthF         = 0.2        ; Make it smaller
    resa@pmLegendHeightF        = 0.1        ; Make it smaller
    resa@lgPerimOn              = False      ; No legend perimeter.
    resa@lgLabelFontHeightF     = 0.01



    resb=res
;    resb@tiYAxisString = "burned area [Mha]"
    resb@tiYAxisString = "burned area [ ]"

    ;resb@pmLegendDisplayMode    = "Always"   ; Display a legend.
    ;resb@xyExplicitLegendLabels = (/"barea"/)
    resb@pmLegendOrthogonalPosF = -0.28     ; Move into to plot
    resb@pmLegendParallelPosF   =  0.785      ; Move to right
    resb@pmLegendWidthF         = 0.2        ; Make it smaller
    resb@pmLegendHeightF        = 0.1        ; Make it smaller
    resb@lgPerimOn              = False      ; No legend perimeter.
    resb@lgLabelFontHeightF     = 0.01
    resb@xyLineColor= 139
    resb@tiYAxisFontColor = 139
    max_zb=max(data@zbarea)
    max_zc=max(data@zcflux)
    max_cup=max(data@cup)
    min_zb=min(data@zbarea)
    min_zc=min(data@zcflux)
    min_cdown=min(data@cdown)


    ; absolut barea
;    ampzbarea=max_zb-min_zb
;    ampbarea=max(data@barea)-min(data@barea)
;    ratio=(1./(ampzbarea/(resa@trYMaxF-resa@trYMinF))-1.)/2.
;    resb@trYMaxF=max(data@barea)+ratio*ampbarea
;    resb@trYMinF=min(data@barea)-ratio*ampbarea

    ;rel barea
    ampzbarea=max_zb-min_zb
    ampbarea=max(data@relbarea)-min(data@relbarea)
    ratio=(1./(ampzbarea/(resa@trYMaxF-resa@trYMinF))-1.)/2.
    resb@trYMaxF=max(data@relbarea)+ratio*ampbarea
    resb@trYMinF=min(data@relbarea)-ratio*ampbarea

    resc=res
    resc@tiYAxisString = "nsites"
    resc@tiYAxisFontColor = 124
   ; resc@xyLineColor= 124
    resc@xyLineColor=(/0.,0.,0.,0./)

    resc@amOrthogonalPosF = 0.73
    resc@trYMaxF                = 600
    resc@trYMinF                = -10
    resc@tmYRMode="Explicit"
    resc@tmYRMode="Manual"
    resc@tmYRValues=(/0,100,200/)
    resc@tmYRLabels=(/"0","100","200"/)
    resc@tmYRTickStartF=0.
    resc@tmYRTickEndF=200.
    resc@tmYRTickSpacingF=100

; absolut barea
;     top_plot=gsn_csm_xy3(wks,data@mtime,(/data@zbarea,data@zcflux/),data@barea,data@cflux*(-1.),resa, resb, resc)
;rel barea
;     top_plot=gsn_csm_xy3(wks,data@mtime,(/data@zbarea,data@zcflux/),data@relbarea,data@cflux*(-1.),resa, resb, resc)
     top_plot=gsn_csm_xy3(wks,data@mtime,(/data@zbarea,data@zcflux/),data@relbarea,data@nsites,resa, resb, resc)

     draw(top_plot)


    resd=res
    resd@trXMaxF                = 200
    resd@trXMinF                = -8200

    resd@trYMaxF=1.
    resd@trYMinF=-1.2
    ;confidence interval in charcoal
    resd@gsnXYFillColors = (/0.984, 0.729, 1.000 ,0.3/)
    resd@xyLineColors     = (/-1,-1/)
    ;resd@tmXBLabelsOn=False
    ; charcoal mean curve
    resd@tmYRLabelsOn=False
    resd@tmYROn=False

    resc2=True
    resc2@tiYAxisOn=False
    resc2@xyLineColor=124
    resc2@tmYROn=False
    resc2@tmYRLabelsOn=False
    resc2@trYMaxF                = 600
    resc2@trYMinF                = -10

    bot_plot=gsn_csm_xy2 (wks,data@ctime,(/data@cup,data@cdown/),data@nsites,resd,resc2)
    bot_plot2=gsn_csm_xy2 (wks,data@ctime,(/data@cup,data@cdown/),data@nsites,resd,resc2)

;bar_plot
    polyres=True
    px1=(/-8000,-6000,-6000,-8000,-8000/)
    px2=(/-4000,-2000,-2000,-4000,-4000/)
    px3=(/0,200,200,0,0/)

    py=(/resd@trYMinF,resd@trYMinF,resd@trYMaxF,resd@trYMaxF,resd@trYMinF/)
    polyres@gsFillColor = "gainsboro"
    p1=gsn_add_polygon(wks, bot_plot, px1, py, polyres)
    p2=gsn_add_polygon(wks, bot_plot, px2, py, polyres)
    p3=gsn_add_polygon(wks, bot_plot, px3, py, polyres)


    draw(bot_plot)


    rese=res
    rese@trXMaxF                = 200
    rese@trXMinF                = -8200
    rese@tmYRLabelsOn=False
    rese@tmXBOn=False
    rese@tmYROn=False
    rese@tmYLOn=False
    resf=rese

    rese@trYMaxF=1.
    rese@trYMinF=-1.2
    ;rese@pmLegendDisplayMode    = "Always"   ; Display a legend.
    ;rese@xyExplicitLegendLabels = (/"zinflux"/)
    rese@pmLegendOrthogonalPosF = -0.55     ; Move into to plot
    rese@pmLegendParallelPosF   =  0.785      ; Move to right
    rese@pmLegendWidthF         = 0.2        ; Make it smaller
    rese@pmLegendHeightF        = 0.1        ; Make it smaller
    rese@lgPerimOn              = False      ; No legend perimeter.
    rese@lgLabelFontHeightF     = 0.01



;    resf@trYMaxF=600.
;    resf@trYMinF=0.
    rese@xyLineColors= (/38,38/) ; "blueviolet"
    rese@tmYRLabelsOn=False
;    resf@tmYLLabelsOn=False
;    resf@xyLineColor= 124
;    resf@tiMainString=paneltitle
;    mid_plot=gsn_csm_xy2 (wks,data@ctime,data@influx,data@nsites,rese,resf)
     mid_plot=gsn_csm_xy (wks,data@ctime,data@influx,rese)
    draw(mid_plot)



    overlay(bot_plot,bot_plot2)
    overlay(bot_plot,mid_plot)
    overlay(bot_plot,top_plot)

    draw(bot_plot)
    print("Figure done: "+output)

end



undef ("plotx")
procedure plotx (data:float,opt:logical)
begin

  wks_type              = opt@wkstype
  output                = opt@output
  gsnMaximize           = True
  res=True
  wks   = gsn_open_wks (wks_type,output)
  plot  = gsn_csm_y (wks,data,res) ; create plot
end



undef ("plotnx")
procedure plotnx (data:float,opt:logical)
begin
  ; up to 5 lines

  wks_type              = opt@wkstype
  output                = opt@output

  dims=dimsizes(data)
  if (dimsizes(dims) .gt. 2) then
    print("too many dimensions! "+ dimsizes(dims) +" dims of data! Exit")
    exit
  end if

  nlines                = opt@nx
  if (nlines .gt. dims(0)) then
    nlines=dims(0)
    print("Only "+nlines+" will be plotted")
  end if

  if (nlines .gt. 5 ) then
    print("to many lines! EXIT")
    exit
  end if

  if (nlines.eq.1) then
    plotx(data(0,:),opt)
  end if

  gsnMaximize           = True
  res=True
  wks   = gsn_open_wks (wks_type,output)

  if (isatt(opt,"colors")) then
    res@xyLineColors      = opt@colors
  else
    res@xyLineColors      = (/"blue","red","black","olivedrab4","peru"/)  ; line colors
  end if

  print(opt)

  if (isatt(opt,"minF") .and.  isatt(opt,"maxF")) then
    res@trYMinF     = opt@minF
    res@trYMaxF     = opt@maxF
  end if

  if (isatt(opt,"title")) then
    res@txString = opt@title
  else
    res@txString=""
  end if

  if (isatt(opt,"xlabel")) then
    res@tiXAxisString = opt@xlabel
  else
    res@tiXAxisString=""
  end if

  if (isatt(opt,"ylabel")) then
    res@tiYAxisString = opt@ylabel
  else
    res@tiYAxisString=""
  end if

  ; if (isatt(opt,"unit")) then
  ;   res@ = opt@unit
  ; else
  ;   res@=""
  ; end if

  res@tiYAxisString        = opt@ylabel
  res@tiXAxisString        = opt@xlabel


  if (isatt(opt,"thicknes")) then
    res@xyLineThicknesses =opt@thicknes
  else
    res@xyLineThicknesses = (/2.5,2.5,2.5,2.0,2.0/)        ; line thicknesses
  end if

  if (isatt(opt,"pattern")) then
    res@xyDashPatterns=opt@pattern
  else
    res@xyDashPatterns    = (/0.0,0.0,1.0,2.0,2.0/)        ; line patterns
  end if

  if (isatt(opt,"legend")) then
    print("using your legend: "+opt@legend)
    res@pmLegendDisplayMode    = "Always"
    res@pmLegendWidthF         = 0.2        ; Make it smaller
    res@pmLegendHeightF        = 0.1        ; Make it smaller
    ; res@pmLegendOrthogonalPosF = -0.32      ; Move into to plot
    ; res@pmLegendParallelPosF   =  0.75      ; Move to right
    res@lgPerimOn              = False      ; No legend perimeter.
    res@lgLabelFontHeightF     = 0.01

    res@xyExplicitLegendLabels =  opt@legend
  else
    print("NO LEGEND!")
    res@xyExplicitLegendLabels =  (/"1","2","3","4","5"/)
  end if

  if (isatt(opt,"xvalues") .and. isatt(opt,"xlabels")) then
    res@tmXBMode="Explicit"
    res@tmXBValues=opt@xvalues
    res@tmXBLabels=opt@xlabels

    print(res)
  end if


  if (nlines.eq.2) then
    plot  = gsn_csm_y (wks,(/data(0,:),data(1,:)/),res) ; create plot
  end if
  if (nlines.eq.3) then
    plot  = gsn_csm_y (wks,(/data(0,:),data(1,:),data(2,:)/),res) ; create plot
  end if
  if (nlines.eq.4) then
    plot  = gsn_csm_y (wks,(/data(0,:),data(1,:),data(2,:),data(3,:)/),res) ; create plot
  end if
  if (nlines.eq.5) then
    plot  = gsn_csm_y (wks,(/data(0,:),data(1,:),data(2,:),data(3,:),data(4,:)/),res) ; create plot
  end if



end




undef ("plot_lat_lon")
procedure plot_lat_lon (data:float,wkstype:string,output:string,paneltitle:string)
begin
   wks_type              = wkstype
   gsnMaximize           = True
   res=True
   wks=gsn_open_wks(wks_type,output)
   res@cnFillOn          = True
 ;  cmap=def_colormap
 ;  gsn_define_colormap(wks_fire,cmap)

;   gsn_define_colormap(wks_fire,"climba")
   ;gsn_draw_colormap(wks_fire)

;   resfire@cnLevels = (/-0.1,-0.075,-0.05,-0.025,-0.005,0.005,0.025,0.05,0.075,0.1/)
;   resfire@cnFillColors = ispan(86,96,1)
;   resfire@gsnRightString= "[M ha]"

   ; plotting
   plot = gsn_csm_contour_map(wks,data(:,:),res)
end






; general functions / subroutines
; set_plot_settings (res:logical)
; set_panel_settings (resP:logical,paneltitle:string,year:string)



undef ("set_default_plot_settings")
function set_default_plot_settings (res:logical)
begin
   res                   = True
   res@cnFillOn          = True            ; color Fill
   res@cnFillMode        = "CellFill"      ; Raster Mode
   res@cnLinesOn         = False           ; Turn off contour lines
   res@gsnFrame          = False
   res@gsnDraw           = False


   res@cnFillDrawOrder   = "PostDraw"
   res@mpProjection      = "Mollweide"
   ;res@mpProjection      = "CylindricalEquidistant"

   res@mpLandFillPattern = 0
   res@mpOutlineOn=False
   res@mpGeophysicalLineColor="cornflowerblue"
   res@mpOceanFillColor  = "cornflowerblue";"turquoise1"
   res@mpLandFillColor   = "cornflowerblue";"turquoise1"
   res@mpDefaultFillColor = "cornflowerblue";"turquoise1"
   res@mpInlandWaterFillColor = "cornflowerblue";"turquoise1"

   res@mpPerimOn         = False             ; turn off box around plot
   res@mpGridLatSpacingF = 30.               ; spacing for lat lines
   res@mpGridLonSpacingF = 30.               ; spacing for lon lines
   res@mpFillOn          = True
   res@cnFillOn          = True              ; color plot desired
   res@cnLineLabelsOn    = False             ; turn off contour lines
   res@txFontHeightF     = 0.015

   res@vpXF              = 0.1                 ; make plot bigger
   res@vpYF              = 0.9
   res@vpWidthF          = 0.8
   res@vpHeightF         = 0.8

   res@tmXBOn            = False
   res@tmXTOn            = False
   res@tmYROn            = False
   res@tmYLOn            = False

   res@cnLevelSelectionMode = "ExplicitLevels"
   ;res@mpLandFillColor      = -1
   res@lbAutoManage         = False
   res@lbLabelFontHeightF   = 0.015
   res@pmLabelBarWidthF     = 0.8
   res@lbLabelAngleF        = -90


   res@mpMaxLatF            = 90          ; choose subregion
   res@mpMinLatF            = -90
   res@mpMaxLonF            = 180
   res@mpMinLonF            = -180

   ; masking the ocean
   ;t31lsm=addfile("sea_land_mask_T31.nc","r")
   ;slmdata = at31lsm->slm
   ;slm = landsea_mask(slmdata,data&lat,data&lon)
   return (res)
end


undef ("set_current_plot_settings")
function set_current_plot_settings (current:logical)
begin
    default=True
    default=set_default_plot_settings(default)
    ; check for special plot options
    if ( .not. isatt(current,"cnFillOn"))               then  current@cnFillOn=default@FillOn         end if   ; color Fill
    if ( .not. isatt(current,"cnFillMode"))             then  current@cnFillMode=default@cnFillMode   end if   ;
    if ( .not. isatt(current,"cnLinesOn"))              then  current@cnLinesOn=default@cnLinesOn   end if   ;
    if ( .not. isatt(current,"gsnFrame"))               then  current@gsnFrame=default@gsnFrame   end if   ;
    if ( .not. isatt(current,"gsnDraw"))                then  current@gsnDraw=default@gsnDraw   end if   ;
    if ( .not. isatt(current,"cnFillDrawOrder"))        then  current@cnFillDrawOrder=default@cnFillDrawOrder   end if   ;
    if ( .not. isatt(current,"mpProjection"))           then  current@mpProjection=default@mpProjection   end if   ;
    if ( .not. isatt(current,"mpLandFillPattern"))      then  current@mpLandFillPattern=default@mpLandFillPattern   end if   ;
    if ( .not. isatt(current,"mpOutlineOn"))            then  current@mpOutlineOn=default@mpOutlineOn   end if   ;
    if ( .not. isatt(current,"mpGeophysicalLineColor")) then  current@mpGeophysicalLineColor=default@mpGeophysicalLineColor   end if   ;
    if ( .not. isatt(current,"mpDefaultFillColor"))     then  current@mpDefaultFillColor=default@mpDefaultFillColor   end if   ;
    if ( .not. isatt(current,"mpOceanFillColor"))       then  current@mpOceanFillColor=default@mpOceanFillColor   end if   ;
    if ( .not. isatt(current,"mpLandFillColor"))        then  current@mpLandFillColor=default@mpLandFillColor   end if   ;
    if ( .not. isatt(current,"mpPerimOn"))              then  current@mpPerimOn=default@mpPerimOn   end if   ;
    if ( .not. isatt(current,"mpGridLatSpacingF"))      then  current@mpGridLatSpacingF=default@mpGridLatSpacingF   end if   ;
    if ( .not. isatt(current,"mpGridLonSpacingF"))      then  current@mpGridLonSpacingF=default@mpGridLonSpacingF   end if   ;
    if ( .not. isatt(current,"mpFillOn"))               then  current@mpFillOn=default@mpFillOn   end if   ;
    if ( .not. isatt(current,"cnFillOn"))               then  current@cnFillOn=default@cnFillOn   end if   ;
    if ( .not. isatt(current,"cnLineLabelsOn"))         then  current@cnLineLabelsOn=default@cnLineLabelsOn   end if   ;
    if ( .not. isatt(current,"txFontHeightF"))          then  current@txFontHeightF=default@txFontHeightF   end if   ;
    if ( .not. isatt(current,"vpXF"))                   then  current@vpXF=default@vpXF   end if   ;
    if ( .not. isatt(current,"vpYF"))                   then  current@vpYF=default@vpYF   end if   ;
    if ( .not. isatt(current,"vpWidthF"))               then  current@vpWidthF=default@vpWidthF   end if   ;
    if ( .not. isatt(current,"vpHeightF"))              then  current@vpHeightF=default@vpHeightF   end if   ;
    if ( .not. isatt(current,"tmXBOn"))                 then  current@tmXBOn=default@tmXBOn   end if   ;
    if ( .not. isatt(current,"tmXTOn"))                 then  current@tmXTOn=default@tmXTOn   end if   ;
    if ( .not. isatt(current,"tmYROn"))                 then  current@tmYROn=default@tmYROn   end if   ;
    if ( .not. isatt(current,"tmYLOn"))                 then  current@tmYLOn=default@tmYLOn   end if   ;
    if ( .not. isatt(current,"cnLevelSelectionMode"))   then  current@cnLevelSelectionMode=default@cnLevelSelectionMode   end if   ;
    if ( .not. isatt(current,"lbAutoManage"))           then  current@lbAutoManage=default@lbAutoManage   end if   ;
    if ( .not. isatt(current,"lbLabelFontHeightF"))     then  current@lbLabelFontHeightF=default@lbLabelFontHeightF   end if   ;
    if ( .not. isatt(current,"pmLabelBarWidthF"))       then  current@pmLabelBarWidthF=default@pmLabelBarWidthF   end if   ;
    if ( .not. isatt(current,"lbLabelAngleF"))          then  current@lbLabelAngleF=default@lbLabelAngleF   end if   ;
    if ( .not. isatt(current,"mpMaxLatF"))              then  current@mpMaxLatF=default@mpMaxLatF   end if   ;
    if ( .not. isatt(current,"mpMinLatF"))              then  current@mpMinLatF=default@mpMinLatF   end if   ;
    if ( .not. isatt(current,"mpMaxLonF"))              then  current@mpMaxLonF=default@mpMaxLonF   end if   ;
    if ( .not. isatt(current,"mpMinLonF"))              then  current@mpMinLonF=default@mpMinLonF   end if   ;
   return (res)
end



undef ("set_plot_settings")
function set_plot_settings (opt: logical) ;(res:logical,lbside:string,region:string)
begin
   res                   = True
   res@cnFillOn          = True            ; color Fill
   res@cnFillMode        = "CellFill"      ;
   res@cnLinesOn         = False           ; Turn off contour lines
   res@gsnFrame          = False
   res@gsnDraw           = False



  if ( isatt(opt,"landonly") .and. opt@landonly .eq. True) then
    res@mpLandFillPattern = 0
    res@mpGeophysicalLineColor="black"
    res@mpOceanFillColor  = "turquoise1"
    res@mpLandFillColor   = "grey78" ; "turquoise1"
    res@mpDefaultFillColor = "turquoise1"
    res@mpInlandWaterFillColor = "grey78" ;"turquoise1"
    res@cnFillDrawOrder   = "PostDraw"
  else
    res@mpGeophysicalLineColor="black"
    res@mpOceanFillColor  = -1
    res@mpLandFillColor   = -1
    res@mpDefaultFillColor = -1
    res@mpInlandWaterFillColor = -1
    res@cnFillDrawOrder   = "PreDraw"
end if

; global
   if (isatt(opt,"region") .and. opt@region.eq."global") then
        if (isatt(opt,"projection")) then
            res@mpProjection      =opt@projection
        else
            res@mpProjection      ="Mollweide"
        end if
        res@mpOutlineOn=True
        res@mpPerimOn         = False             ; turn off box around plot
        res@mpGridLatSpacingF = 30.               ; spacing for lat lines
        res@mpGridLonSpacingF = 30.               ; spacing for lon lines
        res@mpMaxLatF         = 90          ; choose subregion
        res@mpMinLatF         = -90
        res@mpMaxLonF         = 180
        res@mpMinLonF         = -180
        res@tmXBOn            = False
        res@tmXTOn            = False
        res@tmYROn            = False
        res@tmYLOn            = False
        res@gsnAddCyclic      = True
    end if

; africa
    if (isatt(opt,"region") .and. opt@region.eq."africa") then
;        res@mpGeophysicalLineColor="turquoise1"
        res@mpProjection      = "CylindricalEquidistant"
        res@mpOutlineOn=True
        res@mpPerimOn         = True             ; turn off box around plot
        res@mpGridLatSpacingF = 5.               ; spacing for lat lines
        res@mpGridLonSpacingF = 5.               ; spacing for lon lines
        res@mpMaxLatF            = 37          ; choose subregion
        res@mpMinLatF            = -37
        res@mpMaxLonF            = 49
        res@mpMinLonF            = -20
        res@tmXBOn            = True
        res@tmXTOn            = True
        res@tmYROn            = True
        res@tmYLOn            = True
        res@gsnAddCyclic      = True

	   res@mpGeophysicalLineColor="black"
	   ;res@mpOceanFillColor  = -1 ;"white"
	   ;res@mpLandFillColor   = -1 ;"white"
	   ;res@mpDefaultFillColor = -1 ;"white"


    end if
    ; africa
    if (isatt(opt,"region") .and. opt@region.eq."NAF") then
;        res@mpGeophysicalLineColor="turquoise1"
        res@mpProjection      = "CylindricalEquidistant"
        res@mpOutlineOn=True
        res@mpPerimOn         = True             ; turn off box around plot
        res@mpGridLatSpacingF = 5.               ; spacing for lat lines
        res@mpGridLonSpacingF = 5.               ; spacing for lon lines
        res@mpMaxLatF            = 30          ; choose subregion
        res@mpMinLatF            = 0
        res@mpMaxLonF            = 49
        res@mpMinLonF            = -20
        res@tmXBOn            = True
        res@tmXTOn            = True
        res@tmYROn            = True
        res@tmYLOn            = True
        res@gsnAddCyclic      = True

	   res@mpGeophysicalLineColor="black"
	   ;res@mpOceanFillColor  = -1 ;"white"
	   ;res@mpLandFillColor   = -1 ;"white"
	   ;res@mpDefaultFillColor = -1 ;"white"


    end if



	; africa
	    if (isatt(opt,"region") .and. opt@region.eq."sa_daniau") then
	;        res@mpGeophysicalLineColor="turquoise1"
	        res@mpProjection      = "CylindricalEquidistant"
	        res@mpOutlineOn=True
	        res@mpPerimOn         = True             ; turn off box around plot
	        res@mpGridLatSpacingF = 2.5               ; spacing for lat lines
	        res@mpGridLonSpacingF = 2.5               ; spacing for lon lines
	        res@mpMaxLatF            = -20          ; choose subregion
	        res@mpMinLatF            = -40
	        res@mpMaxLonF            = 40
	        res@mpMinLonF            = 10
	        res@tmXBOn            = True
	        res@tmXTOn            = True
	        res@tmYROn            = True
	        res@tmYLOn            = True
	        res@gsnAddCyclic      = False

		   res@mpGeophysicalLineColor="black"
		   ;res@mpOceanFillColor  = -1 ;"white"
		   ;res@mpLandFillColor   = -1 ;"white"
		   ;res@mpDefaultFillColor = -1 ;"white"


	    end if

; N America land use
	if (isatt(opt,"region") .and. opt@region.eq."NA") then
		;        res@mpGeophysicalLineColor="turquoise1"
		res@mpProjection      = "CylindricalEquidistant"
		res@mpOutlineOn=True
		res@mpPerimOn         = True             ; turn off box around plot
		res@mpGridLatSpacingF = 5.               ; spacing for lat lines
		res@mpGridLonSpacingF = 5.               ; spacing for lon lines
		res@mpMaxLatF            = 66          ; choose subregion
		res@mpMinLatF            = 20
		res@mpMaxLonF            = -50
		res@mpMinLonF            = -150
		res@tmXBOn            = True
		res@tmXTOn            = True
		res@tmYROn            = True
		res@tmYLOn            = True
		res@gsnAddCyclic      = False

		res@mpGeophysicalLineColor="black"
		;res@mpOceanFillColor  = -1 ;"white"
		;res@mpLandFillColor   = -1 ;"white"
		;res@mpDefaultFillColor = -1 ;"white"
	end if


; N America
	if (isatt(opt,"region") .and. opt@region.eq."namerica") then
		;        res@mpGeophysicalLineColor="turquoise1"
		res@mpProjection      = "CylindricalEquidistant"
		res@mpOutlineOn=True
		res@mpPerimOn         = True             ; turn off box around plot
		res@mpGridLatSpacingF = 5.               ; spacing for lat lines
		res@mpGridLonSpacingF = 5.               ; spacing for lon lines
		res@mpMaxLatF            = 66          ; choose subregion
		res@mpMinLatF            = 20
		res@mpMaxLonF            = -50
		res@mpMinLonF            = -100
		res@tmXBOn            = True
		res@tmXTOn            = True
		res@tmYROn            = True
		res@tmYLOn            = True
		res@gsnAddCyclic      = False

		res@mpGeophysicalLineColor="black"
		;res@mpOceanFillColor  = -1 ;"white"
		;res@mpLandFillColor   = -1 ;"white"
		;res@mpDefaultFillColor = -1 ;"white"
	end if

; no polar region
	if (isatt(opt,"region") .and. opt@region.eq."no_polar") then
		;        res@mpGeophysicalLineColor="turquoise1"
		res@mpProjection      = "CylindricalEquidistant"
		res@mpOutlineOn=True
		res@mpPerimOn         = True             ; turn off box around plot
		res@mpGridLatSpacingF = 5.               ; spacing for lat lines
		res@mpGridLonSpacingF = 5.               ; spacing for lon lines
		res@mpMaxLatF            = 75          ; choose subregion
		res@mpMinLatF            = -60
		res@mpMaxLonF            = 180
		res@mpMinLonF            = -180
		res@tmXBOn            = True
		res@tmXTOn            = True
		res@tmYROn            = True
		res@tmYLOn            = True
		res@gsnAddCyclic      = False

		res@mpGeophysicalLineColor="black"
		;res@mpOceanFillColor  = -1 ;"white"
		;res@mpLandFillColor   = -1 ;"white"
		;res@mpDefaultFillColor = -1 ;"white"
	end if



   res@mpFillOn          = True
   res@cnFillOn          = True              ; color plot desired
   res@cnLineLabelsOn    = False             ; turn off contour lines
   res@txFontHeightF     = 0.015
   res@vpXF              = 0.1                 ; make plot bigger
   res@vpYF              = 0.9
   res@vpWidthF          = 0.8
   res@vpHeightF         = 0.8

   res@cnLevelSelectionMode = "ExplicitLevels"
   ;res@mpLandFillColor      = -1
   res@lbAutoManage         = False
   res@lbLabelFontHeightF   = 0.015
   res@pmLabelBarWidthF     = 0.8
   res@lbLabelAngleF        = 0

   ; masking the ocean
   ;t31lsm=addfile("sea_land_mask_T31.nc","r")
   ;slmdata = at31lsm->slm
   ;slm = landsea_mask(slmdata,data&lat,data&lon)

; horizontal color bar
    if (isatt(opt,"lbside") .and. ( opt@lbside .eq. "Left" .or. opt@lbside .eq. "Right" )) then
        res@lbOrientation="vertical"
        res@lbLabelAngleF        = 0
        res@lbLabelFontHeightF   = 0.015
        res@pmLabelBarWidthF     = 0.1

        if (opt@lbside .eq. "Left") then
            res@pmLabelBarOrthogonalPosF = -1.145
            res@lbLabelPosition = "Left"
        end if
    end if
   return (res)
end



undef ("set_panel_settings")
function set_panel_settings (resP:logical,paneltitle:string,year:string,unit: string)
begin
   resP@gsnMaximize     = True
   resP@gsnPanelRowSpec = True
   resP@gsnPanelCenter  = True
   resP@txString        = paneltitle+year+" "+unit
   return(resP)
end


undef("set_zonalmean_settings")
function set_zonalmean_settings (res:logical)
local zm
begin
; some settings necessary

   return (res)
end

; subroutines to plot panels
; plot_cpools_abs (cpools:float,wkstype:string,year:string,output:string,paneltitle:string)
; plot_cpools_diff (cpools:float,wkstype:string,year:string,output:string,paneltitle:string)
; plot_coverfraction_abs (covers:float,wkstype:string,year:string,output:string,paneltitle:string)    # green + desert
; plot_coverfraction_diff (covers:float,wkstype:string,year:string,output:string,paneltitle:string)   # green + desert
; plot_fire_abs (covers:float,wkstype:string,year:string,output:string,paneltitle:string)
; plot_fire_diff (fire:float,wkstype:string,year:string,output:string,paneltitle:string)


undef ("plot_cpools_abs")
procedure plot_cpools_abs (cpools:float,wkstype:string,year:string,output:string,paneltitle:string,lbside:string,region:string)
local  wks_type
begin
   ; general settings for all plots
   wks_type              = wkstype
   gsnMaximize           = True

   res=True
   opt=True
   opt@lbside=lbside
   opt@region=region
   opt@landonly=True
   res=set_plot_settings(opt)

   wks_cpools            = gsn_open_wks(wks_type,output)
   cmap=def_colormap
   gsn_define_colormap(wks_cpools,cmap)
   ;gsn_draw_colormap(wks_cpools)

   plot=new(4,graphic)
   res@cnLevels = (/0.05,0.10,0.50,1,2.5,5.,10,15,25,50/)
   res@cnFillColors = ispan(2,12,1)
   res@gsnRightString= "[kg/m2]"

   ; plotten of absolute values for carbon pools
   ; total
   res@gsnLeftString = "cpools total: "+year+"  "+cpools(4,0,0)+" Gt C"
   plot(0) = gsn_csm_contour_map(wks_cpools,cpools(0,:,:),res)
   ; soil
   res@gsnLeftString = "cpools soil: "+year+"  "+cpools(5,0,0)+" Gt C"
   plot(1) = gsn_csm_contour_map(wks_cpools,cpools(1,:,:),res)
   ; green
   res@gsnLeftString = "cpools green: "+year+"  "+cpools(6,0,0)+" Gt C"
   plot(2) = gsn_csm_contour_map(wks_cpools,cpools(2,:,:),res)
   ; gpp
   res@gsnLeftString = "gpp: "+year+"  "+cpools(7,0,0)+" Gt C"
   plot(3) = gsn_csm_contour_map(wks_cpools,cpools(3,:,:),res)

   ;plotting the four figures as a panel
   resP=True
   resP=set_panel_settings(resP,paneltitle,year,res@gsnRightString)

   gsn_panel(wks_cpools,plot(0:3),(/2,2/),resP)
end





undef ("plot_cpools_diff")
procedure plot_cpools_diff (cpools:float,wkstype:string,year:string,output:string,paneltitle:string,lbside:string,region:string)
local  wks_type
begin
   ; general settings for all plots
   wks_type              = wkstype
   gsnMaximize           = True

   res=True
   opt=True
   opt@lbside=lbside
   opt@region=region
   opt@landonly=True
   res=set_plot_settings(opt)
   wks_cpools            = gsn_open_wks(wks_type,output)
   cmap=def_colormap
   gsn_define_colormap(wks_cpools,cmap)
   ;gsn_draw_colormap(wks_cpools)

   plot=new(4,graphic)
   res@cnLevels = (/-5.00,-2.50,-1.00,-0.50,-0.25,-0.05,0.05,0.25,0.50,1.00,2.50,5.00/)
   res@cnFillColors = ispan(13,25,1)
   res@gsnRightString= "[kg/m2]"

   ; plotten of absolute values for carbon pools
   ; total
   printVarSummary(cpools)

   res@gsnLeftString = "cpools total: "+year+"  "+cpools(4,0,0)+" Gt C"
   plot(0) = gsn_csm_contour_map(wks_cpools,cpools(0,:,:),res)
   ; soil
   res@gsnLeftString = "cpools soil: "+year+"  "+cpools(5,0,0)+" Gt C"
   plot(1) = gsn_csm_contour_map(wks_cpools,cpools(1,:,:),res)
   ; green
   res@gsnLeftString = "cpools green: "+year+"  "+cpools(6,0,0)+" Gt C"
   plot(2) = gsn_csm_contour_map(wks_cpools,cpools(2,:,:),res)
   ; gpp
   res@gsnLeftString = "gpp: "+year+"  "+cpools(7,0,0)+" Gt C"
   plot(3) = gsn_csm_contour_map(wks_cpools,cpools(3,:,:),res)

   ;plotting the four figures as a panel
   resP=True
   resP=set_panel_settings(resP,paneltitle,year,res@gsnRightString)

   gsn_panel(wks_cpools,plot(0:3),(/2,2/),resP)
end



undef ("plot_npp_abs")
procedure plot_npp_abs (npp:float,wkstype:string,year:string,output:string,paneltitle:string,lbside:string,region:string)
local  wks_type
begin
   ; general settings for all plots
   wks_type              = wkstype
   gsnMaximize           = True
   res=True
   opt=True
   opt@lbside=lbside
   opt@region=region
   opt@landonly=True
   res=set_plot_settings(opt)

   wks_npp            = gsn_open_wks(wks_type,output)
   cmap=def_colormap
   gsn_define_colormap(wks_npp,cmap)

   plot=new(1,graphic)
   res@cnLevels = (/0.05,0.10,0.15,0.20,0.25,0.5,1.0,1.5,2.,2.5/)
   res@cnFillColors = ispan(2,12,1)
   res@gsnRightString= "[kg/m2]"

   ; absolute values
   ; desert fraction

   res@gsnLeftString = "box NPP yDayMean: "+year+"  "+npp(1,0,0)+" Gt C"
   plot(0) = gsn_csm_contour_map(wks_npp,npp(0,:,:),res)

   ;plotting the figure
   resP=True
   resP=set_panel_settings(resP,paneltitle,year,res@gsnRightString)

   gsn_panel(wks_npp,plot(0),(/1/),resP)
end



undef ("plot_npp_diff")
procedure plot_npp_diff (npp:float,wkstype:string,year:string,output:string,paneltitle:string,lbside:string,region:string)
local  wks_type
begin
   ; general settings for all plots
   wks_type              = wkstype
   gsnMaximize           = True
   res=True
   opt=True
   opt@lbside=lbside
   opt@region=region
   opt@landonly=True
   res=set_plot_settings(opt)

   wks_npp            = gsn_open_wks(wks_type,output)
   cmap=def_colormap
   gsn_define_colormap(wks_npp,cmap)

   plot=new(1,graphic)
   res@cnLevels = (/-5.00,-2.50,-1.00,-0.50,-0.25,-0.05,0.05,0.25,0.50,1.00,2.50,5.00/)
   res@cnFillColors = ispan(13,25,1)
   res@gsnRightString= "[kg/m2]"

   res@gsnLeftString = "box NPP yDayMean: "+year+"  "+npp(1,0,0)+" Gt C"
   plot(0) = gsn_csm_contour_map(wks_npp,npp(0,:,:),res)

   ;plotting the figure
   resP=True
   resP=set_panel_settings(resP,paneltitle,year,res@gsnRightString)

   gsn_panel(wks_npp,plot(0),(/1/),resP)
end




undef ("plot_albedo_abs")
procedure plot_albedo_abs (albedo:float,wkstype:string,year:string,output:string,paneltitle:string,lbside:string,region:string)
local  wks_type
begin
   ; general settings for all plots
   wks_type              = wkstype
   gsnMaximize           = True
   res=True
   opt=True
   opt@lbside=lbside
   opt@region=region
   opt@landonly=True
   res=set_plot_settings(opt)

   wks_albedo            = gsn_open_wks(wks_type,output)
   cmap=def_albedo_color
   gsn_define_colormap(wks_albedo,cmap)
   ;gsn_draw_colormap(wks_albedo)

   plot=new(1,graphic)

    ; 17 colors needed

   res@cnLevels =     (/0.01,0.15,0.20,0.25,0.30,0.35,0.40,0.45,0.50,0.55,0.60,0.65,0.70,0.75/)
   res@cnFillColors = (/ 239, 159, 135, 111,  95,  79,  47,  40,  33,  21,  15,  10,   7,  4,  2/)


   res@gsnRightString= "[ ]"

   res@gsnLeftString = "albedo "+year
   plot(0) = gsn_csm_contour_map(wks_albedo,albedo(:,:),res)

   ;plotting the figure
   resP=True
   resP=set_panel_settings(resP,paneltitle,year,res@gsnRightString)

   gsn_panel(wks_albedo,plot(0),(/1/),resP)
end



undef ("plot_albedo_diff")
procedure plot_albedo_diff (albedo:float,wkstype:string,year:string,output:string,paneltitle:string,lbside:string,region:string)
local  wks_type
begin
   ; general settings for all plots
   wks_type              = wkstype
   gsnMaximize           = True
   res=True
   opt=True
   opt@lbside=lbside
   opt@region=region
   opt@landonly=True
   res=set_plot_settings(opt)

   wks_albedo            = gsn_open_wks(wks_type,output)
   cmap=def_albedo_color
   gsn_define_colormap(wks_albedo,cmap)
   ;gsn_define_colormap(wks_albedo,"OceanLakeLandSnow")
   ;gsn_draw_colormap(wks_albedo)

   plot=new(1,graphic)
   res@cnLevels =     (/-0.15,-0.10,-0.075,-0.050,-0.025,-0.01, 0.01, 0.025, 0.05, 0.075, 0.1, 0.15/)
   res@cnFillColors = (/  176,  112,    96,    80,    64,   48,    0,    8,   14, 20, 26,     32, 38 /)
;    print(max(albedo))
;    print(min(albedo))


   res@gsnRightString= "[ ]"

   res@gsnLeftString = "albedo "+year
   plot(0) = gsn_csm_contour_map(wks_albedo,albedo(:,:),res)

   ;plotting the figure
   resP=True
   resP=set_panel_settings(resP,paneltitle,year,res@gsnRightString)

   gsn_panel(wks_albedo,plot(0),(/1/),resP)
end



undef ("plot_wsmx_abs")
procedure plot_wsmx_abs (ws:float,wkstype:string,year:string,output:string,paneltitle:string,lbside:string,region:string)
local  wks_type
begin
   ; general settings for all plots
   wks_type              = wkstype
   gsnMaximize           = True
   res=True
   opt=True
   opt@lbside=lbside
   opt@region=region
   opt@landonly=True
   res=set_plot_settings(opt)

   wks_ws            = gsn_open_wks(wks_type,output)
   cmap=def_colormap
   gsn_define_colormap(wks_ws,cmap)

   plot=new(1,graphic)

    ; 17 colors needed

   res@cnLevels =     (/0.,0.01,0.15,0.20,0.25,0.30,0.35,0.40,0.45,0.50,0.55,0.60,0.65,0.70/)
   res@cnFillColors = ispan(140,156,1)


   res@gsnRightString= "[ ]"

   res@gsnLeftString = "rel. soil water capacity ws/wsmx "+year
   plot(0) = gsn_csm_contour_map(wks_ws,ws(:,:),res)

   ;plotting the figure
   resP=True
   resP=set_panel_settings(resP,paneltitle,year,res@gsnRightString)

   gsn_panel(wks_ws,plot(0),(/1/),resP)
end


undef ("plot_wsmx_diff")
procedure plot_wsmx_diff (ws:float,wkstype:string,year:string,output:string,paneltitle:string,lbside:string,region:string)
local  wks_type
begin
   ; general settings for all plots
   wks_type              = wkstype
   gsnMaximize           = True
   res=True
   opt=True

   ws=lonFlip(ws)
   opt@lbside=lbside
   opt@region=region
   opt@landonly=True ;True
   res=set_plot_settings(opt)
   printVarSummary(res)
   wks_ws            = gsn_open_wks(wks_type,output)
   cmap=def_colormap
   gsn_define_colormap(wks_ws,cmap)


   plot=new(4,graphic)
   res@cnLevels =     (/-0.10,-0.05,-0.02,-0.01, 0.01, 0.02, 0.05, 0.10/)
   res@cnFillColors = (/104,105,106,108,110,112,114,115,116 /) ;ispan(104,116,1)

   ;res@cnFillColors = (/  176,  112,    96,    80,    64,   48,    0,    8,   14, 20, 26,     32, 38 /)
;    print(max(albedo))
;    print(min(albedo))


   res@gsnRightString= "[ ]"

   res@gsnLeftString = "rel. soil water capacity ws/wsmx "+year

   bres=res
   bres@cnFillOpacityF    = 0.2

   plot(0) = gsn_csm_contour_map(wks_ws,ws(:,:),bres)


   ores=res
   ores@gsnMaximize       = False
   ores@cnFillOpacityF    = 1.
   ores@gsnRightString = ""
   ores@gsnLeftString  = ""
   ores@lbLabelBarOn   = False   ; Turn off labelbar




    printVarSummary(ws)
    ores@cnFillMode="CellFill"
;   plot(1) = gsn_csm_contour(wks_ws,ws(35:46,0:20),ores)
;   plot(2) = gsn_csm_contour(wks_ws,ws(35:46,170:191),ores)
;

     plot(1) = gsn_csm_contour(wks_ws,ws({0:20},{-30:30}),ores)

    ;overlay(plot(1),plot(2))
    overlay(plot(0),plot(1))


   ;plotting the figure
   resP=True
 ;  resP=set_panel_settings(resP,paneltitle,year,res@gsnRightString)

   gsn_panel(wks_ws,plot(0),(/1,1/),resP)
end


;undef ("plot_cpools_diff")
;procedure plot_cpools_diff (cpools:float,wkstype:string,year:string,output:string,paneltitle:string,lbside:string,region:string)
;local  wks_type
;begin
;   ; general settings for all plots
;   wks_type              = wkstype
;   gsnMaximize           = True
;
;   res=True
;   res=set_plot_settings(res,lbside,region)
;   wks_cpools            = gsn_open_wks(wks_type,output)
;   cmap=def_colormap
;   gsn_define_colormap(wks_cpools,cmap)
;   ;gsn_draw_colormap(wks_cpools)
;
;   plot=new(4,graphic)
;   res@cnLevels = (/-5.00,-2.50,-1.00,-0.50,-0.25,-0.05,0.05,0.25,0.50,1.00,2.50,5.00/)
;   res@cnFillColors = ispan(13,25,1)
;   res@gsnRightString= "[kg/m2]"
;
;   ; plotten of absolute values for carbon pools
;   ; total
;   res@gsnLeftString = "cpools total: "+year+"  "+cpools(4,0,0)+" Gt C"
;   plot(0) = gsn_csm_contour_map(wks_cpools,cpools(0,:,:),res)
;   ; soil
;   res@gsnLeftString = "cpools soil: "+year+"  "+cpools(5,0,0)+" Gt C"
;   plot(1) = gsn_csm_contour_map(wks_cpools,cpools(1,:,:),res)
;   ; green
;   res@gsnLeftString = "cpools green: "+year+"  "+cpools(6,0,0)+" Gt C"
;   plot(2) = gsn_csm_contour_map(wks_cpools,cpools(2,:,:),res)
;   ; gpp
;   res@gsnLeftString = "gpp: "+year+"  "+cpools(7,0,0)+" Gt C"
;   plot(3) = gsn_csm_contour_map(wks_cpools,cpools(3,:,:),res)
;
;   ;plotting the four figures as a panel
;   resP=True
;   resP=set_panel_settings(resP,paneltitle,year,res@gsnRightString)
;
;   gsn_panel(wks_cpools,plot(0:3),(/2,2/),resP)
;end





undef ("plot_coverfraction_abs")
procedure plot_coverfraction_abs (covers:float,wkstype:string,year:string,output:string,paneltitle:string,lbside:string,region:string)
local  wks_type
begin
   ; general settings for all plots
   wks_type              = wkstype
   gsnMaximize           = True
   resgreen=True
   opt=True
   opt@lbside=lbside
   opt@region=region
   opt@landonly=True

   opt@lon1=0.
   opt@lon2=360.
   opt@lat1=30.
   opt@lat2=90.

   resgreen=set_plot_settings(opt)
   resdes=resgreen
   wks_covers            = gsn_open_wks(wks_type,output)
   cmap=def_colormap
   gsn_define_colormap(wks_covers,cmap)
   ;gsn_draw_colormap(wks_covers)

   plot=new(11,graphic)
   ;resgreen@cnLevels = (/0.001,0.05,0.1,0.15,0.2,0.25,0.3,0.35,0.5,0.45,0.5/)
   resgreen@cnlevels = (/0.05, 0.1, 0.2,0.3, 0.4,0.5, 0.6,0.7, 0.8,0.9/)
   ;resgreen@cnFillColors = ispan(26,37,1)
   resgreen@cnFillColors = (/51, 28,29,30,31,32,33,34,35,36,37/) ;;ispan(27,37,1)
   resgreen@gsnRightString= "[ ]"
   resdes@cnLevels = (/0.001,0.05,0.1,0.15,0.2,0.25,0.3,0.35,0.4,0.45,0.5/)
   resdes@cnFillColors = ispan(51,62,1)
   resdes@gsnRightString= "[ ]"

   ; plotten of absolute values for carbon pools
   ; desert fraction
   resdes@gsnLeftString = "desert fraction: "+year+" [ ]"
   plot(0) = gsn_csm_contour_map(wks_covers,covers(0,:,:),resdes)
   ; woody
   resgreen@gsnLeftString = "woody fraction: "+year+" [ ]"
   plot(1) = gsn_csm_contour_map(wks_covers,covers(1,:,:),resgreen)
   ; green
   resgreen@gsnLeftString = "tree fraction: "+year+" [ ]"
   plot(2) = gsn_csm_contour_map(wks_covers,covers(2,:,:),resgreen)
   ; shrubs
   resgreen@gsnLeftString = "shrubs fraction: "+year+" [ ]"
   plot(3) = gsn_csm_contour_map(wks_covers,covers(3,:,:),resgreen)
   ; grass
   resgreen@gsnLeftString = "grass fraction: "+year+" [ ]"
   plot(4) = gsn_csm_contour_map(wks_covers,covers(4,:,:),resgreen)


   ; c3+c4pasture
   resgreen@gsnLeftString = "c3+c4pasture: "+year+" [ ]"
   plot(5) = gsn_csm_contour_map(wks_covers,covers(5,:,:),resgreen)
   ; c3 pasture
   resgreen@gsnLeftString = "c3 pasture: "+year+" [ ]"
   plot(6) = gsn_csm_contour_map(wks_covers,covers(6,:,:),resgreen)
   ; c4 pasture
   resgreen@gsnLeftString = "c4 pasture: "+year+" [ ]"
   plot(7) = gsn_csm_contour_map(wks_covers,covers(7,:,:),resgreen)
   ; crops
   resgreen@gsnLeftString = "crops: "+year+" [ ]"
   plot(8) = gsn_csm_contour_map(wks_covers,covers(8,:,:),resgreen)
   ; managed
   resgreen@gsnLeftString = "crops+pasture: "+year+" [ ]"
   plot(9) = gsn_csm_contour_map(wks_covers,covers(9,:,:),resgreen)
   ; natural
   resgreen@gsnLeftString = "natural: "+year+" [ ]"
   plot(10) = gsn_csm_contour_map(wks_covers,covers(10,:,:),resgreen)



   ;plotting the five figures as a panel
   resP=True
   resP=set_panel_settings(resP,paneltitle,year,resdes@gsnRightString)

   gsn_panel(wks_covers,plot(0:4),(/1,2,2/),resP)
   gsn_panel(wks_covers,plot(5:10),(/2,2,2/),resP)
end



undef ("plot_coverfraction_abs_martin")
procedure plot_coverfraction_abs_martin (covers:float,wkstype:string,year:string,output:string,paneltitle:string,lbside:string,region:string)
local  wks_type
begin
   ; general settings for all plots
   wks_type              = wkstype
   gsnMaximize           = True
   resgreen=True
   opt=True
   opt@lbside=lbside
   opt@region=region
   opt@landonly=True
   resgreen=set_plot_settings(opt)
   resdes=resgreen
   wks_covers            = gsn_open_wks(wks_type,output)
   cmap=def_colormap
   gsn_define_colormap(wks_covers,cmap)
   ;gsn_draw_colormap(wks_covers)

   plot=new(11,graphic)
   resgreen@cnLevels = (/0.001,0.1,0.2,0.3,0.4,0.5/)
   resgreen@cnFillColors = (/26,27,29,31,33,35,37/)
   resgreen@gsnRightString= "[ ]"
   resdes@cnLevels = (/0.001,0.1,0.2,0.3,0.4,0.5/)
   resdes@cnFillColors = (/51,55,57,59,60,61,62/)
   resdes@gsnRightString= "[ ]"

   ; plotten of absolute values for carbon pools
   ; desert fraction
   ;covers(0,:,:)=where(covers(0,:,:).eq.1,covers@_FillValue,covers(0,:,:))
   resdes@gsnLeftString = "desert fraction: "+year+" [ ]"
   plot(0) = gsn_csm_contour_map(wks_covers,covers(0,:,:),resdes)
   ; woody
   resgreen@gsnLeftString = "woody fraction: "+year+" [ ]"
   plot(1) = gsn_csm_contour_map(wks_covers,covers(1,:,:),resgreen)
   ; green
   resgreen@gsnLeftString = "tree fraction: "+year+" [ ]"
   plot(2) = gsn_csm_contour_map(wks_covers,covers(2,:,:),resgreen)
   ; shrubs
   resgreen@gsnLeftString = "shrubs fraction: "+year+" [ ]"
   plot(3) = gsn_csm_contour_map(wks_covers,covers(3,:,:),resgreen)
   ; grass
   resgreen@gsnLeftString = "grass fraction: "+year+" [ ]"
   plot(4) = gsn_csm_contour_map(wks_covers,covers(4,:,:),resgreen)


   ; c3+c4pasture
   resgreen@gsnLeftString = "c3+c4pasture: "+year+" [ ]"
   plot(5) = gsn_csm_contour_map(wks_covers,covers(5,:,:),resgreen)
   ; c3 pasture
   resgreen@gsnLeftString = "c3 pasture: "+year+" [ ]"
   plot(6) = gsn_csm_contour_map(wks_covers,covers(6,:,:),resgreen)
   ; c4 pasture
   resgreen@gsnLeftString = "c4 pasture: "+year+" [ ]"
   plot(7) = gsn_csm_contour_map(wks_covers,covers(7,:,:),resgreen)
   ; crops
   resgreen@gsnLeftString = "crops: "+year+" [ ]"
   plot(8) = gsn_csm_contour_map(wks_covers,covers(8,:,:),resgreen)
   ; managed
   resgreen@gsnLeftString = "crops+pasture: "+year+" [ ]"
   plot(9) = gsn_csm_contour_map(wks_covers,covers(9,:,:),resgreen)
   ; natural
   resgreen@gsnLeftString = "natural: "+year+" [ ]"
   plot(10) = gsn_csm_contour_map(wks_covers,covers(10,:,:),resgreen)



   ;plotting the five figures as a panel
   resP=True
   resP=set_panel_settings(resP,paneltitle,year,resdes@gsnRightString)

   gsn_panel(wks_covers,plot(0:4),(/1,2,2/),resP)
   gsn_panel(wks_covers,plot(5:10),(/2,2,2/),resP)
end




undef ("plot_coverfraction_diff")
procedure plot_coverfraction_diff (covers:float,wkstype:string,year:string,output:string,paneltitle:string,lbside:string,region:string)
local  wks_type
begin
   ; general settings for all plots
   wks_type              = wkstype
   gsnMaximize           = True
   resgreen=True
   opt=True
   opt@lbside=lbside
   opt@region=region
   opt@landonly=True
   resgreen=set_plot_settings(opt)
   resdes=resgreen
   wks_covers            = gsn_open_wks(wks_type,output)
   cmap=def_colormap

   gsn_define_colormap(wks_covers,cmap)
   ;gsn_draw_colormap(wks_covers)

   plot=new(10,graphic)
   resgreen@cnLevels = (/-0.3,-0.25,-0.20,-0.15,-0.10,-0.05,0.05,0.1,0.15,0.20,0.25,0.30/)
   resgreen@cnFillColors = ispan(38,50,1)
   resgreen@gsnRightString= "[ ]"
   resdes@cnLevels = (/-0.3,-0.25,-0.20,-0.15,-0.10,-0.05,0.05,0.1,0.15,0.20,0.25,0.30/)
   resdes@cnFillColors = ispan(63,75,1)
   resdes@gsnRightString= "[ ]"


   ; plotten of absolute values for carbon pools
   ; desert fraction
   resdes@gsnLeftString = "desert fraction: "+year+" [ ]"
   plot(0) = gsn_csm_contour_map(wks_covers,covers(0,:,:),resdes)
   ; woody
   resgreen@gsnLeftString = "woody fraction: "+year+" [ ]"
   plot(1) = gsn_csm_contour_map(wks_covers,covers(1,:,:),resgreen)
   ; green
   resgreen@gsnLeftString = "tree fraction: "+year+" [ ]"
   plot(2) = gsn_csm_contour_map(wks_covers,covers(2,:,:),resgreen)
   ; shrubs
   resgreen@gsnLeftString = "shrubs fraction: "+year+" [ ]"
   plot(3) = gsn_csm_contour_map(wks_covers,covers(3,:,:),resgreen)
   ; grass
   resgreen@gsnLeftString = "grass fraction: "+year+" [ ]"
   plot(4) = gsn_csm_contour_map(wks_covers,covers(4,:,:),resgreen)

   ; c3+c4pasture
   resgreen@gsnLeftString = "c3+c4pasture: "+year+" [ ]"
   plot(5) = gsn_csm_contour_map(wks_covers,covers(5,:,:),resgreen)
   ; c3 pasture
   resgreen@gsnLeftString = "c3 pasture: "+year+" [ ]"
   plot(6) = gsn_csm_contour_map(wks_covers,covers(6,:,:),resgreen)
   ; c4 pasture
   resgreen@gsnLeftString = "c4 pasture: "+year+" [ ]"
   plot(7) = gsn_csm_contour_map(wks_covers,covers(7,:,:),resgreen)
   ; crops
   resgreen@gsnLeftString = "crops: "+year+" [ ]"
   plot(8) = gsn_csm_contour_map(wks_covers,covers(8,:,:),resgreen)
   ; managed
   resgreen@gsnLeftString = "crops+pasture: "+year+" [ ]"
   plot(9) = gsn_csm_contour_map(wks_covers,covers(9,:,:),resgreen)


   ;plotting the five figures as a panel
   resP=True
   resP=set_panel_settings(resP,paneltitle,year,resdes@gsnRightString)

   gsn_panel(wks_covers,plot(0:4),(/1,2,2/),resP)
   gsn_panel(wks_covers,plot(5:9),(/1,2,2/),resP)
end



undef ("plot_coverfraction_1d")
procedure plot_coverfraction_1d (covers:double,wkstype:string,year:string,output:string,paneltitle:string)
begin

    covers=covers/1.e12

;    print("desert     "+dim_avg_n_Wrap(covers(0,0,0),0) +"  " +dim_avg_n_Wrap(covers(0,94,0),0) +"   "+dim_avg_n_Wrap(covers(0,94,0)-covers(0,0,0),0)  +"   "+dim_avg_n_Wrap(covers(0,94,0) -covers(0,0,0),0) /dim_avg_n_Wrap(covers(0,0,0),0))
;    print("woody      "+dim_avg_n_Wrap(covers(0,0,1),0) +"  " +dim_avg_n_Wrap(covers(0,94,1),0) +"   "+dim_avg_n_Wrap(covers(0,94,1)-covers(0,0,1),0)  +"   "+dim_avg_n_Wrap(covers(0,94,1) -covers(0,0,1),0) /dim_avg_n_Wrap(covers(0,0,1),0))
;    print("grass      "+dim_avg_n_Wrap(covers(0,0,4),0) +"  " +dim_avg_n_Wrap(covers(0,94,4),0) +"   "+dim_avg_n_Wrap(covers(0,94,4)-covers(0,0,4),0)  +"   "+dim_avg_n_Wrap(covers(0,94,4) -covers(0,0,4),0) /dim_avg_n_Wrap(covers(0,0,4),0))
;    print("pasture    "+dim_avg_n_Wrap(covers(0,0,5),0) +"  " +dim_avg_n_Wrap(covers(0,94,5),0) +"   "+dim_avg_n_Wrap(covers(0,94,5)-covers(0,0,5),0)  +"   "+dim_avg_n_Wrap(covers(0,94,5) -covers(0,0,5),0) /dim_avg_n_Wrap(covers(0,0,5),0))
;    print("crop       "+dim_avg_n_Wrap(covers(0,0,8),0) +"  " +dim_avg_n_Wrap(covers(0,94,8),0) +"   "+dim_avg_n_Wrap(covers(0,94,8)-covers(0,0,8),0)  +"   "+dim_avg_n_Wrap(covers(0,94,8) -covers(0,0,8),0) /dim_avg_n_Wrap(covers(0,0,8),0))
;    print("managed    "+dim_avg_n_Wrap(covers(0,0,9),0) +"  " +dim_avg_n_Wrap(covers(0,94,9),0) +"   "+dim_avg_n_Wrap(covers(0,94,9)-covers(0,0,9),0)  +"   "+dim_avg_n_Wrap(covers(0,94,9) -covers(0,0,9),0) /dim_avg_n_Wrap(covers(0,0,9),0))
;    print("natural    "+dim_avg_n_Wrap(covers(0,0,10),0)+"  " +dim_avg_n_Wrap(covers(0,94,10),0)+"   "+dim_avg_n_Wrap(covers(0,94,10)-covers(0,0,10),0)+"   "+dim_avg_n_Wrap(covers(0,94,10)-covers(0,0,10),0)/dim_avg_n_Wrap(covers(0,0,10),0))
;    print("total land "+dim_avg_n_Wrap(covers(0,0,11),0)+"  " +dim_avg_n_Wrap(covers(0,94,11),0)+"   "+dim_avg_n_Wrap(covers(0,94,11)-covers(0,0,11),0)+"   "+dim_avg_n_Wrap(covers(0,94,11)-covers(0,0,11),0)/dim_avg_n_Wrap(covers(0,0,11),0))


    ;time=covers&time(:)/10000.+0.37685
    wks = gsn_open_wks(wkstype,output)        ; Open a workstation.

    plot=new((/15/),graphic)

    ;0 desert
    ;1 woody
    ;2 tree
    ;3 shrubs
    ;4 grass
    ;5 c3 pasture+c4 pasture
    ;6 c3 pasture
    ;7 c4 pasture
    ;8 crops
    ;9 managed
    ;10 natural
    ;11 total land

    titles=(/"desert","woody","tree","shrubs","grass", \
    "pasture (c3+c4)","c3 pasture","c4 pasture","crops (c3+c4)",\
    "managed land","natural land","total land"/)

    res               = True                   ; plot mods desired
    res@gsnFrame      = False
    res@gsnDraw       = False

    res@tiMainString  = "coverfractions: "   ; title
    res@tiYAxisString = "coverage [Mil. km2]"           ; y axis title
    ;resa@tmYLFormat = "#^se"
    res@tmYBPrecision = 2
    res@tiXAxisString = "time"                 ; x axis title

    res@xyLineColors      = (/"blue","red","black","olivedrab4","peru"/)  ; line colors
    res@xyLineThicknesses = (/2.5,2.5,2.5,2.0,2.0/)        ; line thicknesses
    res@xyDashPatterns    = (/0.0,0.0,1.0,2.0,2.0/)        ; line patterns

    res@pmLegendOrthogonalPosF = -0.35
    res@pmLegendParallelPosF   = 0.9

    do iplot=0,10
        res@tiMainString  = titles(iplot)
        res@xyExplicitLegendLabels =  (/""/)
;        plot(iplot) = gsn_xy(wks,time,data(:,iplot),res)
        plot(iplot) = gsn_y(wks,covers(1,:,iplot),res)

    end do

    resP=True
    resP@gsnPanelRowSpec=True

    gsn_panel(wks,plot(0:5),(/2,2,2/),resP)
    gsn_panel(wks,plot(6:10),(/1,2,2/),resP)

end





undef ("plot_zscore")
procedure plot_zscore (fire:float,wkstype:string,year:string,output:string,paneltitle:string,lbside:string,region:string)
local  wks_type
begin
   ; general settings for all plots
   wks_type              = wkstype
   gsnMaximize           = True
   resfire=True
   opt=True
   opt@lbside=lbside
   opt@region=region
   opt@landonly=True
   resfire=set_plot_settings(opt)
   wks_fire            = gsn_open_wks(wks_type,output)
   cmap=def_colormap


   gsn_define_colormap(wks_fire,cmap)
   ;gsn_draw_colormap(wks_fire)

   plot=new(1,graphic)
   resfire@cnLevels = (/-2.5,-2.,-1.5,-1.0,-0.5,0.5,1.0,1.5,2.0,2.5/)
   resfire@cnFillColors = ispan(86,96,1)
   resfire@gsnRightString= "[ ]"

   ; plotting burned area
   resfire@gsnLeftString = "burned area: "+year ;+" "+fire(1,0,0)+" [M ha]"
   plot(0) = gsn_csm_contour_map(wks_fire,fire(:,:),resfire)

   getvalues plot@contour
    "cnLevels" : levels
   end getvalues
   resfire@lbLabelStrings       = sprintf("%4.3f",levels)   ; Format the labels
   plot(0) = gsn_csm_contour_map(wks_fire,fire(:,:),resfire)

   ;plotting the figures as a panel
   resP=True
   resP=set_panel_settings(resP,paneltitle,year,resfire@gsnRightString)
   gsn_panel(wks_fire,plot(0),(/1/),resP)
end



undef ("plot_zscore_marlon")
procedure plot_zscore_marlon (fireMZ,fireCZ:float,wkstype:string,year:string,output:string,paneltitle:string,lbside:string,region:string)
local  wks_type
begin
   ; general settings for all plots
   wks_type              = wkstype
   gsnMaximize           = True
   resfire=True
   opt=True
   opt@lbside=lbside
   opt@region=region
   opt@landonly=True
   resfire=set_plot_settings(opt)


   resfire@gsnDraw              = False
   resfire@gsnFrame             = False

   wks_fire            = gsn_open_wks(wks_type,output)
   cmap=def_colormap


   gsn_define_colormap(wks_fire,cmap)
   ;gsn_draw_colormap(wks_fire)

   plot=new(5,graphic)
;   resfire@cnLevels = (/-2.5,-2.,-1.5,-1.0,-0.5,0.5,1.0,1.5,2.0,2.5/)
   resfire@cnLevels = (/-2.,-1.5,-1.0,-0.5,0,0.5,1.0,1.5,2.0/)
   resfire@cnFillColors = (/86,87,88,89,90,92,93,94,95,96/) ;ispan(86,96,1)


   nlevel=dimsizes(resfire@cnLevels)
   ;print(nlevel)
;   resfire@cnFillColors = ispan(86,96,1)
   ncolors=dimsizes(resfire@cnFillColors)
   resfire@gsnRightString= "[ ]"

   ; plotting burned area

   resfire@gsnLeftString = paneltitle

;   resfire@cnFillDrawOrder = "PreDraw"
;   resfire@mpFillDrawOrder ="Draw"

   plot(0) = gsn_csm_contour_map(wks_fire,fireMZ(:,:),resfire)
   draw(plot(0))
   ;printVarSummary(resfire)


   ;getvalues plot@contour
;    "cnLevels" : levels
;   end getvalues
;   resfire@lbLabelStrings       = sprintf("%4.3f",levels)   ; Format the labels
   ;plot(0) = gsn_csm_contour_map(wks_fire,fireMZ(:,:),resfire)
   ;plot(3) = gsn_csm_contour_map(wks_fire,fireMZ(:,:),resfire)




   ;plot(1) = gsn_csm_contour_map(wks_fire,fireCZ(:,:),resfire)
   ;printVarSummary(fireCZ)

   clons=fireCZ&lon
   clats=fireCZ&lat
;	print(clons)
;	print(clats)

   nclats=dimsizes(clats)
   nclons=dimsizes(clons)

   pmres=True
   pmres@gsMarkerIndex    = 12
   pmres@gsMarkerSizeF    = 0.006


   pmres@gsMarkerColor    = "yellow"
   pmres@tfPolyDrawOrder = "PostDraw"



   ;print (resfire@cnFillColors)

   do ilat=0,nclats-1
       do ilon=0,nclons-1
	   	if (.not. ismissing(fireCZ(ilat,ilon))) then

			; filled dots
			pmres@gsMarkerIndex    = 16
			pmres@gsMarkerColor    = resfire@cnFillColors(0)

			if (fireCZ(ilat,ilon).lt.0) then
				pmres@gsnMarkerIndex = 3
			else
				pmres@gsnMarkerIndex = 4
			end if
			do ilevel=0,nlevel-1
				if (fireCZ(ilat,ilon).gt.resfire@cnLevels(ilevel)) then
					pmres@gsMarkerColor    = resfire@cnFillColors(ilevel+1)
					;print("searching color: "+ilat+" "+ilon+"   "+fireCZ(ilat,ilon)+"   "+pmres@gsMarkerColor )
				end if
			end do
			;print("------plotting: "+ilat+" "+ilon+"   "+fireCZ(ilat,ilon)+"   "+pmres@gsMarkerColor )
			gsn_polymarker(wks_fire,plot(0),clons(ilon),clats(ilat),pmres)
			pmres@gsMarkerIndex    = 4           ; Hollow dots
			pmres@gsMarkerColor    = "black"
			gsn_polymarker(wks_fire,plot(0),clons(ilon),clats(ilat),pmres)
			end if
       end do
   end do

  frame(wks_fire)

   ;plotting the figures as a panel

   ;resP=True
   ;resP=set_panel_settings(resP,paneltitle,year,resfire@gsnRightString)
   ;gsn_panel(wks_fire,plot(0),(1),resP)
end



undef ("plot_zscore_marlon2")
procedure plot_zscore_marlon2 (fireMZ,fireCZ:float,wkstype:string,year:string,output:string,paneltitle:string,lbside:string,region:string,size:float,projection:string)
local  wks_type
begin
  ; general settings for all plots
  wks_type              = wkstype
  ;gsnMaximize           = True
  resfire=True
  opt=True
  opt@lbside=lbside
  opt@region=region
  opt@landonly=True
  opt@projection=projection
  resfire=set_plot_settings(opt)


  resfire@gsnDraw              = False
  resfire@gsnFrame             = False

  wks_fire            = gsn_open_wks(wks_type,output)
  cmap=def_colormap


  gsn_define_colormap(wks_fire,cmap)
  ;gsn_draw_colormap(wks_fire)

  plot=new(5,graphic)

  resfire@cnLevels = (/-2.,-1.5,-1.0,-0.5,0,0.5,1.0,1.5,2.0/)
  resfire@cnFillColors = (/86,87,88,89,90,92,93,94,95,96/) ;ispan(86,96,1)

;   resfire@cnLevels = (/-2.5,-2.,-1.5,-1.0,-0.5,0.5,1.0,1.5,2.0,2.5/)
  nlevel=dimsizes(resfire@cnLevels)
  ;print(nlevel)
;   resfire@cnFillColors = ispan(86,96,1)
  ncolors=dimsizes(resfire@cnFillColors)
  resfire@gsnRightString= "[ ]"

  ; plotting burned area

  resfire@gsnLeftString = paneltitle


;   resfire@cnFillDrawOrder = "PreDraw"
;   resfire@mpFillDrawOrder ="Draw"

  plot(0) = gsn_csm_contour_map(wks_fire,fireMZ(:,:),resfire)
  draw(plot(0))
  ;printVarSummary(resfire)
  ;printVarSummary(fireCZ)

  clons=fireCZ&lon
  clats=fireCZ&lat

  nclats=dimsizes(clats)
  nclons=dimsizes(clons)

  pmres=True
  pmres@gsMarkerIndex    = 12
  pmres@gsMarkerSizeF    = size

  pmres@gsMarkerColor    = "yellow"
  pmres@tfPolyDrawOrder = "PostDraw"

  ;print (resfire@cnFillColors)
  ndots=0
  plus=0
  minus=0
  do ilat=0,nclats-1
      do ilon=0,nclons-1
	if (.not. ismissing(fireCZ(ilat,ilon)) .AND. .not. ismissing(fireMZ(ilat,ilon)) ) then
            if (fireCZ(ilat,ilon).lt.0) then
                pmres@gsnMarkerIndex = 3
            else
                pmres@gsnMarkerIndex = 4
            end if

            ; filled dots
            pmres@gsMarkerIndex    = 16
            pmres@gsMarkerColor    = resfire@cnFillColors(0)
            if  ((fireCZ(ilat,ilon) * fireMZ(ilat,ilon)) .gt. 0.)  then
                            pmres@gsMarkerColor    = "green"
                            plus=plus+1
                    else
                            pmres@gsMarkerColor    = "darkviolet"
                            minus=minus - 1
            end if
;			print("------plotting: "+ilat+" "+ilon+"   "+fireCZ(ilat,ilon)+"   "+pmres@gsMarkerColor )
            gsn_polymarker(wks_fire,plot(0),clons(ilon),clats(ilat),pmres)
            pmres@gsMarkerIndex    = 4           ; Hollow dots
            pmres@gsMarkerColor    = "black"
            gsn_polymarker(wks_fire,plot(0),clons(ilon),clats(ilat),pmres)
            ndots=ndots+1
        end if
      end do
  end do
  ; print (plus+"  "+minus+"   "+plus+minus)

  ; CZ=new(ndots,float)
;    MZ=new(ndots,float)
;    idot=0
;    do ilat=0,nclats-1
;        do ilon=0,nclons-1
; 	   	if (.not. ismissing(fireCZ(ilat,ilon)) .AND. .not. ismissing(fireMZ(ilat,ilon)) ) then
;    		 	CZ(idot)=fireCZ(ilat,ilon)
;    		 	MZ(idot)=fireMZ(ilat,ilon)
; 			idot=idot+1
; 		end if
; 	   end do
; 	end do
;
;
;     spc = spcorr(CZ,MZ)
;
; 	  print(spc)

 frame(wks_fire)

  ;plotting the figures as a panel

  ;resP=True
  ;resP=set_panel_settings(resP,paneltitle,year,resfire@gsnRightString)
  ;gsn_panel(wks_fire,plot(0),(1),resP)
end



undef ("plot_zscore_marlon3")
procedure plot_zscore_marlon3 (fireMZ:float,fireCZ:logical,wkstype:string,year:string,output:string,paneltitle:string,lbside:string,region:string,signum:logical,scaling:logical,size)
local  wks_type
begin
   ; general settings for all plots
   wks_type              = wkstype
   ;gsnMaximize           = True
   resfire=True
   opt=True
   opt@lbside=lbside
   opt@region=region
   opt@landonly=True
   resfire=set_plot_settings(opt)
   resfire@gsnDraw              = False
   resfire@gsnFrame             = False

   wks_fire            = gsn_open_wks(wks_type,output)
   cmap=def_colormap
   gsn_define_colormap(wks_fire,cmap)
   resfire@cnFillColors = (/86,87,88,89,90,92,93,94,95,96/) ;ispan(86,96,1)

   plot=new(5,graphic)

   dims=dimsizes(fireMZ)
   nlats=dims(0)
   nlons=dims(1)


   mlats2d=fireMZ
   mlons2d=fireMZ
   printVarSummary(mlons2d)
   do ilat=0,nlats-1
	   mlats2d(ilat,:)=dble2flt(fireMZ&lat(ilat))
   end do
   do ilon=0,nlons-1
	   mlons2d(:,ilon)=dble2flt(fireMZ&lon(ilon))
   end do
   print(mlats2d)

   clons=fireCZ@lons
   clats=fireCZ@lats
   char=fireCZ@char
   printVarSummary(char)
   char@_FillValue=-999.
   ndots=dimsizes(char)

   nm = getind_latlon2d (mlats2d,mlons2d,clats,clons)
   printVarSummary(nm)
   do idot=0,ndots-1
	   ;print("working on: "+idot)

	   print(idot+":  "+fireMZ(nm(idot,0),nm(idot,1))+"      "+char(idot))
	   print(idot+":   charcoal(lat,lon): "+clats(idot)+"   "+clons(idot)+"   modelgrid(lat,lon): "+nm(idot,0)+"  "+nm(idot,1)+"  "+mlats2d(nm(idot,0),0)+"   "+mlons2d(0,nm(idot,1)))

	   if (ismissing(fireMZ(nm(idot,0), nm(idot,1)))) then

		   mylat=nm(idot,0)
		   mylon=nm(idot,1)
		   mydistance= -99999.

		   investlats=ispan(mylat-2,mylat+2,1)
		   print(investlats)
		   investlons=ispan(mylon-2,mylon+2,1)
		   investlons=where(investlons.ge.nlons,investlons-nlons,investlons)
		   investlons=where(investlons.lt.0,investlons+nlons-2,investlons)
		   print(investlons)

		   do ilat=0,4 ;mylat-2,mylat+2
			   do ilon=0,4 ;mylon-2,mylon+2
				   ;print("..... looking around: "+mydistance+" km --- ilat: "+ilat+"   ilon: "+ilon)

				   if (.not. ismissing (fireMZ(investlats(ilat),investlons(ilon)))) then
					   d=gc_latlon(clats(idot),clons(idot),investlats(ilat),investlons(ilon),2,4)
					   if (d .lt. abs(mydistance) ) then
						   newlat=investlats(ilat)
						   newlon=investlons(ilon)
						   mydistance=d
					   end if
				   end if
			   end do
		   end do
		   if ( mydistance .eq. -99999. ) then
			   print("no data found for: "+idot+"  "+mylat+"   "+mylon)
			   char(idot)=char@_FillValue

		   else
			   print("closest data found for: "+mylat+"   "+mylon)
			   print("referencing grid point: "+newlat+"   "+newlon)

			   print("distance: "+mydistance)
			   nm(idot,0)=newlat
			   nm(idot,1)=newlon

		   end if
	   end if

   end do



   if (scaling) then
	   resfire@cnLevels = (/-0.6,-0.4,-0.2,-0.05,0.,0.05,0.2,0.4,0.6/)
	   ; scaling model values fireMZ
	   do ilat=0,nlats-1
		   do ilon = 1, nlons-1
			   if (.not. ismissing(fireMZ(ilat,ilon))) then
				   if (fireMZ(ilat,ilon).lt. 0.) then
					   fireMZ(ilat,ilon)=fireMZ(ilat,ilon)/min(fireMZ) * (-1.)
				   else
					   fireMZ(ilat,ilon)=fireMZ(ilat,ilon)/max(fireMZ)
				   end if
			   end if
		   end do
	   end do
   	   ; scaling of charcoal data
	   ; charcoal data
	   do idot=0,ndots-1
		   if (fireCZ@char(idot) .lt. 0. ) then
		   	   fireCZ@char(idot)=fireCZ@char(idot)/min(fireCZ@char) * (-1.)
		   else
			   fireCZ@char(idot)=fireCZ@char(idot)/max(fireCZ@char)
		   end if
	   end do
   else
	   resfire@cnLevels = (/-2.,-1.5,-1.0,-0.5,0,0.5,1.0,1.5,2.0/)
   end if



   nlevel=dimsizes(resfire@cnLevels)
   ncolors=dimsizes(resfire@cnFillColors)
   resfire@gsnRightString= "[ ]"
   resfire@gsnLeftString = paneltitle

   plot(0) = gsn_csm_contour_map(wks_fire,fireMZ(:,:),resfire)
   draw(plot(0))


   pmres1=True
   pmres1@tfPolyDrawOrder = "PostDraw"
   pmres1@gsMarkerSizeF    = size
   pmres1@gsMarkerColor    = "black"
   pmres1@gsMarkerThicknessF = 6.

   pmres2=pmres1
   pmres2@gsMarkerThicknessF = 4.

   pmres3=pmres2
   pmres3@gsMarkerColor    = "grey"
   pmres3@gsMarkerIndex = 6

   plus=0
   minus=0
   notassigned=0
   do idot=0,ndots-1
	   	if (.not. ismissing(char(idot))) then
			if (.not. ismissing(fireMZ(nm(idot,0), nm(idot,1)))) then
				if (char(idot).lt. 0) then
					pmres1@gsMarkerIndex = 4 ; hollow circle negativ
				else
					pmres1@gsMarkerIndex = 2  ; positive +
				end if
				gsn_polymarker(wks_fire,plot(0),clons(idot),clats(idot),pmres1)



				; if signum
				pmres2@gsMarkerIndex=pmres1@gsMarkerIndex
				if (signum) then
					if ((fireMZ(nm(idot,0), nm(idot,1)) * char(idot)) .gt. 0) then
						pmres2@gsMarkerColor    = "green"
						plus=plus+1
					else
						pmres2@gsMarkerColor    = "violet"
						minus=minus-1
					end if
				 else
					do ilevel=0,nlevel-1
						if (char(idot).gt.resfire@cnLevels(ilevel)) then
							pmres2@gsMarkerThicknessF = 1.
							pmres2@gsMarkerColor    = resfire@cnFillColors(ilevel+1)
						end if
					end do
				 end if
				 gsn_polymarker(wks_fire,plot(0),clons(idot),clats(idot),pmres2)
			 end if
		 else
			 ; miising value in data

			 print(idot+"  "+clons(idot)+"   "+clats(idot)+"   "+char(idot))
			 gsn_polymarker(wks_fire,plot(0),clons(idot),clats(idot),pmres3)
			 notassigned=notassigned+1
		end if
   end do

  frame(wks_fire)


    CZ=new(ndots,float)
	CZ@_FillValue=-999
    MZ=CZ


    idot=0
	do idot=1,ndots
		CZ(idot)=char(idot)
		MZ(idot)=fireMZ(nm(idot,0),nm(idot,1))

		if (ismissing(CZ(idot))) then
			MZ(idot)=CZ(idot)
		end if
 		idot=idot+1
	end do

	spc = spcorr(CZ,MZ)

	  print (plus+"   "+minus+"  "+notassigned+"   "+spc)
end



undef ("plot_zscore_marlon4")
procedure plot_zscore_marlon4 (fireMZ:float,fireCZ:logical,wkstype:string,year:string,output:string,paneltitle:string,lbside:string,region:string)
local  wks_type
begin
   ; general settings for all plots
   wks_type              = wkstype
   gsnMaximize           = True
   resfire=True
   opt=True
   opt@lbside=lbside
   opt@region=region
   opt@landonly=True
   resfire=set_plot_settings(opt)


   resfire@gsnDraw              = False
   resfire@gsnFrame             = False

   wks_fire            = gsn_open_wks(wks_type,output)
   cmap=def_colormap


   gsn_define_colormap(wks_fire,cmap)
   ;gsn_draw_colormap(wks_fire)

   plot=new(5,graphic)

   resfire@cnLevels = (/-0.6,-0.4,-0.2,-0.05,0.,0.05,0.2,0.4,0.6/)
;   resfire@cnLevels = (/-2.,-1.5,-1.0,-0.5,0,0.5,1.0,1.5,2.0/)
   resfire@cnFillColors = (/86,87,88,89,90,92,93,94,95,96/) ;ispan(86,96,1)

   ;model data fireMZ
   dims=dimsizes(fireMZ)
   nlat=dims(0)
   nlon=dims(1)


   ; charcoal data
   clons=fireCZ@lons
   clats=fireCZ@lats
   char=fireCZ@char
   char@_FillValue=-999.

   do ilat=0,nlat-1
	   do ilon = 1, nlon-1
		   if (.not. ismissing(fireMZ(ilat,ilon))) then
			   if (fireMZ(ilat,ilon).lt. 0.) then
				   fireMZ(ilat,ilon)=fireMZ(ilat,ilon)/min(fireMZ) * (-1.)
			   else
				   fireMZ(ilat,ilon)=fireMZ(ilat,ilon)/max(fireMZ)
			   end if
		   end if
	   end do
   end do

   nlevel=dimsizes(resfire@cnLevels)
   ;print(nlevel)
   ;resfire@cnFillColors = ispan(86,96,1)
   ncolors=dimsizes(resfire@cnFillColors)
   resfire@gsnRightString= "[ ]"

   ; plotting burned area

   resfire@gsnLeftString = paneltitle


;   resfire@cnFillDrawOrder = "PreDraw"
;   resfire@mpFillDrawOrder ="Draw"

   plot(0) = gsn_csm_contour_map(wks_fire,fireMZ(:,:),resfire)
   draw(plot(0))

   ;printVarSummary(resfire)
   ;printVarSummary(fireCZ)


   clons=fireCZ@lons
   clats=fireCZ@lats
   char=fireCZ@char
   char@_FillValue=-999.
;	print(clons)
;	print(clats)

   ndots=dimsizes(char)

   pmres=True
   pmres@gsMarkerIndex    = 12
   pmres@gsMarkerSizeF    = 0.005
   pmres@tfPolyDrawOrder = "PostDraw"


   ;print (resfire@cnFillColors)

   do idot=0,ndots-1
	   	if ( .not. ismissing(char(idot))) then

			; filled dots
			pmres@gsMarkerIndex    = 16
			pmres@gsMarkerColor    = resfire@cnFillColors(0)

			if (char(idot).lt.0.) then
				char(idot)=char(idot)/min(char(:))*(-1)
			else
				char(idot)=char(idot)/max(char(:))
			end if


			; if  ((fireCZ(ilat,ilon).gt.0. .AND. fireMZ(ilat,ilon).gt.0.) .OR. \
; 			    (fireCZ(ilat,ilon).lt.-0. .AND. fireMZ(ilat,ilon).lt.-0.) .OR. \
; 				((abs(fireCZ(ilat,ilon))+abs(fireMZ(ilat,ilon))).lt.1) )  then
; 					pmres@gsMarkerColor    = "green"
; 				else
; 					pmres@gsMarkerColor    = "darkviolet"
; 			end if


			if (fireCZ(ilat,ilon).lt.0) then
				pmres@gsnMarkerIndex = 3
			else
				pmres@gsnMarkerIndex = 4
			end if
			do ilevel=0,nlevel-1
				if (char(idot).gt.resfire@cnLevels(ilevel)) then
					pmres@gsMarkerColor    = resfire@cnFillColors(ilevel+1)
					;print("searching color: "+idot+" "+char(idot)+"   "+pmres@gsMarkerColor )
				end if
			end do
			;print("------plotting: "+idot+" "+char(idot)+"   "+pmres@gsMarkerColor)


;			print("------plotting: "+ilat+" "+ilon+"   "+fireCZ(ilat,ilon)+"   "+pmres@gsMarkerColor )
			gsn_polymarker(wks_fire,plot(0),clons(idot),clats(idot),pmres)
			pmres@gsMarkerIndex    = 4           ; Hollow dots
			pmres@gsMarkerColor    = 1; "black"
			gsn_polymarker(wks_fire,plot(0),clons(idot),clats(idot),pmres)

		end if
   end do


   	;    CZ=new(ndots,float)
	;    MZ=new(ndots,float)
	;    idot=0
	;    do ilat=0,nclats-1
	;        do ilon=0,nclons-1
	;    	if (.not. ismissing(fireCZ(ilat,ilon)) .AND. .not. ismissing(fireMZ(ilat,ilon)) ) then
	;    		 	CZ(idot)=fireCZ(ilat,ilon)
	;    		 	MZ(idot)=fireMZ(ilat,ilon)
	; 		idot=idot+1
	; 	end if
	;    end do
	; end do
	;
	;
	;     spc = spcorr(CZ,MZ)
	;
	;   print(spc)

  frame(wks_fire)

   ;plotting the figures as a panel

   ;resP=True
   ;resP=set_panel_settings(resP,paneltitle,year,resfire@gsnRightString)
   ;gsn_panel(wks_fire,plot(0),(1),resP)
end


undef ("plot_zscore_marlon5")
procedure plot_zscore_marlon5 (fireMZ,fireCZ:float,wkstype:string,year:string,output:string,paneltitle:string,lbside:string,region:string)
local  wks_type
begin
   ; general settings for all plots
   wks_type              = wkstype
   gsnMaximize           = True
   resfire=True
   opt=True
   opt@lbside=lbside
   opt@region=region
   opt@landonly=True
   resfire=set_plot_settings(opt)


   resfire@gsnDraw              = False
   resfire@gsnFrame             = False

   wks_fire            = gsn_open_wks(wks_type,output)
   cmap=def_colormap


   gsn_define_colormap(wks_fire,cmap)
   ;gsn_draw_colormap(wks_fire)

   plot=new(5,graphic)
   resfire@cnLevels = (/-0.6,-0.4,-0.2,-0.05,0.,0.05,0.2,0.4,0.6/)

   ;resfire@cnLevels = (/-2.,-1.5,-1.0,-0.5,0,0.5,1.0,1.5,2.0/)
   resfire@cnFillColors = (/86,87,88,89,90,92,93,94,95,96/) ;ispan(86,96,1)

   dims=dimsizes(fireMZ)
   nlat=dims(0)
   nlon=dims(1)

   do ilat=0,nlat-1
	   do ilon = 1, nlon-1
		   if (.not. ismissing(fireMZ(ilat,ilon))) then
			   if (fireMZ(ilat,ilon).lt. 0.) then
				   fireMZ(ilat,ilon)=fireMZ(ilat,ilon)/min(fireMZ) * (-1.)
			   else
				   fireMZ(ilat,ilon)=fireMZ(ilat,ilon)/max(fireMZ)
			   end if
		   end if
	   end do
   end do


   nlevel=dimsizes(resfire@cnLevels)
   ;print(nlevel)
   ;resfire@cnFillColors = ispan(86,96,1)
   ncolors=dimsizes(resfire@cnFillColors)
   resfire@gsnRightString= "[ ]"

   ; plotting burned area

   resfire@gsnLeftString = paneltitle


;   resfire@cnFillDrawOrder = "PreDraw"
;   resfire@mpFillDrawOrder ="Draw"

   plot(0) = gsn_csm_contour_map(wks_fire,fireMZ(:,:),resfire)
draw(plot(0))
   ;printVarSummary(resfire)


   ;getvalues plot@contour
;    "cnLevels" : levels
;   end getvalues
;   resfire@lbLabelStrings       = sprintf("%4.3f",levels)   ; Format the labels
   ;plot(0) = gsn_csm_contour_map(wks_fire,fireMZ(:,:),resfire)
   ;plot(3) = gsn_csm_contour_map(wks_fire,fireMZ(:,:),resfire)




   ;plot(1) = gsn_csm_contour_map(wks_fire,fireCZ(:,:),resfire)
   ; printVarSummary(fireCZ)

   clons=fireCZ&lon
   clats=fireCZ&lat
;	print(clons)
;	print(clats)

   nclats=dimsizes(clats)
   nclons=dimsizes(clons)

   pmres=True
   pmres@gsMarkerIndex    = 12
   pmres@gsMarkerSizeF    = 0.006


   pmres@gsMarkerColor    = "yellow"
   pmres@tfPolyDrawOrder = "PostDraw"



   ; print (resfire@cnFillColors)

   do ilat=0,nclats-1
       do ilon=0,nclons-1
	   	if (.not. ismissing(fireCZ(ilat,ilon))) then


			if (fireCZ(ilat,ilon).lt.0.) then
				fireCZ(ilat,ilon)=fireCZ(ilat,ilon)/min(fireCZ) * -1.
			else
				fireCZ(ilat,ilon)=fireCZ(ilat,ilon)/max(fireCZ)
			end if

			; filled dots
			pmres@gsMarkerIndex    = 16
			pmres@gsMarkerColor    = resfire@cnFillColors(0)

			if (fireCZ(ilat,ilon).lt.0) then
				pmres@gsnMarkerIndex = 3
			else
				pmres@gsnMarkerIndex = 4
			end if

			do ilevel=0,nlevel-1
				if (fireCZ(ilat,ilon).gt.resfire@cnLevels(ilevel)) then
					pmres@gsMarkerColor    = resfire@cnFillColors(ilevel+1)
			;		print("searching color: "+ilat+" "+ilon+"   "+fireCZ(ilat,ilon)+"   "+pmres@gsMarkerColor )
				end if
			end do
			;print("------plotting: "+ilat+" "+ilon+"   "+fireCZ(ilat,ilon)+"   "+pmres@gsMarkerColor )
			gsn_polymarker(wks_fire,plot(0),clons(ilon),clats(ilat),pmres)
			pmres@gsMarkerIndex    = 4           ; Hollow dots
			pmres@gsMarkerColor    = "black"
			gsn_polymarker(wks_fire,plot(0),clons(ilon),clats(ilat),pmres)
			end if
       end do
   end do

  frame(wks_fire)

   ;plotting the figures as a panel

   ;resP=True
   ;resP=set_panel_settings(resP,paneltitle,year,resfire@gsnRightString)
   ;gsn_panel(wks_fire,plot(0),(1),resP)
end



undef ("plot_zscore_marlon6")
procedure plot_zscore_marlon6 (fireMZ:float,fireCZ:logical,wkstype:string,year:string,output:string,paneltitle:string,lbside:string,region:string)
local  wks_type
begin
   ; general settings for all plots
   wks_type              = wkstype
   gsnMaximize           = True
   resfire=True
   opt=True
   opt@lbside=lbside
   opt@region=region
   opt@landonly=True
   resfire=set_plot_settings(opt)


   resfire@gsnDraw              = False
   resfire@gsnFrame             = False

   wks_fire            = gsn_open_wks(wks_type,output)
   cmap=def_colormap


   gsn_define_colormap(wks_fire,cmap)
   ;gsn_draw_colormap(wks_fire)

   plot=new(5,graphic)
   ;resfire@cnLevels = (/-2.5,-2.,-1.5,-1.0,-0.5,0.5,1.0,1.5,2.0,2.5/)
   resfire@cnLevels = (/-2.,-1.5,-1.0,-0.5,0,0.5,1.0,1.5,2.0/)
   resfire@cnFillColors = (/86,87,88,89,90,92,93,94,95,96/) ;ispan(86,96,1)

   nlevel=dimsizes(resfire@cnLevels)
   ;print(nlevel)
   ;resfire@cnFillColors = ispan(86,96,1)
   ncolors=dimsizes(resfire@cnFillColors)
   resfire@gsnRightString= "[ ]"

   ; plotting burned area

   resfire@gsnLeftString = paneltitle


;   resfire@cnFillDrawOrder = "PreDraw"
;   resfire@mpFillDrawOrder ="Draw"

; LAT LON


   plot(0) = gsn_csm_contour_map(wks_fire,fireMZ(:,:),resfire)
   draw(plot(0))
      ;
   ; printVarSummary(resfire)
   ; printVarSummary(fireCZ)
   ; printVarSummary(fireMZ)



   lat2d=fireMZ
   lon2d=fireMZ

   nlons=dimsizes(fireMZ&lon)
   nlats=dimsizes(fireMZ&lat)


   do ilat=0,nlats-1
	   ;printVarSummary(fireMZ&lat(ilat))
	   lat2d(ilat,:)=dble2flt(fireMZ&lat(ilat))
   end do
   do ilon=0,nlons-1
	   lon2d(:,ilon)=dble2flt(fireMZ&lon(ilon))
   end do



   clons=fireCZ@lons
   clats=fireCZ@lats
   char=fireCZ@char
   char@_FillValue=-999.
;	print(clons)
;	print(clats)

   ndots=dimsizes(char)

   pmres=True
   pmres@gsMarkerIndex    = 12
   pmres@gsMarkerSizeF    = 0.005
   pmres@tfPolyDrawOrder = "PostDraw"


   ;print (resfire@cnFillColors)

   nm = getind_latlon2d (lat2d,lon2d,clats,clons)

;   printVarSummary (fireMZ)
printVarSummary(clats)
   ; correcting for coastal dots:
	   myDist=99999.
   do idot=0,ndots-1
	   if (ismissing (fireMZ(nm(idot,0),nm(idot,1))))
	   		;myDist=gc_latlon(clats(idot),clons(idot),fireMZ&lat(0),fireMZ&lon(0), 0,4)

	 	   printVarSummary(myDist)
		   print(myDist)

;		   myDist=gc_latlon(/clats(idot)/,/clons(idot)/,fireMZ&lat(nm(idot,0)-2:nm(idot,0)+2),fireMZ&lon(0), 0,4)
;		   printVarSummary(myDist)






	   	 do ilat=nm(idot,0)-2,nm(idot,0)+2

			   do ilon=nm(idot,1)-2,nm(idot,1)+2
				   mylat=ilat % nlats
				   mylon=ilon % nlons
				   if (mylon .lt. 0) then
					   mylon=nlons+mylon
				   end if
				   ;print(ilat+"  "+ilon+"   "+idot)
				   ;print(ilat+"  "+ilon+"  "+mylon+"  "+mylat+"   "+idot)
		   			if (.not. ismissing (fireMZ(mylat, mylon))) then
						myNewDist=gc_latlon((clats(idot)),(clons(idot)),(fireMZ&lat(ilat)),(fireMZ&lon(ilon)), 0,4)
						print("dist= "+myNewDist)
		   		 		if ( myNewDist .lt. myDist) then
							SaveLon=ilon
							SaveLat=ilat
			   		 		print("exist: "+mylat+"  "+mylon+"   "+idot+"    "+myNewDist)
							myDist=myNewDist
						end if
					end if
	  			  end do
 		   end do
  	 end if
	end do





   ;printVarSummary(nm)
   plus=0
   minus=0

   do idot=0,ndots-1
	   	if ( .not. ismissing(char(idot))) then

			; filled dots
			pmres@gsMarkerIndex    = 16
			;pmres@gsMarkerColor    = resfire@cnFillColors(0)

			if  (.not. ismissing(fireMZ(nm(idot,0),nm(idot,1)))) then

					if ((fireMZ(nm(idot,0), nm(idot,1)) * char(idot)) .gt. 0 ) then
						pmres@gsMarkerColor    = "green"
						pmres@gsnMarkerIndex = 3
						plus=plus+1
					else
						pmres@gsMarkerColor    = "darkviolet"
						pmres@gsnMarkerIndex = 4
						minus=minus-1
				end if
			else
				pmres@gsMarkerColor    = "gray"
			end if




			; do ilevel=0,nlevel-1
; 				if (char(idot).gt.resfire@cnLevels(ilevel)) then
; 					pmres@gsMarkerColor    = resfire@cnFillColors(ilevel+1)
; 					print("searching color: "+idot+" "+char(idot)+"   "+pmres@gsMarkerColor )
; 				end if
; 			end do
;			print("------plotting: "+idot+" "+nm(idot,0)+"  "+nm(idot,1)+"  "+char(idot)+"   "+pmres@gsMarkerColor)


;			print("------plotting: "+ilat+" "+ilon+"   "+fireCZ(ilat,ilon)+"   "+pmres@gsMarkerColor )
			gsn_polymarker(wks_fire,plot(0),clons(idot),clats(idot),pmres)
			pmres@gsMarkerIndex    = 4           ; Hollow dots
			pmres@gsMarkerColor    = 1; "black"
			gsn_polymarker(wks_fire,plot(0),clons(idot),clats(idot),pmres)

		end if
   end do


   	;    CZ=new(ndots,float)
	;    MZ=new(ndots,float)
	;    idot=0
	;    do ilat=0,nclats-1
	;        do ilon=0,nclons-1
	;    	if (.not. ismissing(fireCZ(ilat,ilon)) .AND. .not. ismissing(fireMZ(ilat,ilon)) ) then
	;    		 	CZ(idot)=fireCZ(ilat,ilon)
	;    		 	MZ(idot)=fireMZ(ilat,ilon)
	; 		idot=idot+1
	; 	end if
	;    end do
	; end do
	;
	;
	;     spc = spcorr(CZ,MZ)
	;
	;   print(spc)

  frame(wks_fire)
  ; print(plus)
  ; print(minus)
   ;plotting the figures as a panel

   ;resP=True
   ;resP=set_panel_settings(resP,paneltitle,year,resfire@gsnRightString)
   ;gsn_panel(wks_fire,plot(0),(1),resP)
end




undef ("plot_zscore_marlon7")
procedure plot_zscore_marlon7 (fireMZ:float,fireCZ:logical,wkstype:string,year:string,output:string,paneltitle:string,lbside:string,region:string)
local  wks_type
begin
   ; general settings for all plots
   wks_type              = wkstype
   gsnMaximize           = True
   resfire=True
   opt=True
   ; opt@lbside=lbside
   ; opt@region=region
   ; opt@landonly=True
   ; resfire=set_plot_settings(opt)
   ;

   resfire@gsnDraw              = False
   resfire@gsnFrame             = False

   wks_fire            = gsn_open_wks(wks_type,output)
   cmap=def_colormap


   lat2d=fireMZ
   lon2d=fireMZ

   nlons=dimsizes(fireMZ&lon)
   nlats=dimsizes(fireMZ&lat)


   do ilat=0,nlats-1
	   lat2d(ilat,:)=dble2flt(fireMZ&lat(ilat))
   end do
   do ilon=0,nlons-1
	   lon2d(:,ilon)=dble2flt(fireMZ&lon(ilon))
   end do
   clons=fireCZ@lons
   clats=fireCZ@lats
   char=fireCZ@char
   char@_FillValue=-999.

   ndots=dimsizes(char)

   pmres=True
   pmres@gsMarkerIndex    = 12
   pmres@gsMarkerSizeF    = 0.005
   pmres@tfPolyDrawOrder = "PostDraw"

   ; print (resfire@cnFillColors)

   nm = getind_latlon2d (lat2d,lon2d,clats,clons)

   x=new(ndots-1,float)
   y=new(ndots-1,float)

   ;  VarSummary(nm)
   do idot=0,ndots-1
	   	if ( .not. ismissing(char(idot))) then
			if  (.not. ismissing(fireMZ(nm(idot,0),nm(idot,1)))) then
				x(idot)=fireMZ(nm(idot,0),nm(idot,1))
				y(idot)=char(idot)
			end if
		end if
	end do

	plot=new(5,graphic)

	res=True
	res@tiMainString      = "model (x) vs. charcoal (y)"           ; add title
	 res@xyMarkLineModes   = "Markers"                ; choose which have markers
	 res@xyMarkers         =  16                      ; choose type of marker
	 res@xyMarkerColor     = "red"                    ; Marker color
	 res@xyMarkerSizeF     = 0.01                     ; Marker size (default 0.01)

	 res@tmLabelAutoStride = True                     ; nice tick mark labels
	plot(0)              = gsn_csm_xy (wks_fire,x,y,res)


    do ilat=0,nlats-1
 	   do ilon = 1, nlons-1
 		   if (.not. ismissing(fireMZ(ilat,ilon))) then
 			   if (fireMZ(ilat,ilon).lt. 0.) then
 				   fireMZ(ilat,ilon)=fireMZ(ilat,ilon)/min(fireMZ) * (-1.)
 			   else
 				   fireMZ(ilat,ilon)=fireMZ(ilat,ilon)/max(fireMZ)
 			   end if
 		   end if
 	   end do
    end do



    do idot=0,ndots-1
 	   	if ( .not. ismissing(char(idot))) then
 			if  (.not. ismissing(fireMZ(nm(idot,0),nm(idot,1)))) then
				if (char(idot).lt. 0.) then
					char(idot)=char(idot)/min(char(:))*(-1)
				else
					char(idot)=char(idot)/max(char(:))
				end if

 				x(idot)=fireMZ(nm(idot,0),nm(idot,1))
 				y(idot)=char(idot)
 			end if
 		end if
 	end do
	res@tiMainString      = "model (x) vs. charcoal (y) scaled"           ; add title
	 res@xyMarkLineModes   = "Markers"                ; choose which have markers
	 res@xyMarkers         =  16                      ; choose type of marker
	 res@xyMarkerColor     = "red"                    ; Marker color
	 res@xyMarkerSizeF     = 0.01                     ; Marker size (default 0.01)

	 res@tmLabelAutoStride = True                     ; nice tick mark labels
	plot(1)              = gsn_csm_xy (wks_fire,x,y,res)
	resP=True
	 resP=set_panel_settings(resP,paneltitle,"6k",resfire@gsnRightString)
	 gsn_panel(wks_fire,plot(0),(1),resP)
end





undef ("plot_fire_abs")
procedure plot_fire_abs (fire:float,wkstype:string,year:string,output:string,paneltitle:string,lbside:string,region:string)
local  wks_type
begin
   ; general settings for all plots
printVarSummary(fire)

   wks_type              = wkstype
   gsnMaximize           = True
   resfire=True
   opt=True
   opt@lbside=lbside
   opt@region=region
   opt@landonly=True
   resfire=set_plot_settings(opt)
   wks_fire            = gsn_open_wks(wks_type,output)
   cmap=def_colormap


   gsn_define_colormap(wks_fire,cmap)
   ;gsn_draw_colormap(wks_fire)

   plot=new(1,graphic)
   resfire@cnLevels = (/0.01,0.025,0.05,0.075,0.1,0.125,0.15,0.175,0.2/)
   resfire@cnFillColors = ispan(76,85,1)
   resfire@gsnRightString= "[ ]"

   ; plotting burned area
   resfire@gsnLeftString = "burned area: "+year+" "+fire(1,0,0)+" [M ha]"
   print(resfire)
   printVarSummary(fire)
   plot(0) = gsn_csm_contour_map(wks_fire,fire(0,:,:),resfire)

   getvalues plot@contour
    "cnLevels" : levels
   end getvalues
   resfire@lbLabelStrings       = sprintf("%4.3f",levels)   ; Format the labels
   plot(0) = gsn_csm_contour_map(wks_fire,fire(0,:,:),resfire)

   ;plotting the figures as a panel
   resP=True
   resP=set_panel_settings(resP,paneltitle,year,resfire@gsnRightString)
   gsn_panel(wks_fire,plot(0),(/1/),resP)
end



undef ("plot_fire_abs_pft")
procedure plot_fire_abs_pft (fire:float,wkstype:string,year:string,output:string,paneltitle:string,lbside:string,region:string)
local  wks_type
begin
   ; general settings for all plots
printVarSummary(fire)

   wks_type              = wkstype
   gsnMaximize           = True
   resfire=True
   opt=True
   opt@lbside=lbside
   opt@region=region
   opt@landonly=True
   resfire=set_plot_settings(opt)
   wks_fire            = gsn_open_wks(wks_type,output)
   cmap=def_colormap


   gsn_define_colormap(wks_fire,cmap)
   ;gsn_draw_colormap(wks_fire)

   plot=new(7,graphic)
   resfire@cnLevels = (/0.01,0.025,0.05,0.075,0.1,0.125,0.15,0.175,0.2/)
   resfire@cnFillColors = ispan(76,85,1)
   resfire@gsnRightString= "[ ]"
   ;; first plot for levels
   resfire@gsnLeftString = "burned area: "+year+" "+fire(1,0,0)+" [M ha]"
   plot(0) = gsn_csm_contour_map(wks_fire,fire(0,:,:),resfire)
   getvalues plot@contour
    "cnLevels" : levels
   end getvalues
   resfire@lbLabelStrings       = sprintf("%4.3f",levels)   ; Format the labels


; plotting burned area
   print(resfire)
   printVarSummary(fire)
   ; plot again, but now all!

   resfire@gsnLeftString = "woody burned area: "+year+" "+fire(1,0,0)+" [M ha]"
   plot(0) = gsn_csm_contour_map(wks_fire,fire(0,:,:),resfire)
   resfire@gsnLeftString = "tree burned area: "+year+" "+fire(3,0,0)+" [M ha]"
   plot(1) = gsn_csm_contour_map(wks_fire,fire(2,:,:),resfire)
   resfire@gsnLeftString = "shrubs burned area: "+year+" "+fire(5,0,0)+" [M ha]"
   plot(2) = gsn_csm_contour_map(wks_fire,fire(4,:,:),resfire)
   resfire@gsnLeftString = "grass burned area: "+year+" "+fire(7,0,0)+" [M ha]"
   plot(3) = gsn_csm_contour_map(wks_fire,fire(6,:,:),resfire)
   resfire@gsnLeftString = "managed burned area: "+year+" "+fire(9,0,0)+" [M ha]"
   plot(4) = gsn_csm_contour_map(wks_fire,fire(8,:,:),resfire)
   resfire@gsnLeftString = "natural burned area: "+year+" "+fire(11,0,0)+" [M ha]"
   plot(5) = gsn_csm_contour_map(wks_fire,fire(10,:,:),resfire)
   resfire@gsnLeftString = "total burned area: "+year+" "+fire(13,0,0)+" [M ha]"
   plot(6) = gsn_csm_contour_map(wks_fire,fire(12,:,:),resfire)

   ;plotting the figures as a panel
   resP=True
   resP=set_panel_settings(resP,paneltitle,year,resfire@gsnRightString)
   gsn_panel(wks_fire,plot,(/3,3,1/),resP)
end




undef ("plot_fire_diff_pft")
procedure plot_fire_diff_pft (fire:float,wkstype:string,year:string,output:string,paneltitle:string,lbside:string,region:string)
local  wks_type
begin
   ; general settings for all plots

   wks_type              = wkstype
   gsnMaximize           = True
   resfire=True
   opt=True
   opt@lbside=lbside
   opt@region=region
   opt@landonly=True
   resfire=set_plot_settings(opt)
   wks_fire            = gsn_open_wks(wks_type,output)
   cmap=def_colormap


   gsn_define_colormap(wks_fire,cmap)

   plot=new(7,graphic)
   resfire@cnLevels = (/-0.01,-0.0075,-0.005,-0.0025,-0.0005,0.0005,0.0025,0.005,0.0075,0.01/)
   resfire@cnFillColors = ispan(86,96,1)
   resfire@gsnRightString= "[ ]"
   ;; first plot for levels
   resfire@gsnLeftString = "burned area: "+year+" "+fire(1,0,0)+" [M ha]"
   plot(0) = gsn_csm_contour_map(wks_fire,fire(0,:,:),resfire)
   getvalues plot@contour
    "cnLevels" : levels
   end getvalues
   resfire@lbLabelStrings       = sprintf("%4.3f",levels)   ; Format the labels


; plotting burned area
   print(resfire)
   printVarSummary(fire)
   ; plot again, but now all!

   resfire@gsnLeftString = "woody burned area: "+year+" "+fire(1,0,0)+" [M ha]"
   plot(0) = gsn_csm_contour_map(wks_fire,fire(0,:,:),resfire)
   resfire@gsnLeftString = "tree burned area: "+year+" "+fire(3,0,0)+" [M ha]"
   plot(1) = gsn_csm_contour_map(wks_fire,fire(2,:,:),resfire)
   resfire@gsnLeftString = "shrubs burned area: "+year+" "+fire(5,0,0)+" [M ha]"
   plot(2) = gsn_csm_contour_map(wks_fire,fire(4,:,:),resfire)
   resfire@gsnLeftString = "grass burned area: "+year+" "+fire(7,0,0)+" [M ha]"
   plot(3) = gsn_csm_contour_map(wks_fire,fire(6,:,:),resfire)
   resfire@gsnLeftString = "managed burned area: "+year+" "+fire(9,0,0)+" [M ha]"
   plot(4) = gsn_csm_contour_map(wks_fire,fire(8,:,:),resfire)
   resfire@gsnLeftString = "natural burned area: "+year+" "+fire(11,0,0)+" [M ha]"
   plot(5) = gsn_csm_contour_map(wks_fire,fire(10,:,:),resfire)
   resfire@gsnLeftString = "total burned area: "+year+" "+fire(13,0,0)+" [M ha]"
   plot(6) = gsn_csm_contour_map(wks_fire,fire(12,:,:),resfire)

   ;plotting the figures as a panel
   resP=True
   resP=set_panel_settings(resP,paneltitle,year,resfire@gsnRightString)
   gsn_panel(wks_fire,plot,(/3,3,1/),resP)
end


undef ("plot_gfed_abs")
procedure plot_gfed_abs (fire,firetotal:float,wkstype:string,year:string,output:string,paneltitle:string,lbside:string,region:string)
local  wks_type
begin
   ; general settings for all plots
   wks_type              = wkstype
   gsnMaximize           = True
   resfire=True
   opt=True
   opt@lbside=lbside
   opt@region=region
   opt@landonly=True
   resfire=set_plot_settings(opt)
   wks_fire            = gsn_open_wks(wks_type,output)
   cmap=def_colormap


   gsn_define_colormap(wks_fire,cmap)
   ;gsn_draw_colormap(wks_fire)

   plot=new(1,graphic)
   resfire@cnLevels = (/0.01,0.025,0.05,0.075,0.1,0.125,0.15,0.175,0.2/)
   resfire@cnFillColors = ispan(76,85,1)
   resfire@gsnRightString= "[ ]"

   ; plotting burned area
   resfire@gsnLeftString = "burned area: "+year+" "+firetotal+" [M ha]"
   plot(0) = gsn_csm_contour_map(wks_fire,fire(:,:),resfire)

   getvalues plot@contour
    "cnLevels" : levels
   end getvalues
   resfire@lbLabelStrings       = sprintf("%4.3f",levels)   ; Format the labels
   plot(0) = gsn_csm_contour_map(wks_fire,fire(:,:),resfire)

   ;plotting the figures as a panel
   resP=True
   resP=set_panel_settings(resP,paneltitle,year,resfire@gsnRightString)
   gsn_panel(wks_fire,plot(0),(/1/),resP)
end




undef ("plot_fire_diff")
procedure plot_fire_diff (fire:float,wkstype:string,year:string,output:string,paneltitle:string,lbside:string,region:string)
local  wks_type
begin
   ; general settings for all plots
   wks_type              = wkstype
   gsnMaximize           = True
   resfire=True
   opt=True
   opt@lbside=lbside
   opt@region=region
   opt@landonly=True
   resfire=set_plot_settings(opt)
   wks_fire            = gsn_open_wks(wks_type,output)
   cmap=def_colormap
   gsn_define_colormap(wks_fire,cmap)

;   gsn_define_colormap(wks_fire,"climba")
   ;gsn_draw_colormap(wks_fire)

   plot=new(1,graphic)
   resfire@cnLevels = (/-0.01,-0.0075,-0.005,-0.0025,-0.0005,0.0005,0.0025,0.005,0.0075,0.01/)
   resfire@cnFillColors = ispan(86,96,1)
   resfire@gsnRightString= "[ ]"


   ; plotting burned area
   resfire@gsnLeftString = "burned area: "+year+" "+fire(1,0,0)+" [M ha]"
   plot(0) = gsn_csm_contour_map(wks_fire,fire(0,:,:),resfire)

   getvalues plot@contour
    "cnLevels" : levels
   end getvalues
   resfire@lbLabelStrings       = sprintf("%5.4f",levels)   ; Format the labels
   resfire@lbLabelFontHeightF = 0.01
   plot(0) = gsn_csm_contour_map(wks_fire,fire(0,:,:),resfire)


   ;plotting the figure as a panel
   resP=True
   resP=set_panel_settings(resP,paneltitle,year,resfire@gsnRightString)
   gsn_panel(wks_fire,plot(0),(/1/),resP)
end




undef ("plot_fuel_abs")
procedure plot_fuel_abs (fuel:float,wkstype:string,year:string,output:string,paneltitle:string,lbside:string,region:string)
local  wks_type
begin
   ; general settings for all plots
   wks_type              = wkstype
   gsnMaximize           = True
   resfuel=True
   opt=True
   opt@lbside=lbside
   opt@region=region
   opt@landonly=True
   resfuel=set_plot_settings(opt)
   wks_fuel            = gsn_open_wks(wks_type,output)
   cmap=def_colormap
   gsn_define_colormap(wks_fuel,cmap)
   gsn_draw_colormap(wks_fuel)

   plot=new(1,graphic)
   resfuel@cnLevels = (/0.01,0.025,0.05,0.075,0.1,0.125,0.15,0.175,0.2/)
   resfuel@cnFillColors = ispan(76,85,1)
   resfuel@gsnRightString= "[g(C)]"

   ; plotting burned area
   resfuel@gsnLeftString = "fuel: "+year+" "+fuel(1,0,0)+" [Gt(C)]"
   plot(0) = gsn_csm_contour_map(wks_fuel,fuel(0,:,:),resfuel)

   ;plotting the figures as a panel
   resP=True
   resP=set_panel_settings(resP,paneltitle,year,resfuel@gsnRightString)
   gsn_panel(wks_fuel,plot(0),(/1/),resP)
end



undef ("plot_fuel_diff")
procedure plot_fuel_diff (fuel:float,wkstype:string,year:string,output:string,paneltitle:string,lbside:string,region:string)
local  wks_type
begin
   ; general settings for all plots
   wks_type              = wkstype
   gsnMaximize           = True
   resfuel=True
   opt=True
   opt@lbside=lbside
   opt@region=region
   opt@landonly=True
   resfuel=set_plot_settings(opt)
   wks_fuel            = gsn_open_wks(wks_type,output)
   cmap=def_colormap
   gsn_define_colormap(wks_fuel,cmap)

;   gsn_define_colormap(wks_fuel,"climba")
   gsn_draw_colormap(wks_fuel)

   plot=new(1,graphic)
   resfuel@cnLevels = (/-0.1,-0.075,-0.05,-0.025,-0.005,0.005,0.025,0.05,0.075,0.1/)
   resfuel@cnFillColors = ispan(86,96,1)
   resfuel@gsnRightString= "[g(C)]"


   ; plotting burned area
   resfuel@gsnLeftString = "burned area: "+year+" "+fuel(1,0,0)+" [Gt(C)]"
   plot(0) = gsn_csm_contour_map(wks_fuel,fuel(0,:,:),resfuel)

   ;plotting the figure as a panel
   resP=True
   resP=set_panel_settings(resP,paneltitle,year,resfuel@gsnRightString)
   gsn_panel(wks_fuel,plot(0),(/1/),resP)
end


undef ("plot_cflux_abs")
procedure plot_cflux_abs (cflux:float,wkstype:string,year:string,output:string,paneltitle:string,lbside:string,region:string)
local  wks_type
begin
   ; general settings for all plots
   wks_type              = wkstype
   gsnMaximize           = True
   rescflux=True
   opt=True
   opt@lbside=lbside
   opt@region=region
   opt@landonly=True
   rescflux=set_plot_settings(opt)
   wks_cflux            = gsn_open_wks(wks_type,output)
   cmap=def_colormap
   gsn_define_colormap(wks_cflux,cmap)
   ;gsn_draw_colormap(wks_cflux)

   plot=new(1,graphic)
   rescflux@cnLevels = (/10,25,50,75,100,125,150,175,200/)
   rescflux@cnFillColors = ispan(76,85,1)
   rescflux@gsnRightString= "[g(C) m-2 yr-1]"

   rescflux@gsnLeftString = "C-flux to atmosphere: "+year+" "+cflux(1,0,0)+" [Gt]"
   plot(0) = gsn_csm_contour_map(wks_cflux,cflux(0,:,:),rescflux)

; Retrieve contour levels.
;
   getvalues plot@contour
    "cnLevels" : levels
   end getvalues
   rescflux@lbLabelStrings       = sprintf("%3.0f",levels)   ; Format the labels
   plot(0) = gsn_csm_contour_map(wks_cflux,cflux(0,:,:),rescflux)


   resP=True
   resP=set_panel_settings(resP,paneltitle,year,rescflux@gsnRightString)
   gsn_panel(wks_cflux,plot(0),(/1/),resP)
end



undef ("plot_cflux_diff")
procedure plot_cflux_diff (cflux:float,wkstype:string,year:string,output:string,paneltitle:string,lbside:string,region:string)
local  wks_type
begin
   ; general settings for all plots
   wks_type              = wkstype
   gsnMaximize           = True
   rescflux=True
   opt=True
   opt@lbside=lbside
   opt@region=region
   opt@landonly=False
   rescflux=set_plot_settings(opt)
   wks_cflux            = gsn_open_wks(wks_type,output)
   cmap=def_colormap
   gsn_define_colormap(wks_cflux,cmap)
   ;gsn_draw_colormap(wks_cflux)

   plot=new(1,graphic)
   rescflux@cnLevels = (/-10.0,-7.5,-5.0,-2.5,-0.5,0.5,2.5,5.0,7.5,10./)
   rescflux@cnFillColors = ispan(86,96,1)
   rescflux@gsnRightString= "[g(C) m-2 yr-1]"

   rescflux@gsnLeftString = "C-flux to atmosphere: "+year+" "+cflux(1,0,0)+" [Gt]"
   plot(0) = gsn_csm_contour_map(wks_cflux,cflux(0,:,:),rescflux)

   getvalues plot@contour
    "cnLevels" : levels
   end getvalues
   rescflux@lbLabelStrings       = sprintf("%3.1f",levels)   ; Format the labels
   plot(0) = gsn_csm_contour_map(wks_cflux,cflux(0,:,:),rescflux)


   resP=True
   resP=set_panel_settings(resP,paneltitle,year,rescflux@gsnRightString)
   gsn_panel(wks_cflux,plot(0),(/1/),resP)
end



undef ("plot_precipitation_abs")
procedure plot_precipitation_abs (prec:float,wkstype:string,year:string,output:string,paneltitle:string,lbside:string,region:string)
local  wks_type
begin
   ; general settings for all plots
   wks_type              = wkstype
   gsnMaximize           = True
   resprec=True
   opt=True
   opt@lbside=lbside
   opt@region=region
   opt@landonly=False
   resprec=set_plot_settings(opt)


   wks_prec            = gsn_open_wks(wks_type,output)
   cmap=def_colormap



   ;gsn_define_colormap(wks_prec,cmap)
   gsn_define_colormap(wks_prec,"CBR_wet")

   plot=new(1,graphic)
   if (region.eq."global") then
        resprec@cnLevels = (/50.,125.,250.,500.,775.,1250/)
        resprec@cnFillColors = ispan(97,103,1)
   end if
   if (region.eq."africa") then
        resprec@cnLevels = (/250., 500., 750.,1000., 1500, 2000.,2500., 3000./)
        resprec@cnFillColors = (/3,5,6,7,8,9,10,11,12/);ispan(2,12,1)
   end if

   if (region.eq."sa_daniau") then
        resprec@cnLevels = (/50., 125., 250.,750., 1000, 1250.,1500., 1750./)
        resprec@cnFillColors = (/3,5,6,7,8,9,10,11,12/);ispan(2,12,1)
   end if


   resprec@gsnRightString= "["+prec@units+"]"


   ; plotten of absolute values for precipitation
   resprec@gsnLeftString = "precipitation: "+year+" ["+prec@units+"]"
   plot(0) = gsn_csm_contour_map(wks_prec,prec(:,:),resprec)

   ;plotting the five figures as a panel
   resP=True
   resP=set_panel_settings(resP,paneltitle,year,resprec@gsnRightString)
   gsn_panel(wks_prec,plot(0),(/1/),resP)
end



undef ("plot_precipitation_diff")
procedure plot_precipitation_diff (prec:float,wkstype,year,output,paneltitle:string,lbside:string,region:string)
local  wks_type
begin
   ; general settings for all plots
   wks_type              = wkstype
   gsnMaximize           = True
   resprec=True
   opt=True
   opt@lbside=lbside
   opt@region=region
   opt@landonly=False
   resprec=set_plot_settings(opt)
   ;resprec@mpOutlineBoundarySets (MapPlot)

   wks_prec            = gsn_open_wks(wks_type,output)
   cmap=def_colormap
   gsn_define_colormap(wks_prec,cmap)

   plot=new(1,graphic)
   resprec@cnLevels = (/-750,-500,-250,-100,-50,-10,10,50,100,250,500,750/)
   resprec@cnFillColors = (/139,138,137,136,135,134,0,133,132,131,130,129,128/)
   resprec@gsnRightString= "["+prec@units+"]"

   if ( region .eq. "sa_daniau" ) then
      resprec@cnLevels = (/-100,-80,-60,-40,-20,-5,5,20,40,60,80,100/)
      resprec@cnFillColors = (/139,138,137,136,135,134,0,133,132,131,130,129,128/)
   end if
   ; plotten of absolute values for carbon pools
   resprec@gsnLeftString = "precipitation: "+year+" ["+prec@units+"]"
   plot(0) = gsn_csm_contour_map(wks_prec,prec(:,:),resprec)

   ;plotting the figures as a panel
   resP=True
   resP=set_panel_settings(resP,paneltitle,year,resprec@gsnRightString)

   gsn_panel(wks_prec,plot(0),(/1/),resP)
end


undef ("plot_temperature_abs")
procedure plot_temperature_abs (temp:float,wkstype:string,year:string,output:string,paneltitle:string,lbside:string,region:string)
local  wks_type
begin
   ; general settings for all plots
   wks_type              = wkstype
   gsnMaximize           = True
   restemp=True
   opt=True
   opt@lbside=lbside
   opt@region=region
   opt@landonly=False
   restemp=set_plot_settings(opt)

   wks_temp            = gsn_open_wks(wks_type,output)
   cmap=def_colormap
;   gsn_define_colormap(wks_temp,cmap)
   gsn_define_colormap(wks_temp,"BlueWhiteOrangeRed")

   plot=new(1,graphic)


   if (region.eq."global") then
        restemp@cnLevels=(/-25.,-20.,-15.,-10.,-5.,0.,5.,10.,15.,20.,25./)
        restemp@cnFillColors=ispan(100,255,14) ;(/127,128,129,130,132,133,134,135,136,137,138,139/)
    end if
   if (region.eq."africa") then
        restemp@cnLevels=(/20.,22.5,25.,27.5,30.,32.5,35.,37.5/)
        restemp@cnFillColors=ispan(140,255,14) ;(/127,128,129,130,132,133,134,135,136,137,138,139/)
   end if
   if (region.eq."sa_daniau") then
        restemp@cnLevels=(/14.,15.,16.,17.,18.,19.,20.,21./)
        restemp@cnFillColors=ispan(140,255,14) ;(/127,128,129,130,132,133,134,135,136,137,138,139/)
   end if
   restemp@gsnRightString= "["+temp@units+"]"


   ; plotten of absolute values for temperature
   restemp@gsnLeftString = "temperature: "+year+" ["+temp@units+"]"
   plot(0) = gsn_csm_contour_map(wks_temp,temp(:,:),restemp)
   resP=True
   resP=set_panel_settings(resP,paneltitle,year,restemp@gsnRightString)
   gsn_panel(wks_temp,plot(0),(/1/),resP)
end




undef ("plot_temperature_signal")
procedure plot_temperature_signal (temp:float,wkstype,year,output,paneltitle:string,lbside:string,region:string)
local  wks_type
begin
   ; general settings for all plots
   wks_type              = wkstype
   gsnMaximize           = True
   restemp=True
   opt=True
   opt@lbside=lbside
   opt@region=region
   opt@landonly=False
   restemp=set_plot_settings(opt)

   wks_temp            = gsn_open_wks(wks_type,output)
   cmap=def_colormap
   gsn_define_colormap(wks_temp,"BlueWhiteOrangeRed")

   plot=new(1,graphic)
   Mmax=floattoint(abs(max((temp(:,:)*2+1.1)/2.)))

   Mmin=Mmax*(-1.)
   delta=(Mmax*2)/10.
   restemp@cnFillColors=(/160,190,205,220,235,250/) ;ispan(190,255,12) ;(/50,58,66,74,82,90/)
   restemp@cnLevels=(/1.0,2.0,3.0,4.0,5.0/)
   restemp@gsnRightString= "["+temp@units+"]"

   ; plotten of absolute values for carbon pools
   restemp@gsnLeftString = "temperature: "+year+" ["+temp@units+"]"
   plot(0) = gsn_csm_contour_map(wks_temp,temp(:,:),restemp)

   ;plotting the figures as a panel
   resP=True
   resP=set_panel_settings(resP,paneltitle,year,restemp@gsnRightString)
   gsn_panel(wks_temp,plot(0),(/1/),resP)
end




undef ("plot_temperature_diff")
procedure plot_temperature_diff (temp:float,wkstype,year,output,paneltitle:string,lbside:string,region:string)
local  wks_type
begin
   ; general settings for all plots
   wks_type              = wkstype
   gsnMaximize           = True
   restemp=True
   opt=True
   opt@lbside=lbside
   opt@region=region
   opt@landonly=False
   restemp=set_plot_settings(opt)


   wks_temp            = gsn_open_wks(wks_type,output)
   cmap=def_colormap
   gsn_define_colormap(wks_temp,cmap)

   plot=new(1,graphic)
   Mmax=floattoint(abs(max((temp(:,:)*2+1.1)/2.)))
   Mmin=Mmax*(-1.)
   delta=(Mmax*2)/10.

   restemp@cnFillColors=(/127,128,129,130,132,133,134,135,136,137,138,139/)
   restemp@cnLevels=(/-0.5,-0.4,-0.3,-0.2,-0.1,0.,0.1,0.2,0.3,0.4,0.5/)


   restemp@cnNoDataLabelOn = False
;   restemp@cnLevels=fspan(Mmin,Mmax,11)
   restemp@gsnRightString= "[K]"

   restemp@gsnLeftString = "temperature: "+year+" [K]"
   plot(0) = gsn_csm_contour_map(wks_temp,temp(:,:),restemp)
   resP=True
   resP=set_panel_settings(resP,paneltitle,year,restemp@gsnRightString)
   gsn_panel(wks_temp,plot(0),(/1/),resP)
end


undef ("plot_temperature_diff2")
procedure plot_temperature_diff2 (temp:float,wkstype,year,output,paneltitle:string,lbside:string,region:string)
local  wks_type
begin
   ; general settings for all plots
   wks_type              = wkstype
   gsnMaximize           = True
   restemp=True
   opt=True
   opt@lbside=lbside
   opt@region=region
   opt@landonly=False
   restemp=set_plot_settings(opt)

   wks_temp            = gsn_open_wks(wks_type,output)
   cmap=def_colormap
   gsn_define_colormap(wks_temp,cmap)




   plot=new(1,graphic)

   Mmax=floattoint(abs(max((temp(:,:)*2+1.1)/2.)))

   Mmin=Mmax*(-1.)
   delta=(Mmax*2)/10.

   restemp@cnFillColors=(/127,128,129,130,132,133,134,135,136,137,138,139/)
   ;restemp@cnLevels=(/-2.5,-2.0,-1.5,-1.0,-0.5,0.,0.5,1.0,1.5,2.0,2.5/)
    restemp@cnLevels=(/-5,-4,-3,-2,-1,0,1,2,3,4,5/)


   restemp@cnNoDataLabelOn = False
;   restemp@cnLevels=fspan(Mmin,Mmax,11)
   restemp@gsnRightString= "["+temp@units+"]"

   ; plotten of absolute values for carbon pools
   restemp@gsnLeftString = "temperature: "+year+" ["+temp@units+"]"
   plot(0) = gsn_csm_contour_map(wks_temp,temp(:,:),restemp)

   ;plotting the figures as a panel
   resP=True
   resP=set_panel_settings(resP,paneltitle,year,restemp@gsnRightString)

   gsn_panel(wks_temp,plot(0),(/1/),resP)
end



undef("get_xy_plotres")
function get_xy_plotres (res:logical)
begin
   res@gsnDraw               = False        ; don't draw yet
   res@gsnFrame              = False        ; don't advance frame yet
   res@vpWidthF              = .45          ; set width of second plot
   res@tmXBMinorOn           = True         ; minor tickmarks
   res@tmXBLabelStride       = 1            ; label stride
   res@tmXBLabelAngleF       = 0.
   res@tmXBLabelFontHeightF   = 0.009
   res@txFontHeightF          = 0.018        ; change font height
   res@tmXBLabelFontHeightF   = 0.001

   res@tmYROn                   = True
   res@tmYLOn                = False

   res@trXMinF                = 0
   res@trXMaxF                = 2100
   return res
end


undef ("make_xy_plot")
procedure make_xy_plot (xyplot:graphic,dataxy:float,maintitle,subtitle:string)
begin
   xyres=True
   xyres=get_xy_plotres(xyres)

   xyres@xyLineColors=(/"blue","red","green","black","orange"/)
   xyres@tiMainString           = maintitle
   xyres@gsnCenterString        = subtitle  ; add title

   xyres@tiMainString           = ""
   zonal_average                = new(dimsizes(dataxy&lat),float)
   zonal_average(:)           = dim_avg(dataxy)
   xyplot=gsn_csm_xy(wks, zonal_average,xydata&lat,xyres)
end



undef ("climate_zm_abs")
procedure climate_zm_abs (prec,temp:float,wkstype,year,output,paneltitle:string,lbside:string,region:string)
local wks_type
begin
   ; general settings for all plots
   wks_type              = wkstype
   gsnMaximize           = True
   resprec=True
   opt=True
   opt@lbside=lbside
   opt@region=region
   opt@landonly=True
   resprec=set_plot_settings(opt)
   resprec@mpProjection      = "CylindricalEquidistant"
   restemp=resprec

   wks            = gsn_open_wks(wks_type,output)
   ;printVarSummary(wks)
   cmap=def_colormap
   gsn_define_colormap(wks,cmap)


   printVarSummary(prec)
   printVarSummary(temp)




   plot2d=new(2,graphic)
   xyplot=new(2,graphic)
   finalplot=new(2,graphic)

   resprec@cnFillColors             = ispan(117,126,1)
;  resprec@cnLevels                 = (/0,50,100,250,500,750,1000,1500,2000/)
   restemp@cnFillColors             = ispan(127,140,1)
;  restemp@cnLevels                 = (/254,258,262,266,270,274,278,282,286,290,294,298,302/)


   plot2d(0) = gsn_csm_contour_map(wks,prec,resprec)

   xyprec=True
   xyprec=get_xy_plotres(xyprec)
   xyprec@xyLineColors=(/"blue","red","green","black","orange"/)
   xyprec@tiMainString           = "prec"
   xyprec@gsnCenterString        = "[mm]"  ; add title
   xyprec@tiMainString           = ""
   zonal_prec                = new(dimsizes(prec&lat),float)
   zonal_prec(:)           = dim_avg(prec)
   xyplot(0)=gsn_csm_xy(wks, zonal_prec,prec&lat,xyprec)



   plot2d(1) = gsn_csm_contour_map(wks,temp,restemp)
   xytemp=True
   xytemp=get_xy_plotres(xytemp)
   xytemp@xyLineColors=(/"blue","red","green","black","orange"/)
   xytemp@tiMainString           = "temp"
   xytemp@gsnCenterString        = "[mm]"  ; add title
   xytemp@tiMainString           = "  "
   printVarSummary (temp)
   zonal_temp                = new(dimsizes(temp&lat),float)
   zonal_temp(:)           = dim_avg(temp)
   printVarSummary(zonal_temp)
   xyplot(1)=gsn_csm_xy(wks, zonal_temp,temp&lat,xytemp)


   finalplot(0) =   gsn_attach_plots(plot2d(0),(/xyplot(0)/),resprec,xyprec)
   finalplot(1) =   gsn_attach_plots(plot2d(1),(/xyplot(1)/),restemp,xytemp)

  ; resP=True
;   resP=set_panel_settings(resP,paneltitle,year)
;   gsn_panel(wks,finalplot,(/1,2/),resP)

   restemp@amOrthogonalPosF=-.49
   final=gsn_attach_plots (plot2d(0),plot2d(1),resprec,restemp)
   draw (plot2d(0))
  frame(wks)



end



function set_res_climate(leftString:string)
local res
begin
      res                        = True
      res@gsnDraw                = False     ; don't draw yet
      res@gsnFrame               = False
      res@cnFillOn               = True     ; turn on color fill
      res@cnLinesOn              = False
      res@cnFillMode             = "CellFill" ; turn of contour lines

      ; labelbar
      res@lbLabelFontHeightF     = 0.012
;      res@gsnSpreadColors        = False    ; use full color map
      res@cnLevelSelectionMode   = "ExplicitLevels"
      res@lbOrientation          = "vertical"
      res@lbLabelPosition        = "left"

      res@lbLabelStride          = 1
      res@gsnRightString=""

      ; labeling x and y
      res@gsnMajorLatSpacing       = 20              ; change maj lat tm spacing
      res@gsnMajorLonSpacing       = 50              ; change maj lon tm spacing
      res@mpFillOn                 = False
      res@tmXBMinorOn              = True
      res@tmXBLabelFontHeightF     = 0.012           ; resize tick labels
      res@tmYLLabelFontHeightF     = 0.012
      res@gsnAddCyclic             = True
      res@pmLabelBarOrthogonalPosF = -1.3
      res@tiMainString = ""

      res@gsnLeftString            = leftString
      ;printVarSummary (res)
      return(res)
end



function set_sres_climate()
local sres
begin
      sres=True
      sres@cnFillOn                = True               ; Turn on contour line fill.
      sres@cnMonoFillPattern       = False              ; Turn off using a single fill pattern
      sres@cnMonoFillColor         = True
      sres@cnMonoLineColor         = True
      sres@cnLineLabelsOn          = False
      sres@cnMonoFillColor         = True
      sres@cnInfoLabelOn           = False
      sres@cnLevelSelectionMode    = "ExplicitLevels"   ; use explicit levels

      sres@tiMainString           = ""

      return (sres)
end



function set_xyres_climate(xymin,xymax:float,title:string)
local xyres
begin
   ;;; xy res prec
   xyres                       = True         ; xy plot mods desired
   xyres@gsnDraw                = False        ; don't draw yet
   xyres@gsnFrame               = False ;True       ; don't advance frame yet
   xyres@vpWidthF               = .45          ; set width of second plot
   xyres@tmXBMinorOn            = True         ; minor tickmarks
   xyres@tmXBLabelStride        = 1            ; label stride
   xyres@tmXBLabelAngleF        = 0.
   xyres@tmXBLabelFontHeightF   = 0.009
   xyres@txFontHeightF          = 0.018        ; change font height
   xyres@tmXBLabelFontHeightF   = 0.001

   xyres@tmYROn                 = True
   xyres@tmYLOn                 = False

   xyres@xyLineColors=(/"blue","red","green","black","orange"/)
   xyres@tiMainString           = ""
   xyres@gsnCenterString        = title  ; add title
   ;xyres@tiMainString           = ""
   xyres@trXMinF                = xymin
   xyres@trXMaxF                = xymax
   return (xyres)
end


function set_zres_climate(zmin,zmax:float,title:string)
local zres
begin
   zres=True
   zres@gsnDraw                 = False; True
   zres@gsnFrame                = False ; True
   zres@tiMainString            = ""
   zres@gsnZonalMeanYRefLine    = 0  ; X-axis reference line value
   zres@amOrthogonalPosF        = 0.375
   zres@gsnCenterString         = title
   zres@gsnZonalMeanXMinF       = zmin       ; set minimum X-axis value for zonal mean plot
   zres@gsnZonalMeanXMaxF       = zmax       ; set maximum X-axis value for zonal mean plot
   return (zres)
end



undef("climate")
procedure  climate (prec,temp,grass,forest:float,wkstype,year,output,paneltitle:string)
begin
   wkstype@wkPaperWidthF = 15;
   wkstype@wkPaperHeightF = 10;
   wks = gsn_open_wks(wkstype ,output)
   cmap=def_colormap
   gsn_define_colormap(wks,cmap)
   ;gsn_draw_colormap(wks)


;;;;; Definitions
   plot = new(2,graphic)

    if (min(temp) .gt. 100 ) then
        temp=temp-273.15
    end if

   ;set_res_climate(levels,colors:float, leftString:string)
   resp=True
   resp=set_res_climate("yearly precipitation [mm]; grass fract. > 35% (shaded)")
   resp@cnFillColors=(/117,118,119,120,121,122,123,124,125,126/)
   resp@cnLevels=(/0,50,100,250,500,750,1000,1500,2000/)
   rest=True
   rest=set_res_climate("2m annual mean temperature [C], woody fraction > 35% (shaded)")
   rest@cnFillColors=(/127,128,129,130,132,133,134,135,136,137,138,139/)
   rest@cnLevels=(/-25.,-20.,-15.,-10.,-5.,0.,5.,10.,15.,20.,25./)


   sresp=True
   sresp=set_sres_climate()
   srep@cnLevels               = (/0,0.35/)         ; set the contour levels
   srep@cnFillPatterns          = (/-1,-1,17/)
   srest=True
   srest=set_sres_climate()
   sret@cnLevels               = (/0,0.35/)         ; set the contour levels
   sret@cnFillPatterns          = (/-1,-1,17/)

   xyresp = True
   xyresp = set_xyres_climate (0.,2100.,"zonal yearly precipitation [mm]")
   xyrest = True
   xyrest = set_xyres_climate (-25.,30.,"zonal averaged annual mean temperature [C]")

   ;;; zonal res prec
   zresp                         = True
   zresp = set_zres_climate(0.,1.,"zonal mean grass frac.[%]")
   zrest                         = True
   zrest = set_zres_climate(0.,1.,"zonal mean woody frac.[%]")

;precipitation
   fig0                          = gsn_csm_contour_map_overlay(wks,add90LatY(prec),add90LatY(grass),resp,sresp)
   zonal_averagep                = new((/2,dimsizes(prec&lat)/),float)
   zonal_averagep(0,:)           = dim_avg(prec)
   xyplotp                       = gsn_csm_xy(wks, zonal_averagep,prec&lat,xyresp)
   returnplot                    = gsn_attach_plots(fig0,(/xyplotp/),resp,xyresp)
   plot(0)                       = gsn_csm_attach_zonal_means(wks,fig0,grass,zresp)

; TEMPERATURE
   fig1                          = gsn_csm_contour_map_overlay(wks,add90LatY(temp),add90LatY(forest),rest,srest)
   zonal_averaget                = new((/1,dimsizes(temp&lat)/),float)
   zonal_averaget(0,:)           = dim_avg(temp)
   xyplott                       = gsn_csm_xy(wks, zonal_averaget,temp&lat,xyrest)
   returnplot2                   = gsn_attach_plots(fig1,(/xyplott/),rest,xyrest)
   plot(1)                       = gsn_csm_attach_zonal_means(wks,fig1,forest,zrest)

; combine both
   resPanel=True
   resPanel=set_panel_settings(resPanel,paneltitle,year,"")
   gsn_panel(wks,(/fig0,fig1/),(/1,2/),resPanel)

end



undef("climatediff")
procedure  climatediff (prec,temp,grass,forest:float,wkstype,year,output,paneltitle:string)
begin
   wkstype@wkPaperWidthF = 15;
   wkstype@wkPaperHeightF = 10;
   wks = gsn_open_wks(wkstype ,output)
   cmap=def_colormap
   gsn_define_colormap(wks,cmap)
   ;gsn_draw_colormap(wks)


;;;;; Definitions
   plot = new(2,graphic)

    if (min(temp) .gt. 100 ) then
        temp=temp-273.15
    end if


;1d
   area=get_area("T31",0.,360.,-90,90.)
   tarea=dim_sum(dim_sum(area))

   gtdiff=dim_sum(dim_sum(temp*area))/tarea
   gpdiff=dim_sum(dim_sum(prec*area))/tarea


   ;set_res_climate(levels,colors:float, leftString:string)
   resp=True
   resp=set_res_climate("change in yearly precipitation [mm]")
   resp@cnFillColors=(/117,118,119,120,121,122,123,124,125,126/)
   resp@cnLevels=(/-500,-250,-100,-50,0,50,100,250,500/)
   rest=True
   rest=set_res_climate("change in 2m annual mean temperature [C]")
   rest@cnFillColors=(/127,128,129,130,132,133,134,135,136,137,138,139/)
   rest@cnLevels=(/-2.5,-2.,-1.5,-1.,-0.5,0.,0.5,1.,1.5,2.,2.5/)


   ;sresp=True
   ;sresp=set_sres_climate()
   ;sresp@cnLevels                = (/-0.01,0.01/)
   ;sresp@cnFillPatterns          = (/1,-1,15/)
   ;srest=True
   ;srest=set_sres_climate()
   ;srest@cnLevels                = (/-0.35,0.35/)
   ;srest@cnFillPatterns          = (/1,-1,15/)
   xyresp = True
   xyresp = set_xyres_climate (-200.,200.,"zonal yearly precipitation [mm]")
   xyrest = True
   xyrest = set_xyres_climate (-2.5,2.5,"zonal averaged annual mean temperature [C]")

   ;;; zonal res prec
   zresp                         = True
   zresp = set_zres_climate(-0.1,0.1,"zonal mean grass frac.[%]")
   zrest                         = True
   zrest = set_zres_climate(-0.1,0.1,"zonal mean woody frac.[%]")






;precipitation
;   fig0                          = gsn_csm_contour_map_overlay(wks,add90LatY(prec),add90LatY(grass),resp,sresp)
   fig0                          = gsn_csm_contour_map (wks,add90LatY(prec),resp)
   zonal_averagep                = new((/2,dimsizes(prec&lat)/),float)
   zonal_averagep(0,:)           = dim_avg(prec)
   xyplotp                       = gsn_csm_xy(wks, zonal_averagep,prec&lat,xyresp)
   returnplot                    = gsn_attach_plots(fig0,(/xyplotp/),resp,xyresp)
   plot(0)                       = gsn_csm_attach_zonal_means(wks,fig0,grass,zresp)

; TEMPERATURE
;   fig1                          = gsn_csm_contour_map_overlay(wks,add90LatY(temp),add90LatY(forest),rest,srest)
   fig1                          = gsn_csm_contour_map (wks,add90LatY(temp),rest)
   zonal_averaget                = new((/1,dimsizes(temp&lat)/),float)
   zonal_averaget(0,:)           = dim_avg(temp)
   xyplott                       = gsn_csm_xy(wks, zonal_averaget,temp&lat,xyrest)
   returnplot2                   = gsn_attach_plots(fig1,(/xyplott/),rest,xyrest)
   plot(1)                       = gsn_csm_attach_zonal_means(wks,fig1,forest,zrest)

; combine both
   resPanel=True
   resPanel=set_panel_settings(resPanel,paneltitle,year,"")
   gsn_panel(wks,(/fig0,fig1/),(/1,2/),resPanel)

end




undef ("xy1d")
procedure xy1d (data:float,wkstype,output,title:string)
local res
begin
   res=True
   wks = gsn_open_wks(wkstype ,output)
   cmap=def_colormap
   gsn_define_colormap(wks,cmap)

    res@xyLineThicknesses = (/1.0,2.0/)               ; make 2nd lines thicker

    res@xyLineColors           = (/"blue","red","green"/)          ; change line color

    res@pmLegendDisplayMode    = "Always"   ; Display a legend.
    res@pmLegendWidthF         = 0.2        ; Make it smaller
    res@pmLegendHeightF        = 0.1        ; Make it smaller
    res@pmLegendOrthogonalPosF = -0.32      ; Move into to plot
    res@pmLegendParallelPosF   =  0.75      ; Move to right
    res@lgPerimOn              = False      ; No legend perimeter.
    res@lgLabelFontHeightF     = 0.01

   res@tiMainString=title        ; add title
   plot  = gsn_csm_y (wks,data,res) ; create plot
end


undef ("xyfireclim")
procedure xyfireclim(data:float,colorvec:string,xaxisstring,yaxisstring:string,wkstype,output,paneltitle:string,XBValues:integer, XBLabels:string)
begin
    res=True
    res@tmXBMode      = "Explicit" ; label independently
	res@tmXBValues    = XBValues
	res@tmXBLabels    = XBLabels
    dims=dimsizes(data)
    rank=dimsizes(dims)
    print(dims+" "+rank)
    printVarSummary(data)

    if (rank.eq.1) then
        nplot=1
        ntime=dims(0)
    else
        nplot=dims(0)
        ntime=dims(1)
    end if


    print(nplot+" "+ntime)
    wks = gsn_open_wks(wkstype ,output)
    cmap=def_colormap

    gsn_define_colormap(wks,cmap)
    res@xyLineThicknesses = (/1.0,2.0/)               ; make 2nd lines thicker

    ;res@xyLineColors           = colorvec          ; change line color

    ;res@pmLegendDisplayMode    = "Always"   ; Display a legend.
    res@pmLegendWidthF         = 0.2        ; Make it smaller
    res@pmLegendHeightF        = 0.1        ; Make it smaller
    res@pmLegendOrthogonalPosF = -0.32      ; Move into to plot
    res@pmLegendParallelPosF   =  0.75      ; Move to right
    res@lgPerimOn              = False      ; No legend perimeter.
    res@lgLabelFontHeightF     = 0.01



    res@tfPolyDrawOrder       = "PreDraw"    ; Draw any attached primitives
                                           ; before rest of plot.

;    res@tmXBOn                = False
    res@tmYLLabelFontHeightF  = 0.03      ; resize tick labels
    res@tmYRLabelFontHeightF  = 0.03
     res@tmYLLabelStride    = 2
     res@tmYRLabelStride    = 2


  res@gsnDraw              = False
  res@gsnFrame             = False

  res@vpWidthF             = 0.80          ; change aspect ratio of plot
  res@vpHeightF            = 0.25

   ; just print 1000yr steps
;   times=data&time/10000
    res@tiMainString=paneltitle        ; add title
    ;res@tmYRMode="Explicit"
    ;res@tmYLMode="Explicit"
    ;res@trYMinF                = -1.5
    ;res@trYMaxF                = 1.5

;    res@YRValues=(/-0.6,-0.3,0.,0.3,0.6/)
;    res@YLValues=(/-0.6,-0.3,0.,0.3,0.6/)

; plot  = gsn_csm_xy (wks,tlc2&time,data,res) ; create plot
    plot=new(nplot,graphic)
    res@tiYAxisSide=""
    do iplot=0,nplot-1
        res@tmXTOn=(iplot.eq.0)
        res@tmXBOn=(iplot.eq.nplot-1)
        if ( res@tiYAxisSide.eq."Right" ) then
            res@tiYAxisSide="Left"
            res@tmYRLabelsOn=False
            res@tmYLLabelsOn=True
        else
            res@tiYAxisSide="Right"
            res@tmYRLabelsOn=True
            res@tmYLLabelsOn=False
        end if

;        res@tmXBMode             = "Explicit"
        ;res@tmXBValues           = xindexc
        ;res@tmXBLabels           = xlabelc
        res@tmXBLabelFontHeightF = 0.02
        res@xyLineColor          = colorvec(iplot)
        res@tiYAxisString        = yaxisstring(iplot)
        res@tiXAxisString        = xaxisstring
        res@tiYAxisFontColor     = res@xyLineColor
        res@tmYLLabelFontColor   = res@xyLineColor

        if ( rank.eq.1) then
            plot(iplot)=gsn_csm_y(wks,data(:),res) ; create plot, if there is just one timeline
        else
            plot(iplot)  = gsn_csm_y(wks,data(iplot,:),res) ; create plot
        end if
    end do

    if (rank.eq.1) then
        ;respanel=True
        pres = False               ; No resources needed
        ;maximize_output(wks,pres)  ; Maximize plot on page
    else
        attachres1                     = True
        attachres1@gsnAttachPlotsXAxis = True  ;; attaches along x-axis
        attachres1@gsnAttachBorderOn   = False ;; No border please
        attachres2                     = True
        attachres2@gsnAttachPlotsXAxis = True  ;; attaches along x-axis
        attachres2@gsnAttachBorderOn   = False ;; No border please

        attachid1  = gsn_attach_plots(plot(0),plot(1:(nplot-1)),attachres1,attachres2)

        respanel=True
        pres = False               ; No resources needed
        maximize_output(wks,pres)  ; Maximize plot on page
    end if

end




undef ("xyfireclim_short")
procedure xyfireclim_short(data:float,colorvec:string,xaxisstring,yaxisstring:string,wkstype,output,paneltitle:string,XBValues:integer, XBLabels:string)
begin
    res=True
    res@tmXBMode      = "Explicit" ; label independently
    res@tmXBValues    = XBValues
    res@tmXBLabels    = XBLabels
    dims=dimsizes(data)
    rank=dimsizes(dims)
    print(dims+" "+rank)
    printVarSummary(data)

    if (rank.eq.1) then
        nplot=1
        ntime=dims(0)
    else
        nplot=dims(0)
        ntime=dims(1)
    end if


    print(nplot+" "+ntime)
    wks = gsn_open_wks(wkstype ,output)
    cmap=def_colormap

    gsn_define_colormap(wks,cmap)
    res@xyLineThicknesses = (/1.0,2.0/)               ; make 2nd lines thicker

    ;res@xyLineColors           = colorvec          ; change line color

    ;res@pmLegendDisplayMode    = "Always"   ; Display a legend.
    res@pmLegendWidthF         = 0.2        ; Make it smaller
    res@pmLegendHeightF        = 0.1        ; Make it smaller
    res@pmLegendOrthogonalPosF = -0.32      ; Move into to plot
    res@pmLegendParallelPosF   =  0.75      ; Move to right
    res@lgPerimOn              = False      ; No legend perimeter.
    res@lgLabelFontHeightF     = 0.01



    res@tfPolyDrawOrder       = "PreDraw"    ; Draw any attached primitives
                                           ; before rest of plot.

;    res@tmXBOn                = False
    res@tmYLLabelFontHeightF  = 0.02      ; resize tick labels
    res@tmYRLabelFontHeightF  = 0.02
     ;res@tmYLLabelStride    = 2
     ;res@tmYRLabelStride    = 2


  res@gsnDraw              = False
  res@gsnFrame             = False

  res@vpWidthF             = 0.80          ; change aspect ratio of plot
  res@vpHeightF            = 0.25

   ; just print 1000yr steps
;   times=data&time/10000
    res@tiMainString=paneltitle        ; add title
    ; res@tmYRMode="Explicit"
    ; res@tmYLMode="Explicit"
    ; res@tmYLLabels=(/-0.9,-0.6,-0.3,0.,0.3,0.6,0.9/);
    ; res@tmYLValues=(/-0.9,-0.6,-0.3,0.,0.3,0.6,0.9/);
    ;
    ; res@tmYRLabels=(/-0.9,-0.6,-0.3,0.,0.3,0.6,0.9/);                = 1.
    ; res@tmYRValues=(/-0.9,-0.6,-0.3,0.,0.3,0.6,0.9/);                = 1.


; plot  = gsn_csm_xy (wks,tlc2&time,data,res) ; create plot
    plot=new(nplot,graphic)
    res@tiYAxisSide=""
    do iplot=0,nplot-1
        res@tmXTOn=(iplot.eq.0)
        res@tmXBOn=(iplot.eq.nplot-1)
        if ( res@tiYAxisSide.eq."Right" ) then
            res@tiYAxisSide="Left"
            ; res@tmYRLabelsOn=False
            ; res@tmYLLabelsOn=True
        else
            res@tiYAxisSide="Right"
            ; res@tmYRLabelsOn=True
            ; res@tmYLLabelsOn=False
        end if

;        res@tmXBMode             = "Explicit"
        ;res@tmXBValues           = xindexc
        ;res@tmXBLabels           = xlabelc
        res@tmXBLabelFontHeightF = 0.02
        res@xyLineColor          = colorvec(iplot)
        res@tiYAxisString        = yaxisstring(iplot)
        res@tiXAxisString        = xaxisstring
        res@tiYAxisFontColor     = res@xyLineColor
        res@tmYLLabelFontColor   = res@xyLineColor

        if ( rank.eq.1) then
            plot(iplot)=gsn_csm_y(wks,data(:),res) ; create plot, if there is just one timeline
        else
            plot(iplot)  = gsn_csm_y(wks,data(iplot,:),res) ; create plot

;            gsres=True
;            x    = new(2, float )
;            y    = new(2, float )
;            x(0)=0
;            y(0)=0
;            y(1)=0
;            x(1)=dimsizes(XBValues)
;            dummy = gsn_add_polyline(wks,plot(iplot),x,y,gsres)
        end if
    end do

    if (rank.eq.1) then
        ;respanel=True
        pres = False               ; No resources needed
        ;maximize_output(wks,pres)  ; Maximize plot on page
    else
        attachres1                     = True
        attachres1@gsnAttachPlotsXAxis = True  ;; attaches along x-axis
        attachres1@gsnAttachBorderOn   = False ;; No border please
        attachres2                     = True
        attachres2@gsnAttachPlotsXAxis = True  ;; attaches along x-axis
        attachres2@gsnAttachBorderOn   = False ;; No border please

        attachid1  = gsn_attach_plots(plot(0),plot(1:(nplot-1)),attachres1,attachres2)

        respanel=True
        pres = False               ; No resources needed
        maximize_output(wks,pres)  ; Maximize plot on page
    end if




end




function set_basics_hoff_opt(opt:logical)
begin
    opt=True
    opt@ano=True
    opt@baseStart=7700
    opt@baseEnd=7799
    opt@smooth=True
    opt@nave=101

    return opt
end



function prepare_hoff(data:float,opt:logical)
begin
    print (opt@ano)
    print (opt@baseStart)
    print (opt@baseEnd)
    print (opt@smooth)
    print (opt@nave)

    if ( opt@ano) then
        data=data-conform_dims(dimsizes(data),dim_avg_n(data(opt@baseStart:opt@baseEnd,:),0),1)
    end if

    plotdata=data(lat|:,time|:)
    plotdata!0 = data!1
    plotdata!1 = data!0
    plotdata&lat = data&lat
    plotdata&time = data&time

    if (opt@smooth) then
        plotdata=runave_n_Wrap(plotdata,opt@nave,0,1)
    end if

    plotdata&time = data&time/10000 ;-8000
    plotdata&lat@units=data&lat@units
    plotdata&time@units=data&time@units

    return plotdata
end




function prepare_hoff_temp(fn:string)
begin
    ;open file
    f=addfile(fn,"r")
    data=f->air_temp(:,:,0)
    printVarSummary(data)
    opt=True
    opt=set_basics_hoff_opt(opt)
    plotdata=prepare_hoff (data,opt)
    return plotdata
end


function prepare_hoff_prec(fn:string)
begin
    ;open file
    f=addfile(fn,"r")
    data=f->precip(:,:,0)
    printVarSummary(data)
    opt=True
    opt=set_basics_hoff_opt(opt)
    plotdata=prepare_hoff (data,opt)
    return plotdata
end


function prepare_hoff_cpools(fn:string)
begin
    ;open file
    f=addfile(fn,"r")
    data=f->box_Cpools_total(:,:,0)
    printVarSummary(data)
    opt=True
    opt=set_basics_hoff_opt(opt)
    plotdata=prepare_hoff (data,opt)
    return plotdata
end


undef ("prepare_hoff_coverfraction")
function prepare_hoff_coverfraction (fncover, fncorrect,fnratiomax:string)
local data,cover_fract,veg_fract_correction,veg_ratio_max,dims,nlat,nlon,coverfraction
begin
    ;4d
   data=addfile(fncover, "r")
   cover_fract=data->cover_fract(:,:,:,:)

   data=addfile(fncorrect, "r")
   veg_fract_correction=data->veg_fract_correction(:,:,:,:)

   ;3d
   data=addfile(fnratiomax, "r")
   veg_ratio_max=data->veg_ratio_max(:,:,:)

   dims=dimsizes(veg_ratio_max)
   ntime=dims(0)
   nlat=dims(1)
   nlon=dims(2)

   coverfraction=new((/5,ntime,nlat,nlon/),float,MyFillValue)

   copy_VarAtts(cover_fract,coverfraction)
   timeunit=cover_fract&time@units
   latunit=cover_fract&lat@units
   lonunit=cover_fract&lon@units

   coverfraction!0="pfts"
   coverfraction!1="time"
   coverfraction!2="lat"
   coverfraction!3="lon"

   coverfraction&time=cover_fract&time
   coverfraction&lat=cover_fract&lat
   coverfraction&lon=cover_fract&lon

   coverfraction&time@units=timeunit
   coverfraction&lat@units=latunit
   coverfraction&lon@units=lonunit

   ;desert
   coverfraction(0,:,:,:)=1.-veg_ratio_max
   ;woody
   coverfraction(1,:,:,:)=veg_ratio_max*dim_sum_n_Wrap(cover_fract(:,0:5,:,:),1)
   ;tree
   coverfraction(2,:,:,:)=veg_ratio_max*dim_sum_n_Wrap(cover_fract(:,0:3,:,:),1)
   ;shrubs
   coverfraction(3,:,:,:)=veg_ratio_max*dim_sum_n_Wrap(cover_fract(:,4:5,:,:),1)
   ;grass
   coverfraction(4,:,:,:)=veg_ratio_max*dim_sum_n_Wrap(cover_fract(:,6:7,:,:),1)

   covers=dim_sum_n_Wrap(coverfraction,3)
   printVarSummary(covers)
   return covers
end





;boxC_reserve(:,:,{lat1:lat2},lons),1),0)
;   boxC_green2d       = dim_avg_n_Wrap(dim_sum_n_Wrap(data->boxC_green(:,:,{lat1:lat2},lons),1),0)
;   boxC_woods2d       = dim_avg_n_Wrap(dim_sum_n_Wrap(data->boxC_woods(:,:,{lat1:lat2},lons),1),0)
;   box_GPP_yDayMean2d = dim_avg_n_Wrap(dim_sum_n_Wrap(data->box_GPP_yDayMean(:,:,{lat1:lat2},lons),1),0)
;   box_Cpools_total2d = dim_avg_n_Wrap(data->box_Cpools_total

undef ("prepare_hoff_carbon")
function prepare_hoff_carbon (fngreen, fnwoods, fnreserve ,fntotal, fngpp:string)
local ntime, nlat, nlon
begin
    ;4d
   data=addfile(fngreen, "r")
   boxC_green=dim_avg_n_Wrap(data->boxC_green(:,:,:),2)
   data=addfile(fnwoods, "r")
   boxC_woods=dim_avg_n_Wrap(data->boxC_woods(:,:,:),2)
   data=addfile(fnreserve, "r")
   boxC_reserve=dim_avg_n_Wrap(data->boxC_reserve(:,:,:),2)
   data=addfile(fngpp, "r")
   box_GPP_yDayMean=dim_avg_n_Wrap(data->box_GPP_yDayMean(:,:,:),2)

   ;3d
   data=addfile(fntotal, "r")
   box_Cpools_total=dim_avg_n_Wrap(data->box_Cpools_total(:,:,:),2)

   dims=dimsizes(box_Cpools_total)
   ntime=dims(0)
   nlat=dims(1)
   cpools=new((/4,ntime,nlat/),float,MyFillValue)

   cpools(0,:,:) = 0.012*box_Cpools_total
   cpools(1,:,:) = 0.012*(box_Cpools_total-boxC_reserve-boxC_green-boxC_woods)
   cpools(2,:,:) = 0.012*(boxC_reserve+boxC_green+boxC_woods)
   cpools(3,:,:) = 0.012*3600*24*365.25 * box_GPP_yDayMean



   printVarSummary(box_Cpools_total)

   copy_VarAtts(box_Cpools_total,cpools)
   timeunit=box_Cpools_total&time@units
   latunit=box_Cpools_total&lat@units


   cpools!0="pools"
   cpools!1="time"
   cpools!2="lat"

   cpools&time=box_Cpools_total&time
   cpools&lat=box_Cpools_total&lat

   cpools&time@units=timeunit
   cpools&lat@units=latunit


   opt=True
   opt=set_basics_hoff_opt(opt)
   plotdata=new((/4,nlat,ntime/),float,MyFillValue)

   do i=0,3
     print(""+i)
     plotdata(i,:,:)=prepare_hoff (cpools(i,:,:),opt)
   end do
   return plotdata
end





undef ("prepare_hoff_desert")
function prepare_hoff_desert (fn:string)
local data,cover_fract,veg_fract_correction,veg_ratio_max,dims,nlat,nlon,coverfraction
begin
   f=addfile(fn, "r")

;3d
   data=f->veg_ratio_max(:,:,0)
   data2=1-f->veg_ratio_max(:,:,0)

   copy_VarCoords(data,data2)

   printVarSummary(data)
   printVarSummary(data2)
   opt=True
   opt=set_basics_hoff_opt(opt)
   plotdata=prepare_hoff (data2,opt)
   return plotdata
end


undef ("prepare_hoff_fire")
function prepare_hoff_fire (fn:string)
local data,cover_fract,veg_fract_correction,veg_ratio_max,dims,nlat,nlon,coverfraction
begin
   f=addfile(fn, "r")

;3d
   area=get_area("T31",0.,360.,-90.,90.)
   data=f->box_burned_acc(:,:,:)
   area3d=conform_dims(dimsizes(data),area,(/1,2/))

   printVarSummary(data)
   printVarSummary(area3d)
   data2=365.25 / 1e10*data*area3d
   copy_VarCoords(data,data2)
   data3=dim_avg_n_Wrap(data2,2)

   printVarSummary(data3)
   print(min(data3))
   print(max(data3))

   opt=True
   opt=set_basics_hoff_opt(opt)
   plotdata=prepare_hoff (data3,opt)
   return plotdata
end





procedure plot_hoff_temp_ano(data:float,wkstype,output,title:string)
begin
    ;if ( isdefined(options@wkstype)) then wkstype=options@wkstype elseif wkstype="pdf" fi
    ;output=options@output
    ;title=options@title


    wks   = gsn_open_wks (wkstype, output )  ; open workstation
    cmap=def_colormap
    gsn_define_colormap(wks,cmap)

    res                  = True                ; plot mods desired
    res@tiMainString     = title               ; title
    ;res@tmXBLabelStride  = 2                   ; tick mark label stride
    res@tiYAxisString    = "latitude"              ; y axis title

    res@cnFillOn         = True                ; color on
    res@cnFillMode = "RasterFill"

    res@cnLevelSelectionMode = "ExplicitLevels"
    res@cnFillColors=(/127,128,129,130,132,133,134,135,136,137,138,139/)
    res@gsnRightString= "[K]"
    res@cnLevels=(/-1.,-.8,-.6,-.4,-.2,0.,0.2,0.4,.6,.8,1./)
    ;res@lbLabelStride    = 2                   ; every other label
    res@lbOrientation    = "Vertical"          ; vertical label bar
    res@cnLinesOn        = False               ; turn off contour lines
    res@gsnSpreadColors  = True                ; use full range of color map
    ;res@cnLevelSpacingF  = 5                   ; contour spacing

    print("plotting")
    printVarSummary(data)

    plot = gsn_csm_time_lat(wks, data, res )
end




procedure plot_hoff_temp_ano_bern(data:float,wkstype,output,title:string)
begin

    wks   = gsn_open_wks (wkstype, output )  ; open workstation
    cmap=def_colormap
    gsn_define_colormap(wks,cmap)

    res                  = True                ; plot mods desired
    res@tiMainString     = title               ; title
    ;res@tmXBLabelStride  = 2                   ; tick mark label stride
    res@tiYAxisString    = "latitude"              ; y axis title

    res@cnFillOn         = True                ; color on
    res@cnFillMode = "RasterFill"

    res@cnLevelSelectionMode = "ExplicitLevels"
    res@cnFillColors=(/127,128,129,130,132,133,134,135,136,137,138,139/)
    res@gsnRightString= "[K]"
    res@cnLevels=(/-1.,-.8,-.6,-.4,-.2,0.,0.2,0.4,.6,.8,1./)
    ;res@lbLabelStride    = 2                   ; every other label
    res@lbOrientation    = "Vertical"          ; vertical label bar
    res@cnLinesOn        = False               ; turn off contour lines
    res@gsnSpreadColors  = True                ; use full range of color map
    ;res@cnLevelSpacingF  = 5                   ; contour spacing
    res@trYMaxF=90.
    res@trYMinF=-60.
    plot = gsn_csm_time_lat(wks, data, res )
end




procedure plot_hoff_prec_ano_bern(data:float,wkstype,output,title:string)
begin
    data&lat@units="degrees_north"

    wks   = gsn_open_wks (wkstype, output )  ; open workstation
    cmap=def_colormap
    gsn_define_colormap(wks,cmap)

    res                  = True                ; plot mods desired
    res@tiMainString     = title               ; title
    ;res@tmXBLabelStride  = 2                   ; tick mark label stride
    res@tiYAxisString    = "latitude"              ; y axis title

    res@cnFillOn         = True                ; color on
    res@cnFillMode = "RasterFill"

    res@cnLevelSelectionMode = "ExplicitLevels"
    res@cnLevels = (/-250,-200,-150,-100,-50,-10,10,50,100,150,200,250/)
    res@cnFillColors = (/139,138,137,136,135,134,0,133,132,131,130,129,128/)
    res@gsnRightString= "["+data@units+"]"
    ;res@lbLabelStride    = 2                   ; every other label
    res@lbOrientation    = "Vertical"          ; vertical label bar
    res@cnLinesOn        = False               ; turn off contour lines
    res@gsnSpreadColors  = True                ; use full range of color map
    ;res@cnLevelSpacingF  = 5                   ; contour spacing

    plot = gsn_csm_time_lat(wks, data, res )
end



procedure plot_hoff_cpools_ano_bern(data:float,wkstype,output,title:string,year:string)
begin
    wks   = gsn_open_wks (wkstype, output )  ; open workstation
    cmap=def_colormap
    gsn_define_colormap(wks,cmap)
    printVarSummary(data)
    res                  = True                ; plot mods desired
    res@tiMainString     = title               ; title
    ;res@tmXBLabelStride  = 2                   ; tick mark label stride
    res@tiYAxisString    = "latitude"              ; y axis title

    res@cnFillOn         = True                ; color on
    res@cnFillMode = "RasterFill"

    res@cnLevelSelectionMode = "ExplicitLevels"
    res@cnLevels = (/-5.00,-2.50,-1.00,-0.50,-0.25,-0.05,0.05,0.25,0.50,1.00,2.50,5.00/)
    res@cnFillColors = ispan(13,25,1)
    res@gsnRightString= "[Kg C m-2 (grid box)]"

    ;res@lbLabelStride    = 2                   ; every other label
    res@lbOrientation    = "Vertical"          ; vertical label bar
    res@cnLinesOn        = False               ; turn off contour lines
    res@gsnSpreadColors  = True                ; use full range of color map

    res@gsnDraw                  = False            ; don't draw yet
    res@gsnFrame                 = False            ; don't advance frame yet
    res@trYMaxF=90.
    res@trYMinF=-60.

    ;printVarSummary(data)
    plot=new(5,graphic)
    res@gsnLeftString = "total"
;    plot(0) = gsn_csm_time_lat(wks,data(0,:,:), res )
    plot(0) = gsn_csm_time_lat(wks,data(:,:), res )
    draw(plot(0))

    ;getvalues plot@contour
    ;  "cnLevels" : levels
    ;end getvalues
    ;res@lbLabelStrings       = sprintf("%4.3f",levels)   ; Format the labels


;    res@gsnLeftString = "soil"
;    plot(1) = gsn_csm_time_lat(wks,data(1,:,:), res )
;    res@gsnLeftString = "green"
;    plot(2) = gsn_csm_time_lat(wks,data(2,:,:), res )
;
;    res@cnLevels = (/-0.50,-0.20,-0.10,-0.05,-0.025,-0.005,0.005,0.025,0.05,0.10,0.25,0.50/)
;    res@gsnLeftString = "gpp"
;    plot(3) = gsn_csm_time_lat(wks,data(3,:,:), res )
;    res@gsnLeftString = "npp"
;    plot(4) = gsn_csm_time_lat(wks,data(4,:,:), res )
;
;
;    resP=True
;    resP=set_panel_settings(resP,title,year,"")
;    gsn_panel(wks,plot(0:4),(/2,2,1/),resP)
end

procedure plot_hoff_cpools_ano_climba(data,data1d:float,wkstype,output,title:string,pool:string,xlabels,ylabels:string,xvalues,yvalues:float)
begin
    wks   = gsn_open_wks (wkstype, output )  ; open workstation
    cmap=def_colormap
    gsn_define_colormap(wks,cmap)
    printVarSummary(data)
    res                  = True                ; plot mods desired
    res@tiMainString     = title               ; title
    ;res@tmXBLabelStride  = 2                   ; tick mark label stride
    res@tiYAxisString    = "latitude"              ; y axis title

    res@cnFillOn         = True                ; color on
    res@cnFillMode = "RasterFill"

    res@cnLevelSelectionMode = "ExplicitLevels"
    res@cnLevels = (/-5.00,-2.50,-1.00,-0.50,-0.25,-0.05,0.05,0.25,0.50,1.00,2.50,5.00/)

    res@cnFillColors = ispan(13,25,1)
    res@gsnRightString= "[Kg C m-2 (grid box)]"
    res@mpShapeMode = "FreeAspect"
    ;res2@vpWidthF = 0.8
    res@vpHeightF = 0.3

    res@lbLabelStride    = 1                   ; every other label
    res@lbOrientation    = "Vertical"          ; vertical label bar
    res@cnLinesOn        = False               ; turn off contour lines
    res@gsnSpreadColors  = True                ; use full range of color map

    res@gsnDraw                  = False            ; don't draw yet
    res@gsnFrame                 = False            ; don't advance frame yet

    res@trYMaxF=90.
    res@trYMinF=-60.

    res@tmXBMode="Explicit"
;    res@trXMaxF=8000.
;    res@trXMinF=1.
;    res@tmXBValues = xvalues ;(/0.,1000.,2000.,3000.,4000.,5000.,6000.,7000.,8000./)
;    res@tmXBLabels = xlabels ;(/"8K BP","7K BP","6K BP","5K BP","4K BP","3K BP","2K BP","1K BP", "0K BP"/)
;    res@tmXTOn=True

    plot=new(5,graphic)
    res@gsnLeftString = pool

    plot(0) = gsn_csm_time_lat(wks,data(:,:), res )

    res2=True

    res2@trXMaxF=dimsizes(data1d)+1
    res2@trXMinF=1.


    res2@gsnDraw                  = False            ; don't draw yet
    res2@gsnFrame                 = False
    res2@gsnAttachPlotsXAxis = True
    res2@mpShapeMode = "FreeAspect"
    ;res2@vpWidthF = 0.8
    res2@vpHeightF = 0.15
    ;res2@tmYUseLeft  = False
    res2@tmYLOn= True
    res2@tmYLLabelsOn= False

    res2@trYMaxF=max(yvalues)-.05
    res2@trYMinF=min(yvalues)

    res2@tmYROn= True
    res2@tmYRLabelsOn= True
    res2@tmYRMode="Explicit"
    res2@tmYRValues = yvalues ;(/2600.,2700.,2800.,2900.,3000./)
    res2@tmYRLabels = ylabels ;(/"2600","2700","2800","2900",""/)

    res2@tmXBMode="Explicit"
    res2@tmXBValues = xvalues ;(/0.,1000.,2000.,3000.,4000.,5000.,6000.,7000.,8000./)
    res2@tmXBLabels = xlabels ;(/"8K BP","7K BP","6K BP","5K BP","4K BP","3K BP","2K BP","1K BP", "0K BP"/)

    plot(1) = gsn_csm_y(wks,runave(data1d,99,0),res2)
    newplot = gsn_attach_plots(plot(0),(/plot(1)/),res,res2)
    draw(plot(0))
end


procedure plot_hoff_woodyarea_abs_climba(data,data1d:float,wkstype,output,title:string,pool:string,xlabels,ylabels:string,xvalues,yvalues:float)
begin
    wks   = gsn_open_wks (wkstype, output )  ; open workstation
    ;cmap=def_colormap
    ;cmap = read_colormap_file("MPL_BuGn")

    ;gsn_define_colormap(wks,cmap)




    gsn_define_colormap(wks,"MPL_BuGn")

    printVarSummary(data)
    res                  = True                ; plot mods desired
    res@tiMainString     = title               ; title
    ;res@tmXBLabelStride  = 2                   ; tick mark label stride
    res@tiYAxisString    = "latitude"              ; y axis title

    res@cnFillOn         = True                ; color on
    res@cnFillMode = "RasterFill"

    ;res@cnLevelSelectionMode = "ExplicitLevels"
    ;res@cnLevels = (/-5.00,-2.50,-1.00,-0.50,-0.25,0.25,0.50,1.00,2.50,5.00/)
    ;res@cnLevels = (/0.,0.50,1.00,2.,3.,4.,5.00/)

    ;res@cnFillColors = ispan(63,75,1)
    ;res@cnFillColors = ispan(27,36,1)

    res@gsnRightString= "[Mha]"
    res@mpShapeMode = "FreeAspect"
    ;res2@vpWidthF = 0.8
    res@vpHeightF = 0.3

    res@lbLabelStride    = 1                   ; every other label
    res@lbOrientation    = "Vertical"          ; vertical label bar
    res@cnLinesOn        = False               ; turn off contour lines
    res@gsnSpreadColors  = True                ; use full range of color map

    res@gsnDraw                  = False            ; don't draw yet
    res@gsnFrame                 = False            ; don't advance frame yet

    res@trYMaxF=90.
    res@trYMinF=-60.

    res@tmXBMode="Explicit"
;    res@trXMaxF=8000.
;    res@trXMinF=1.
;    res@tmXBValues = xvalues ;(/0.,1000.,2000.,3000.,4000.,5000.,6000.,7000.,8000./)
;    res@tmXBLabels = xlabels ;(/"8K BP","7K BP","6K BP","5K BP","4K BP","3K BP","2K BP","1K BP", "0K BP"/)
;    res@tmXTOn=True

    plot=new(5,graphic)
    res@gsnLeftString = pool

    plot(0) = gsn_csm_time_lat(wks,data(:,:), res )

    res2=True

    res2@trXMaxF=dimsizes(data1d)+1
    res2@trXMinF=1.


    res2@gsnDraw                  = False            ; don't draw yet
    res2@gsnFrame                 = False
    res2@gsnAttachPlotsXAxis = True
    res2@mpShapeMode = "FreeAspect"
    ;res2@vpWidthF = 0.8
    res2@vpHeightF = 0.15
    ;res2@tmYUseLeft  = False
    res2@tmYLOn= True
    res2@tmYLLabelsOn= False

    res2@trYMaxF=max(yvalues)-.05
    res2@trYMinF=min(yvalues)

    res2@tmYROn= True
    res2@tmYRLabelsOn= True
    ;res2@tmYRMode="Explicit"
    ;res2@tmYRValues = yvalues ;(/2600.,2700.,2800.,2900.,3000./)
    ;res2@tmYRLabels = ylabels ;(/"2600","2700","2800","2900",""/)

    res2@tmXBMode="Explicit"
    res2@tmXBValues = xvalues ;(/0.,1000.,2000.,3000.,4000.,5000.,6000.,7000.,8000./)
    res2@tmXBLabels = xlabels ;(/"8K BP","7K BP","6K BP","5K BP","4K BP","3K BP","2K BP","1K BP", "0K BP"/)

    plot(1) = gsn_csm_y(wks,runave(data1d,99,0),res2)
    newplot = gsn_attach_plots(plot(0),(/plot(1)/),res,res2)
    draw(plot(0))
end



procedure plot_hoff_woodyarea_ano_climba(data,data1d:float,wkstype,output,title:string,pool:string,xlabels,ylabels:string,xvalues,yvalues:float)
begin
    wks   = gsn_open_wks (wkstype, output )  ; open workstation
    cmap=def_colormap
    gsn_define_colormap(wks,cmap)
    printVarSummary(data)
    res                  = True                ; plot mods desired
    res@tiMainString     = title               ; title
    ;res@tmXBLabelStride  = 2                   ; tick mark label stride
    res@tiYAxisString    = "latitude"              ; y axis title

    res@cnFillOn         = True                ; color on
    res@cnFillMode = "RasterFill"

    res@cnLevelSelectionMode = "ExplicitLevels"
    res@cnLevels = (/-50,-40,-30,-20,-10,-5,5,10,20,30,40,50/)
    res@cnFillColors = ispan(38,50,1)

    res@gsnRightString= "[Mha]"
    res@mpShapeMode = "FreeAspect"
    ;res2@vpWidthF = 0.8
    res@vpHeightF = 0.3

    res@lbLabelStride    = 1                   ; every other label
    res@lbOrientation    = "Vertical"          ; vertical label bar
    res@cnLinesOn        = False               ; turn off contour lines
    res@gsnSpreadColors  = True                ; use full range of color map

    res@gsnDraw                  = False            ; don't draw yet
    res@gsnFrame                 = False            ; don't advance frame yet

    res@trYMaxF=90.
    res@trYMinF=-60.

    res@tmXBMode="Explicit"

    plot=new(5,graphic)
    res@gsnLeftString = pool

    plot(0) = gsn_csm_time_lat(wks,data(:,:), res )

    res2=True

    res2@trXMaxF=dimsizes(data1d)+1
    res2@trXMinF=1.


    res2@gsnDraw                  = False            ; don't draw yet
    res2@gsnFrame                 = False
    res2@gsnAttachPlotsXAxis = True
    res2@mpShapeMode = "FreeAspect"
    ;res2@vpWidthF = 0.8
    res2@vpHeightF = 0.15
    ;res2@tmYUseLeft  = False
    res2@tmYLOn= True
    res2@tmYLLabelsOn= False

    res2@trYMaxF=max(yvalues)-.05
    res2@trYMinF=min(yvalues)

    res2@tmYROn= True
    res2@tmYRLabelsOn= True

    res2@tmXBMode="Explicit"
    res2@tmXBValues = xvalues ;(/0.,1000.,2000.,3000.,4000.,5000.,6000.,7000.,8000./)
    res2@tmXBLabels = xlabels ;(/"8K BP","7K BP","6K BP","5K BP","4K BP","3K BP","2K BP","1K BP", "0K BP"/)

    plot(1) = gsn_csm_y(wks,runave(data1d,99,0),res2)
    newplot = gsn_attach_plots(plot(0),(/plot(1)/),res,res2)
    draw(plot(0))
end



procedure plot_hoff_temp_ano_climba(data,data1d:float,wkstype,output,title:string,pool:string,xlabels,ylabels:string,xvalues,yvalues:float)
begin
    wks   = gsn_open_wks (wkstype, output )  ; open workstation
    cmap=def_colormap
    gsn_define_colormap(wks,cmap)
    printVarSummary(data)
    res                  = True                ; plot mods desired
    res@tiMainString     = title               ; title
    ;res@tmXBLabelStride  = 2                   ; tick mark label stride
    res@tiYAxisString    = "latitude"              ; y axis title

    res@cnFillOn         = True                ; color on
    res@cnFillMode = "RasterFill"

    res@cnLevelSelectionMode = "ExplicitLevels"
    res@cnFillColors=(/127,128,129,130,132,133,91,134,135,136,137,138,139/)
    res@gsnRightString= "[K]"
    res@cnLevels=(/-1.,-.8,-.6,-.4,-.2,-0.02,0.02,0.2,0.4,.6,.8,1./)

    res@mpShapeMode = "FreeAspect"
    ;res2@vpWidthF = 0.8
    res@vpHeightF = 0.3

    res@lbLabelStride    = 1                   ; every other label
    res@lbOrientation    = "Vertical"          ; vertical label bar
    res@cnLinesOn        = False               ; turn off contour lines
    res@gsnSpreadColors  = True                ; use full range of color map

    res@gsnDraw                  = False            ; don't draw yet
    res@gsnFrame                 = False            ; don't advance frame yet

    res@trYMaxF=90.
    res@trYMinF=-60.

    res@tmXBMode="Explicit"


    plot=new(5,graphic)
    res@gsnLeftString = pool

    plot(0) = gsn_csm_time_lat(wks,data(:,:), res )

    res2=True

    res2@trXMaxF=dimsizes(data1d)+1
    res2@trXMinF=1.


    res2@gsnDraw                  = False            ; don't draw yet
    res2@gsnFrame                 = False
    res2@gsnAttachPlotsXAxis = True
    res2@mpShapeMode = "FreeAspect"
    ;res2@vpWidthF = 0.8
    res2@vpHeightF = 0.15
    ;res2@tmYUseLeft  = False
    res2@tmYLOn= True
    res2@tmYLLabelsOn= False

    res2@trYMaxF=max(yvalues)-.05
    res2@trYMinF=min(yvalues)

    res2@tmYROn= True
    res2@tmYRLabelsOn= True
    res2@tmYRMode="Explicit"
    res2@tmYRValues = yvalues
    res2@tmYRLabels = ylabels

    res2@tmXBMode="Explicit"
    res2@tmXBValues = xvalues
    res2@tmXBLabels = xlabels

    plot(1) = gsn_csm_y(wks,runave(data1d,99,0),res2)
    newplot = gsn_attach_plots(plot(0),(/plot(1)/),res,res2)
    draw(plot(0))
end


procedure plot_hoff_prec_ano(data:float,wkstype,output,title,conversion:string,XBValues:integer, XBLabels:string)
begin
    wks   = gsn_open_wks (wkstype, output )  ; open workstation
    data=convert_prec(data,conversion)
    cmap=def_colormap
    gsn_define_colormap(wks,cmap)

    res                  = True                ; plot mods desired
    res@tmXBMode      = "Explicit" ; label independently
	res@tmXBValues    = XBValues
	res@tmXBLabels    = XBLabels

    res@tiMainString     = title               ; title
    ;res@tmXBLabelStride  = 2                   ; tick mark label stride
    res@tiYAxisString    = "latitude"              ; y axis title

    res@cnFillOn         = True                ; color on
    res@cnFillMode = "RasterFill"

    res@cnLevelSelectionMode = "ExplicitLevels"
    res@cnLevels = (/-250,-200,-150,-100,-50,-10,10,50,100,150,200,250/)
    res@cnFillColors = (/139,138,137,136,135,134,0,133,132,131,130,129,128/)
    res@gsnRightString= "["+data@units+"]"

    ;res@lbLabelStride    = 2                   ; every other label
    res@lbOrientation    = "Vertical"          ; vertical label bar
    res@cnLinesOn        = False               ; turn off contour lines
    res@gsnSpreadColors  = True                ; use full range of color map
    ;res@cnLevelSpacingF  = 5                   ; contour spacing

    plot = gsn_csm_time_lat(wks, data, res )
end


procedure plot_hoff_cpools_ano(data:float,wkstype,output,title:string,XBValues:integer, XBLabels:string)
begin
    wks   = gsn_open_wks (wkstype, output )  ; open workstation
    cmap=def_colormap
    gsn_define_colormap(wks,cmap)
    printVarSummary(data)
    res                  = True                ; plot mods desired
    res@tiMainString     = title               ; title
    ;res@tmXBLabelStride  = 2                   ; tick mark label stride
    res@tiYAxisString    = "latitude"              ; y axis title
    res@tmXBMode      = "Explicit"
    res@tmXBValues    = XBValues
	res@tmXBLabels    = XBLabels

    res@cnFillOn         = True                ; color on
    res@cnFillMode = "RasterFill"

    res@cnLevelSelectionMode = "ExplicitLevels"
    res@cnLevels = (/-5.00,-2.50,-1.00,-0.50,-0.25,-0.05,0.05,0.25,0.50,1.00,2.50,5.00/)
    res@cnFillColors = ispan(13,25,1)
    res@gsnRightString= "[Kg C m-2 (grid box)]"

    ;res@lbLabelStride    = 2                   ; every other label
    res@lbOrientation    = "Vertical"          ; vertical label bar
    res@cnLinesOn        = False               ; turn off contour lines
    res@gsnSpreadColors  = True                ; use full range of color map

    res@gsnDraw                  = False            ; don't draw yet
    res@gsnFrame                 = False            ; don't advance frame yet

    ;res@cnLevelSpacingF  = 5                   ; contour spacing



    printVarSummary(data)
    plot=new(4,graphic)
    res@gsnLeftString = "total"
    plot(0) = gsn_csm_time_lat(wks,data(0,:,:), res )
    getvalues plot@contour
      "cnLevels" : levels
    end getvalues
    res@lbLabelStrings       = sprintf("%4.3f",levels)   ; Format the labels


    res@gsnLeftString = "soil"
    plot(1) = gsn_csm_time_lat(wks,data(1,:,:), res )
    res@gsnLeftString = "green"
    plot(2) = gsn_csm_time_lat(wks,data(2,:,:), res )
    res@gsnLeftString = "gpp"
    plot(3) = gsn_csm_time_lat(wks,data(3,:,:), res )
    resP=True
    resP=set_panel_settings(resP,"","","")
    gsn_panel(wks,plot(0:3),(/2,2/),resP)
end




procedure plot_hoff_cover(covers:float,wkstype,output,title:string,XBValues:integer, XBLabels:string)
begin
    year="8k-0k"
    wks   = gsn_open_wks (wkstype, output )  ; open workstation
    cmap=def_colormap
    gsn_define_colormap(wks,cmap)
    res                  = True                ; plot mods desired
    res@tiMainString     = title               ; title
    ;res@tmXBLabelStride  = 2                   ; tick mark label stride
    res@tiYAxisString    = "latitude"              ; y axis title
    res@cnFillOn         = True                ; color on
    res@cnFillMode = "RasterFill"
    res@cnLevelSelectionMode = "ExplicitLevels"
    res@gsnRightString= "[ ]"
    res@lbOrientation    = "Vertical"          ; vertical label bar
    res@cnLinesOn        = False               ; turn off contour lines
    res@gsnSpreadColors  = True                ; use full range of color map
    res@tmXBValues    = XBValues
	res@tmXBLabels    = XBLabels
    res@cnLevels = (/0.0001,0.005,0.01,0.015,0.02,0.025,0.03,0.035,0.04,0.045,0.05/)
    res@gsnDraw              = False
    res@gsnFrame             = False
    resgreen=res
    resdes=res
    plot=new(5,graphic)
    resgreen@cnFillColors = ispan(26,37,1)
    resdes@cnFillColors = ispan(51,62,1)
   ; plotten of absolute values for carbon pools
   ; desert fraction
   resdes@gsnLeftString = "desert fraction: "+year+" [ ]"

   opt=True
   opt=set_basics_hoff_opt(opt)
   opt@ano=False

   hoff=prepare_hoff(covers(0,2:40,:),opt)
   plot(0) = gsn_csm_time_lat(wks,hoff,resdes)
   ; woody
    hoff=prepare_hoff(covers(1,2:40,:),opt)
   resgreen@gsnLeftString = "woody fraction: "+year+" [ ]"
   plot(1) = gsn_csm_time_lat(wks,hoff,resgreen)
   ; green
   hoff=prepare_hoff(covers(2,2:40,:),opt)
   resgreen@gsnLeftString = "tree fraction: "+year+" [ ]"
   plot(2) = gsn_csm_time_lat(wks, hoff,resgreen)
   ; shrubs
   hoff=prepare_hoff(covers(3,2:40,:),opt)
   resgreen@gsnLeftString = "shrubs fraction: "+year+" [ ]"
   plot(3) = gsn_csm_time_lat(wks, hoff,resgreen)
   ; grass
   hoff=prepare_hoff(covers(4,2:40,:),opt)
   resgreen@gsnLeftString = "grass fraction: "+year+" [ ]"
   plot(4) = gsn_csm_time_lat(wks, hoff,resgreen)
   ;plotting the five figures as a panel
   resP=True
   resP=set_panel_settings(resP,title,year,resdes@gsnRightString)
   gsn_panel(wks,plot(0:4),(/1,2,2/),resP)
    ;res@lbLabelStride    = 2                   ; every other label
    ;res@cnLevelSpacingF  = 5                   ; contour spacing
end



procedure plot_hoff_cover_ano(covers:float,wkstype,output,title:string,XBValues:integer, XBLabels:string)
begin
    year="8k-PI"
    wks   = gsn_open_wks (wkstype, output )  ; open workstation
    cmap=def_colormap
    gsn_define_colormap(wks,cmap)
    res                  = True                ; plot mods desired
    res@tiMainString     = title               ; title
    ;res@tmXBLabelStride  = 2                   ; tick mark label stride
    res@tiYAxisString    = "latitude"              ; y axis title
    res@cnFillOn         = True                ; color on
    res@cnFillMode = "RasterFill"
    res@cnLevelSelectionMode = "ExplicitLevels"
    res@gsnRightString= "[ ]"
    res@lbOrientation    = "Vertical"          ; vertical label bar
    res@cnLinesOn        = False               ; turn off contour lines
    res@gsnSpreadColors  = True                ; use full range of color map
    res@tmXBMode      = "Explicit"
    res@tmXBValues    = XBValues
	res@tmXBLabels    = XBLabels

    lbside="Left"

    if (lbside .eq. "Left" .or. lbside .eq. "Right" ) then
        res@lbOrientation="vertical"
        res@lbLabelAngleF        = 0
        res@lbLabelFontHeightF   = 0.015
        res@pmLabelBarWidthF     = 0.1

        if (lbside .eq. "Left") then
            res@pmLabelBarOrthogonalPosF = -1.445
            res@lbLabelPosition = "Left"
        end if
    end if

    res@cnLevels = (/-0.3,-0.25,-0.20,-0.15,-0.10,-0.05,0.05,0.1,0.15,0.20,0.25,0.30/)

         resgreen=res
    resdes=res
    plot=new(5,graphic)
    resgreen@cnFillColors = ispan(38,50,1)
    resdes@cnFillColors = ispan(63,75,1)
    res@gsnDraw              = False
    res@gsnFrame             = False
    opt=True
    opt=set_basics_hoff_opt(opt)
    opt@ano=True



   ; desert fraction
   resdes@gsnLeftString = "desert fraction: "+year+" [ ]"

   hoff=prepare_hoff(covers(0,:,2:40),opt)
   printVarSummary(hoff)
   plot(0) = gsn_csm_time_lat(wks,hoff,resdes)

   ; woody
    hoff=prepare_hoff(covers(1,:,2:40),opt)

   resgreen@gsnLeftString = "woody fraction: "+year+" [ ]"
   plot(1) = gsn_csm_time_lat(wks,hoff,resgreen)
   ; green
   hoff=prepare_hoff(covers(2,:,2:40),opt)
   resgreen@gsnLeftString = "tree fraction: "+year+" [ ]"
   plot(2) = gsn_csm_time_lat(wks, hoff,resgreen)
   ; shrubs
   hoff=prepare_hoff(covers(3,:,2:40),opt)
   resgreen@gsnLeftString = "shrubs fraction: "+year+" [ ]"
   plot(3) = gsn_csm_time_lat(wks, hoff,resgreen)
   ; grass
   hoff=prepare_hoff(covers(4,:,2:40),opt)
   resgreen@gsnLeftString = "grass fraction: "+year+" [ ]"
   plot(4) = gsn_csm_time_lat(wks, hoff,resgreen)

   ;plotting the five figures as a panel
   resP=True
   resP=set_panel_settings(resP,title,year,resdes@gsnRightString)
   gsn_panel(wks,plot(0:4),(/1,2,2/),resP)


    ;res@lbLabelStride    = 2                   ; every other label
    ;res@cnLevelSpacingF  = 5                   ; contour spacing
end




procedure plot_hoff_fire_ano(data:float,wkstype,output,title:string,XBValues:integer, XBLabels:string)
begin
    wks   = gsn_open_wks (wkstype, output )  ; open workstation
    cmap=def_colormap
    gsn_define_colormap(wks,cmap)
    res                  = True                ; plot mods desired
    res@tmXBMode      = "Explicit" ; label independently
	res@tmXBValues    = XBValues
	res@tmXBLabels    = XBLabels

    res@tiMainString     = title               ; title
    ;res@tmXBLabelStride  = 2                   ; tick mark label stride
    res@tiYAxisString    = "latitude"              ; y axis title
    res@tiXAxisString    = "[kyr BP]"              ; y axis title

    res@cnFillOn         = True                ; color on
    res@cnFillMode = "RasterFill"

    res@cnLevelSelectionMode = "ExplicitLevels"

   res@cnLevels = (/-0.1,-0.075,-0.05,-0.025,-0.005,0.005,0.025,0.05,0.075,0.1/)
   res@cnFillColors = ispan(86,96,1)
   res@gsnRightString= "[M ha]"

    ;res@lbLabelStride    = 2                   ; every other label
    res@lbOrientation    = "Vertical"          ; vertical label bar
    res@cnLinesOn        = False               ; turn off contour lines
    res@gsnSpreadColors  = True                ; use full range of color map
    ;res@cnLevelSpacingF  = 5                   ; contour spacing
    plot = gsn_csm_time_lat(wks, data, res )

end





procedure plot_hoff_fire_anoII(data:float,wkstype,output,title:string,XBValues:integer, XBLabels:string)
begin

    wks   = gsn_open_wks (wkstype, output )  ; open workstation
    cmap=def_colormap
    gsn_define_colormap(wks,cmap)

    res                  = True                ; plot mods desired

    res@tmXTMode      = "Explicit" ; label independently
	res@tmXTValues    = XBValues
	res@tmXTLabels    = XBLabels

    res@tiMainString     = title               ; title
    ;res@tmXBLabelStride  = 2                   ; tick mark label stride
    res@tiYAxisString    = "latitude"              ; y axis title
    ;res@tiXAxisString    = "[kyr BP]"              ; y axis title
    ;res@tiXAxisPosition = "Top"
    res@cnFillOn         = True                ; color on
    res@cnFillMode = "RasterFill"

    res@cnLevelSelectionMode = "ExplicitLevels"

   res@cnLevels = (/-0.1,-0.075,-0.05,-0.025,-0.005,0.005,0.025,0.05,0.075,0.1/)
   res@cnFillColors = ispan(86,96,1)
   res@gsnRightString= "[M ha]"

    ;res@lbLabelStride    = 2                   ; every other label
    res@lbOrientation    = "Vertical"          ; vertical label bar
    res@cnLinesOn        = False               ; turn off contour lines
    res@gsnSpreadColors  = True                ; use full range of color map
    ;res@cnLevelSpacingF  = 5                   ; contour spacing

    res@gsnDraw                  = False            ; don't draw yet
    res@gsnFrame                 = False            ; don't advance frame yet

    res@tmXTOn=True
    res@tmXTLabelsOn=True
    res@tmXBOn=False
    res@tmXTLabelsOn=False

    base_plot = gsn_csm_time_lat(wks, data, res )
;---------------------
    printVarSummary(data)
    xy1res=True
    xy1res@tmXTOn=False
    xy1res@tmXBOn=True
    x=ispan(0,dimsizes(data&time)-1,1)
    y=dim_sum_n_Wrap(data,0)
xy1res@vpHeightF        = .20          ; set width of second plot
    printVarSummary(x)
    printVarSummary(y)


    xy1res@tmXBMode      = "Explicit" ; label independently
	xy1res@tmXBValues    = XBValues
	xy1res@tmXBLabels    = XBLabels

    xy1res@gsnDraw         = False        ; don't draw yet
 xy1res@gsnFrame        = False        ; don't advance frame yet

    plot2 = gsn_csm_xy(wks, x,y,xy1res)


   xy2res=True
   y2=data&lat
    x2=dim_avg_n_Wrap(data(:,0:99),1)
xy2res@vpWidthF        = .20          ; set width of second plot
    printVarSummary(x2)
    printVarSummary(y2)

    plot3 = gsn_csm_xy(wks, x2,y2,xy2res)



;    draw(plot2)
   xy1res@gsnAttachPlotsXAxis = True
   gsn_panel(wks, (/base_plot,plot3,plot2/), (/2,2/), False)






;   attached=gsn_attach_plots(base_plot, plot2, res, xy1res)
;   draw(attached)

end


;;set_plot_settings(opt2dmap)
